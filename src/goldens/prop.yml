in_source: |-
  ( var a 0 ) ( var b 1 ) ( var bound 400000 )
  ( while ( < b bound ) (
  ( if ( = 0 ( % b 2 ) ) ( + ( print b ) ( print _\0 ) ) ( + 0 0 ) )
  ( var tmp b )
  ( var b ( + a b ) )
  ( var a tmp ) ) )
in_stdin: |-
  foo
out_code: |-
  ([97, 99, 0, 0, 4, 0, 1, 400000, 0],
  [{"opcode": "load", "addr_mod": "nep_addr", "addr": 1, "term": "var", "comment": "return 1 if all ok"},
   {"opcode": "push", "addr_mod": "non_addr", "addr": null, "term": "var", "comment": "return 1 if all ok"},
   {"opcode": "load", "addr_mod": "nep_addr", "addr": 1, "term": "var", "comment": "return 1 if all ok"},
   {"opcode": "push", "addr_mod": "non_addr", "addr": null, "term": "var", "comment": "return 1 if all ok"},
   {"opcode": "load", "addr_mod": "nep_addr", "addr": 1, "term": "var", "comment": "return 1 if all ok"},
   {"opcode": "push", "addr_mod": "non_addr", "addr": null, "term": "var", "comment": "return 1 if all ok"},
   {"opcode": "jump", "addr_mod": "non_addr", "addr": 24},
   {"opcode": "load", "addr_mod": "abs_addr", "addr": 6, "term": "print"},
   {"opcode": "output", "addr_mod": "non_addr", "addr": 11, "term": "print"},
   {"opcode": "load", "addr_mod": "nep_addr", "addr": 1, "term": "print"},
   {"opcode": "push", "addr_mod": "non_addr", "addr": null, "term": "print"},
   {"opcode": "load", "addr_mod": "nep_addr", "addr": 95, "term": "print"},
   {"opcode": "output", "addr_mod": "non_addr", "addr": 11, "term": "print"},
   {"opcode": "load", "addr_mod": "nep_addr", "addr": 0, "term": "print"},
   {"opcode": "output", "addr_mod": "non_addr", "addr": 11, "term": "print"},
   {"opcode": "load", "addr_mod": "nep_addr", "addr": 0, "term": "print"},
   {"opcode": "output", "addr_mod": "non_addr", "addr": 11, "term": "print"},
   {"opcode": "load", "addr_mod": "nep_addr", "addr": 1, "term": "print"},
   {"opcode": "push", "addr_mod": "non_addr", "addr": null, "term": "print"},
   {"opcode": "jump", "addr_mod": "non_addr", "addr": 37},
   {"opcode": "load", "addr_mod": "nep_addr", "addr": "0", "term": "+"},
   {"opcode": "add", "addr_mod": "nep_addr", "addr": "0", "term": "+"},
   {"opcode": "push", "addr_mod": "non_addr", "addr": null, "term": "+", "comment": "Return sum value"},
   {"opcode": "jump", "addr_mod": "non_addr", "addr": 37},
   {"opcode": "load", "addr_mod": "abs_addr", "addr": 6},
   {"opcode": "mod", "addr_mod": "nep_addr", "addr": "2"},
   {"opcode": "push", "addr_mod": "non_addr", "addr": null},
   {"opcode": "load", "addr_mod": "nep_addr", "addr": "0", "term": "="},
   {"opcode": "sub", "addr_mod": "tos_addr", "addr": null, "term": "="},
   {"opcode": "jump_if_not_zero", "addr_mod": "non_addr", "addr": 32, "term": "="},
   {"opcode": "load", "addr_mod": "nep_addr", "addr": 1, "term": "="},
   {"opcode": "jump", "addr_mod": "non_addr", "addr": 33, "term": "="},
   {"opcode": "load", "addr_mod": "nep_addr", "addr": 0, "term": "="},
   {"opcode": "push", "addr_mod": "non_addr", "addr": null, "term": "="},
   {"opcode": "pop", "addr_mod": "nep_addr", "addr": null, "term": "if"},
   {"opcode": "jump_if_not_zero", "addr_mod": "non_addr", "addr": 7, "term": "if"},
   {"opcode": "jump", "addr_mod": "non_addr", "addr": 20, "term": "if"},
   {"opcode": "pop", "addr_mod": "nep_addr", "addr": null, "term": "if"},
   {"opcode": "push", "addr_mod": "non_addr", "addr": null, "term": "if"},
   {"opcode": "load", "addr_mod": "abs_addr", "addr": 6, "term": "var", "comment": "Load concrete known value"},
   {"opcode": "store", "addr_mod": "abs_addr", "addr": 8, "term": "var"},
   {"opcode": "load", "addr_mod": "nep_addr", "addr": 1, "term": "var", "comment": "return 1 if all ok"},
   {"opcode": "push", "addr_mod": "non_addr", "addr": null, "term": "var", "comment": "return 1 if all ok"},
   {"opcode": "load", "addr_mod": "abs_addr", "addr": 5, "term": "+"},
   {"opcode": "add", "addr_mod": "abs_addr", "addr": 6, "term": "+"},
   {"opcode": "push", "addr_mod": "non_addr", "addr": null, "term": "+", "comment": "Return sum value"},
   {"opcode": "pop", "addr_mod": "nep_addr", "addr": null, "term": "var"},
   {"opcode": "store", "addr_mod": "abs_addr", "addr": 6, "term": "var"},
   {"opcode": "load", "addr_mod": "nep_addr", "addr": 1, "term": "var", "comment": "return 1 if all ok"},
   {"opcode": "push", "addr_mod": "non_addr", "addr": null, "term": "var", "comment": "return 1 if all ok"},
   {"opcode": "load", "addr_mod": "abs_addr", "addr": 8, "term": "var", "comment": "Load concrete known value"},
   {"opcode": "store", "addr_mod": "abs_addr", "addr": 5, "term": "var"},
   {"opcode": "load", "addr_mod": "nep_addr", "addr": 1, "term": "var", "comment": "return 1 if all ok"},
   {"opcode": "push", "addr_mod": "non_addr", "addr": null, "term": "var", "comment": "return 1 if all ok"},
   {"opcode": "load", "addr_mod": "abs_addr", "addr": 6, "term": "<"},
   {"opcode": "sub", "addr_mod": "abs_addr", "addr": 7, "term": "<"},
   {"opcode": "jump_if_not_neg", "addr_mod": "non_addr", "addr": 59, "term": "<"},
   {"opcode": "load", "addr_mod": "nep_addr", "addr": 1, "term": "<"},
   {"opcode": "jump", "addr_mod": "non_addr", "addr": 60, "term": "<"},
   {"opcode": "load", "addr_mod": "nep_addr", "addr": 0, "term": "<"},
   {"opcode": "push", "addr_mod": "non_addr", "addr": null, "term": "<"},
   {"opcode": "pop", "addr_mod": "nep_addr", "addr": null},
   {"opcode": "jump_if_not_zero", "addr_mod": "non_addr", "addr": 6},
   {"opcode": "load", "addr_mod": "nep_addr", "addr": 1},
   {"opcode": "push", "addr_mod": "non_addr", "addr": null, "term": "while"},
   {"opcode": "halt", "addr_mod": "non_addr", "addr": null}])
out_log: |
  NUM -> ALU_RG
  TICK:   1 PC:   0 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU:   0 RG_ALU:   1 SP: 4000 ZF: 1 |	load   var
  ALU_RES = ALU_RG
  TICK:   2 PC:   0 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU:   0 RG_ALU:   1 SP: 4000 ZF: 0 |	load   var
  ALU_RES -> ACC
  TICK:   3 PC:   0 ADDR:   0 MEM_OUT: 0 ACC: 1 LG_ALU:   0 RG_ALU:   1 SP: 4000 ZF: 0 |	load   var
  SP -> ALU_LG
  TICK:   4 PC:   1 ADDR:   0 MEM_OUT: 0 ACC: 1 LG_ALU: 4000 RG_ALU:   1 SP: 4000 ZF: 0 |	push   var
  ALU_RES = SP - 1
  TICK:   5 PC:   1 ADDR:   0 MEM_OUT: 0 ACC: 1 LG_ALU: 4000 RG_ALU:   1 SP: 4000 ZF: 0 |	push   var
  ALU_RES -> SP
  TICK:   6 PC:   1 ADDR:   0 MEM_OUT: 0 ACC: 1 LG_ALU: 4000 RG_ALU:   1 SP: 3999 ZF: 0 |	push   var
  WRITE ACC -> MEM[ALU]
  TICK:   6 PC:   1 ADDR:   0 MEM_OUT: 0 ACC: 1 LG_ALU: 4000 RG_ALU:   1 SP: 3999 ZF: 0 |	push   var
  NUM -> ALU_RG
  TICK:   7 PC:   2 ADDR:   0 MEM_OUT: 0 ACC: 1 LG_ALU: 4000 RG_ALU:   1 SP: 3999 ZF: 0 |	load   var
  ALU_RES = ALU_RG
  TICK:   8 PC:   2 ADDR:   0 MEM_OUT: 0 ACC: 1 LG_ALU: 4000 RG_ALU:   1 SP: 3999 ZF: 0 |	load   var
  ALU_RES -> ACC
  TICK:   9 PC:   2 ADDR:   0 MEM_OUT: 0 ACC: 1 LG_ALU: 4000 RG_ALU:   1 SP: 3999 ZF: 0 |	load   var
  SP -> ALU_LG
  TICK:  10 PC:   3 ADDR:   0 MEM_OUT: 0 ACC: 1 LG_ALU: 3999 RG_ALU:   1 SP: 3999 ZF: 0 |	push   var
  ALU_RES = SP - 1
  TICK:  11 PC:   3 ADDR:   0 MEM_OUT: 0 ACC: 1 LG_ALU: 3999 RG_ALU:   1 SP: 3999 ZF: 0 |	push   var
  ALU_RES -> SP
  TICK:  12 PC:   3 ADDR:   0 MEM_OUT: 0 ACC: 1 LG_ALU: 3999 RG_ALU:   1 SP: 3998 ZF: 0 |	push   var
  WRITE ACC -> MEM[ALU]
  TICK:  12 PC:   3 ADDR:   0 MEM_OUT: 0 ACC: 1 LG_ALU: 3999 RG_ALU:   1 SP: 3998 ZF: 0 |	push   var
  NUM -> ALU_RG
  TICK:  13 PC:   4 ADDR:   0 MEM_OUT: 0 ACC: 1 LG_ALU: 3999 RG_ALU:   1 SP: 3998 ZF: 0 |	load   var
  ALU_RES = ALU_RG
  TICK:  14 PC:   4 ADDR:   0 MEM_OUT: 0 ACC: 1 LG_ALU: 3999 RG_ALU:   1 SP: 3998 ZF: 0 |	load   var
  ALU_RES -> ACC
  TICK:  15 PC:   4 ADDR:   0 MEM_OUT: 0 ACC: 1 LG_ALU: 3999 RG_ALU:   1 SP: 3998 ZF: 0 |	load   var
  SP -> ALU_LG
  TICK:  16 PC:   5 ADDR:   0 MEM_OUT: 0 ACC: 1 LG_ALU: 3998 RG_ALU:   1 SP: 3998 ZF: 0 |	push   var
  ALU_RES = SP - 1
  TICK:  17 PC:   5 ADDR:   0 MEM_OUT: 0 ACC: 1 LG_ALU: 3998 RG_ALU:   1 SP: 3998 ZF: 0 |	push   var
  ALU_RES -> SP
  TICK:  18 PC:   5 ADDR:   0 MEM_OUT: 0 ACC: 1 LG_ALU: 3998 RG_ALU:   1 SP: 3997 ZF: 0 |	push   var
  WRITE ACC -> MEM[ALU]
  TICK:  18 PC:   5 ADDR:   0 MEM_OUT: 0 ACC: 1 LG_ALU: 3998 RG_ALU:   1 SP: 3997 ZF: 0 |	push   var
  ADDR -> PC
  ADDR -> ALU_RG
  TICK:  20 PC:  24 ADDR:   0 MEM_OUT: 0 ACC: 1 LG_ALU: 3998 RG_ALU:   6 SP: 3997 ZF: 0 |	load
  ALU_RES = ALU_RG
  TICK:  21 PC:  24 ADDR:   0 MEM_OUT: 0 ACC: 1 LG_ALU: 3998 RG_ALU:   6 SP: 3997 ZF: 0 |	load
  READ MEM[ALU]
  TICK:  22 PC:  24 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3998 RG_ALU:   6 SP: 3997 ZF: 0 |	load
  MEM[ALU] -> ALU_RG
  TICK:  23 PC:  24 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3998 RG_ALU:   1 SP: 3997 ZF: 0 |	load
  ALU_RES = ALU_RG
  TICK:  24 PC:  24 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3998 RG_ALU:   1 SP: 3997 ZF: 0 |	load
  ALU_RES -> ACC
  TICK:  25 PC:  24 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3998 RG_ALU:   1 SP: 3997 ZF: 0 |	load
  NUM -> ALU_RG
  TICK:  26 PC:  25 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3998 RG_ALU:   2 SP: 3997 ZF: 0 |	mod
  ACC -> ALU_LG
  TICK:  26 PC:  25 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU:   1 RG_ALU:   2 SP: 3997 ZF: 0 |	mod
  ALU_RES = ALU_LG % ALU_RG
  TICK:  27 PC:  25 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU:   1 RG_ALU:   2 SP: 3997 ZF: 0 |	mod
  ALU_RES -> ACC
  TICK:  28 PC:  25 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU:   1 RG_ALU:   2 SP: 3997 ZF: 0 |	mod
  SP -> ALU_LG
  TICK:  29 PC:  26 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3997 RG_ALU:   2 SP: 3997 ZF: 0 |	push
  ALU_RES = SP - 1
  TICK:  30 PC:  26 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3997 RG_ALU:   2 SP: 3997 ZF: 0 |	push
  ALU_RES -> SP
  TICK:  31 PC:  26 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3997 RG_ALU:   2 SP: 3996 ZF: 0 |	push
  WRITE ACC -> MEM[ALU]
  TICK:  31 PC:  26 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3997 RG_ALU:   2 SP: 3996 ZF: 0 |	push
  NUM -> ALU_RG
  TICK:  32 PC:  27 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3997 RG_ALU:   0 SP: 3996 ZF: 0 |	load   =
  ALU_RES = ALU_RG
  TICK:  33 PC:  27 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3997 RG_ALU:   0 SP: 3996 ZF: 1 |	load   =
  ALU_RES -> ACC
  TICK:  34 PC:  27 ADDR:   0 MEM_OUT: 1 ACC: 0 LG_ALU: 3997 RG_ALU:   0 SP: 3996 ZF: 1 |	load   =
  SP -> ALU_LG
  TICK:  35 PC:  28 ADDR:   0 MEM_OUT: 1 ACC: 0 LG_ALU: 3996 RG_ALU:   0 SP: 3996 ZF: 1 |	sub   =
  ALU_RES = ALU_LG
  TICK:  36 PC:  28 ADDR:   0 MEM_OUT: 1 ACC: 0 LG_ALU: 3996 RG_ALU:   0 SP: 3996 ZF: 0 |	sub   =
  READ MEM[ALU]
  TICK:  37 PC:  28 ADDR:   0 MEM_OUT: 1 ACC: 0 LG_ALU: 3996 RG_ALU:   0 SP: 3996 ZF: 0 |	sub   =
  MEM[ALU] -> ALU_RG
  TICK:  38 PC:  28 ADDR:   0 MEM_OUT: 1 ACC: 0 LG_ALU: 3996 RG_ALU:   1 SP: 3996 ZF: 0 |	sub   =
  ALU_RES = SP + 1
  TICK:  39 PC:  28 ADDR:   0 MEM_OUT: 1 ACC: 0 LG_ALU: 3996 RG_ALU:   1 SP: 3996 ZF: 0 |	sub   =
  ALU_RES -> SP
  TICK:  40 PC:  28 ADDR:   0 MEM_OUT: 1 ACC: 0 LG_ALU: 3996 RG_ALU:   1 SP: 3997 ZF: 0 |	sub   =
  ACC -> ALU_LG
  TICK:  40 PC:  28 ADDR:   0 MEM_OUT: 1 ACC: 0 LG_ALU:   0 RG_ALU:   1 SP: 3997 ZF: 0 |	sub   =
  ALU_RES = ALU_LG + ALU_RG
  TICK:  41 PC:  28 ADDR:   0 MEM_OUT: 1 ACC: 0 LG_ALU:   0 RG_ALU:   1 SP: 3997 ZF: 0 |	sub   =
  ALU_RES -> ACC
  TICK:  42 PC:  28 ADDR:   0 MEM_OUT: 1 ACC: -1 LG_ALU:   0 RG_ALU:   1 SP: 3997 ZF: 0 |	sub   =
  ADDR -> PC
  NUM -> ALU_RG
  TICK:  44 PC:  32 ADDR:   0 MEM_OUT: 1 ACC: -1 LG_ALU:   0 RG_ALU:   0 SP: 3997 ZF: 0 |	load   =
  ALU_RES = ALU_RG
  TICK:  45 PC:  32 ADDR:   0 MEM_OUT: 1 ACC: -1 LG_ALU:   0 RG_ALU:   0 SP: 3997 ZF: 1 |	load   =
  ALU_RES -> ACC
  TICK:  46 PC:  32 ADDR:   0 MEM_OUT: 1 ACC: 0 LG_ALU:   0 RG_ALU:   0 SP: 3997 ZF: 1 |	load   =
  SP -> ALU_LG
  TICK:  47 PC:  33 ADDR:   0 MEM_OUT: 1 ACC: 0 LG_ALU: 3997 RG_ALU:   0 SP: 3997 ZF: 1 |	push   =
  ALU_RES = SP - 1
  TICK:  48 PC:  33 ADDR:   0 MEM_OUT: 1 ACC: 0 LG_ALU: 3997 RG_ALU:   0 SP: 3997 ZF: 0 |	push   =
  ALU_RES -> SP
  TICK:  49 PC:  33 ADDR:   0 MEM_OUT: 1 ACC: 0 LG_ALU: 3997 RG_ALU:   0 SP: 3996 ZF: 0 |	push   =
  WRITE ACC -> MEM[ALU]
  TICK:  49 PC:  33 ADDR:   0 MEM_OUT: 1 ACC: 0 LG_ALU: 3997 RG_ALU:   0 SP: 3996 ZF: 0 |	push   =
  SP -> ALU_LG
  TICK:  50 PC:  34 ADDR:   0 MEM_OUT: 1 ACC: 0 LG_ALU: 3996 RG_ALU:   0 SP: 3996 ZF: 0 |	pop   if
  ALU_RES = ALU_LG
  TICK:  51 PC:  34 ADDR:   0 MEM_OUT: 1 ACC: 0 LG_ALU: 3996 RG_ALU:   0 SP: 3996 ZF: 0 |	pop   if
  READ MEM[ALU]
  TICK:  52 PC:  34 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3996 RG_ALU:   0 SP: 3996 ZF: 0 |	pop   if
  ALU_RES = SP + 1
  TICK:  53 PC:  34 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3996 RG_ALU:   0 SP: 3996 ZF: 0 |	pop   if
  ALU_RES -> SP
  TICK:  54 PC:  34 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3996 RG_ALU:   0 SP: 3997 ZF: 0 |	pop   if
  MEM[ALU] -> ALU_RG
  TICK:  54 PC:  34 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3996 RG_ALU:   0 SP: 3997 ZF: 0 |	pop   if
  ALU_RES = ALU_RG
  TICK:  55 PC:  34 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3996 RG_ALU:   0 SP: 3997 ZF: 1 |	pop   if
  ALU_RES -> ACC
  TICK:  56 PC:  34 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3996 RG_ALU:   0 SP: 3997 ZF: 1 |	pop   if
  PC + 1 -> PC
  ADDR -> PC
  NUM -> ALU_RG
  TICK:  58 PC:  20 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3996 RG_ALU:   0 SP: 3997 ZF: 1 |	load   +
  ALU_RES = ALU_RG
  TICK:  59 PC:  20 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3996 RG_ALU:   0 SP: 3997 ZF: 1 |	load   +
  ALU_RES -> ACC
  TICK:  60 PC:  20 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3996 RG_ALU:   0 SP: 3997 ZF: 1 |	load   +
  NUM -> ALU_RG
  TICK:  61 PC:  21 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3996 RG_ALU:   0 SP: 3997 ZF: 1 |	add   +
  ACC -> ALU_LG
  TICK:  61 PC:  21 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU:   0 RG_ALU:   0 SP: 3997 ZF: 1 |	add   +
  ALU_RES = ALU_LG + ALU_RG
  TICK:  62 PC:  21 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU:   0 RG_ALU:   0 SP: 3997 ZF: 1 |	add   +
  ALU_RES -> ACC
  TICK:  63 PC:  21 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU:   0 RG_ALU:   0 SP: 3997 ZF: 1 |	add   +
  SP -> ALU_LG
  TICK:  64 PC:  22 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3997 RG_ALU:   0 SP: 3997 ZF: 1 |	push   +
  ALU_RES = SP - 1
  TICK:  65 PC:  22 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3997 RG_ALU:   0 SP: 3997 ZF: 0 |	push   +
  ALU_RES -> SP
  TICK:  66 PC:  22 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3997 RG_ALU:   0 SP: 3996 ZF: 0 |	push   +
  WRITE ACC -> MEM[ALU]
  TICK:  66 PC:  22 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3997 RG_ALU:   0 SP: 3996 ZF: 0 |	push   +
  ADDR -> PC
  SP -> ALU_LG
  TICK:  68 PC:  37 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3996 RG_ALU:   0 SP: 3996 ZF: 0 |	pop   if
  ALU_RES = ALU_LG
  TICK:  69 PC:  37 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3996 RG_ALU:   0 SP: 3996 ZF: 0 |	pop   if
  READ MEM[ALU]
  TICK:  70 PC:  37 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3996 RG_ALU:   0 SP: 3996 ZF: 0 |	pop   if
  ALU_RES = SP + 1
  TICK:  71 PC:  37 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3996 RG_ALU:   0 SP: 3996 ZF: 0 |	pop   if
  ALU_RES -> SP
  TICK:  72 PC:  37 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3996 RG_ALU:   0 SP: 3997 ZF: 0 |	pop   if
  MEM[ALU] -> ALU_RG
  TICK:  72 PC:  37 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3996 RG_ALU:   0 SP: 3997 ZF: 0 |	pop   if
  ALU_RES = ALU_RG
  TICK:  73 PC:  37 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3996 RG_ALU:   0 SP: 3997 ZF: 1 |	pop   if
  ALU_RES -> ACC
  TICK:  74 PC:  37 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3996 RG_ALU:   0 SP: 3997 ZF: 1 |	pop   if
  SP -> ALU_LG
  TICK:  75 PC:  38 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3997 RG_ALU:   0 SP: 3997 ZF: 1 |	push   if
  ALU_RES = SP - 1
  TICK:  76 PC:  38 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3997 RG_ALU:   0 SP: 3997 ZF: 0 |	push   if
  ALU_RES -> SP
  TICK:  77 PC:  38 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3997 RG_ALU:   0 SP: 3996 ZF: 0 |	push   if
  WRITE ACC -> MEM[ALU]
  TICK:  77 PC:  38 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3997 RG_ALU:   0 SP: 3996 ZF: 0 |	push   if
  ADDR -> ALU_RG
  TICK:  78 PC:  39 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3997 RG_ALU:   6 SP: 3996 ZF: 0 |	load   var
  ALU_RES = ALU_RG
  TICK:  79 PC:  39 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3997 RG_ALU:   6 SP: 3996 ZF: 0 |	load   var
  READ MEM[ALU]
  TICK:  80 PC:  39 ADDR:   0 MEM_OUT: 1 ACC: 0 LG_ALU: 3997 RG_ALU:   6 SP: 3996 ZF: 0 |	load   var
  MEM[ALU] -> ALU_RG
  TICK:  81 PC:  39 ADDR:   0 MEM_OUT: 1 ACC: 0 LG_ALU: 3997 RG_ALU:   1 SP: 3996 ZF: 0 |	load   var
  ALU_RES = ALU_RG
  TICK:  82 PC:  39 ADDR:   0 MEM_OUT: 1 ACC: 0 LG_ALU: 3997 RG_ALU:   1 SP: 3996 ZF: 0 |	load   var
  ALU_RES -> ACC
  TICK:  83 PC:  39 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3997 RG_ALU:   1 SP: 3996 ZF: 0 |	load   var
  ADDR -> ALU_RG
  TICK:  84 PC:  40 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3997 RG_ALU:   8 SP: 3996 ZF: 0 |	store   var
  ALU_RES = ALU_RG
  TICK:  85 PC:  40 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3997 RG_ALU:   8 SP: 3996 ZF: 0 |	store   var
  WRITE ACC -> MEM[ALU]
  TICK:  86 PC:  40 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3997 RG_ALU:   8 SP: 3996 ZF: 0 |	store   var
  NUM -> ALU_RG
  TICK:  87 PC:  41 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3997 RG_ALU:   1 SP: 3996 ZF: 0 |	load   var
  ALU_RES = ALU_RG
  TICK:  88 PC:  41 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3997 RG_ALU:   1 SP: 3996 ZF: 0 |	load   var
  ALU_RES -> ACC
  TICK:  89 PC:  41 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3997 RG_ALU:   1 SP: 3996 ZF: 0 |	load   var
  SP -> ALU_LG
  TICK:  90 PC:  42 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3996 RG_ALU:   1 SP: 3996 ZF: 0 |	push   var
  ALU_RES = SP - 1
  TICK:  91 PC:  42 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3996 RG_ALU:   1 SP: 3996 ZF: 0 |	push   var
  ALU_RES -> SP
  TICK:  92 PC:  42 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3996 RG_ALU:   1 SP: 3995 ZF: 0 |	push   var
  WRITE ACC -> MEM[ALU]
  TICK:  92 PC:  42 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3996 RG_ALU:   1 SP: 3995 ZF: 0 |	push   var
  ADDR -> ALU_RG
  TICK:  93 PC:  43 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3996 RG_ALU:   5 SP: 3995 ZF: 0 |	load   +
  ALU_RES = ALU_RG
  TICK:  94 PC:  43 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3996 RG_ALU:   5 SP: 3995 ZF: 0 |	load   +
  READ MEM[ALU]
  TICK:  95 PC:  43 ADDR:   0 MEM_OUT: 0 ACC: 1 LG_ALU: 3996 RG_ALU:   5 SP: 3995 ZF: 0 |	load   +
  MEM[ALU] -> ALU_RG
  TICK:  96 PC:  43 ADDR:   0 MEM_OUT: 0 ACC: 1 LG_ALU: 3996 RG_ALU:   0 SP: 3995 ZF: 0 |	load   +
  ALU_RES = ALU_RG
  TICK:  97 PC:  43 ADDR:   0 MEM_OUT: 0 ACC: 1 LG_ALU: 3996 RG_ALU:   0 SP: 3995 ZF: 1 |	load   +
  ALU_RES -> ACC
  TICK:  98 PC:  43 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3996 RG_ALU:   0 SP: 3995 ZF: 1 |	load   +
  ADDR -> ALU_RG
  TICK:  99 PC:  44 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3996 RG_ALU:   6 SP: 3995 ZF: 1 |	add   +
  ALU_RES = ALU_RG
  TICK: 100 PC:  44 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3996 RG_ALU:   6 SP: 3995 ZF: 0 |	add   +
  READ MEM[ALU]
  TICK: 101 PC:  44 ADDR:   0 MEM_OUT: 1 ACC: 0 LG_ALU: 3996 RG_ALU:   6 SP: 3995 ZF: 0 |	add   +
  MEM[ALU] -> ALU_RG
  TICK: 102 PC:  44 ADDR:   0 MEM_OUT: 1 ACC: 0 LG_ALU: 3996 RG_ALU:   1 SP: 3995 ZF: 0 |	add   +
  ACC -> ALU_LG
  TICK: 102 PC:  44 ADDR:   0 MEM_OUT: 1 ACC: 0 LG_ALU:   0 RG_ALU:   1 SP: 3995 ZF: 0 |	add   +
  ALU_RES = ALU_LG + ALU_RG
  TICK: 103 PC:  44 ADDR:   0 MEM_OUT: 1 ACC: 0 LG_ALU:   0 RG_ALU:   1 SP: 3995 ZF: 0 |	add   +
  ALU_RES -> ACC
  TICK: 104 PC:  44 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU:   0 RG_ALU:   1 SP: 3995 ZF: 0 |	add   +
  SP -> ALU_LG
  TICK: 105 PC:  45 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3995 RG_ALU:   1 SP: 3995 ZF: 0 |	push   +
  ALU_RES = SP - 1
  TICK: 106 PC:  45 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3995 RG_ALU:   1 SP: 3995 ZF: 0 |	push   +
  ALU_RES -> SP
  TICK: 107 PC:  45 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3995 RG_ALU:   1 SP: 3994 ZF: 0 |	push   +
  WRITE ACC -> MEM[ALU]
  TICK: 107 PC:  45 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3995 RG_ALU:   1 SP: 3994 ZF: 0 |	push   +
  SP -> ALU_LG
  TICK: 108 PC:  46 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3994 RG_ALU:   1 SP: 3994 ZF: 0 |	pop   var
  ALU_RES = ALU_LG
  TICK: 109 PC:  46 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3994 RG_ALU:   1 SP: 3994 ZF: 0 |	pop   var
  READ MEM[ALU]
  TICK: 110 PC:  46 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3994 RG_ALU:   1 SP: 3994 ZF: 0 |	pop   var
  ALU_RES = SP + 1
  TICK: 111 PC:  46 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3994 RG_ALU:   1 SP: 3994 ZF: 0 |	pop   var
  ALU_RES -> SP
  TICK: 112 PC:  46 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3994 RG_ALU:   1 SP: 3995 ZF: 0 |	pop   var
  MEM[ALU] -> ALU_RG
  TICK: 112 PC:  46 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3994 RG_ALU:   1 SP: 3995 ZF: 0 |	pop   var
  ALU_RES = ALU_RG
  TICK: 113 PC:  46 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3994 RG_ALU:   1 SP: 3995 ZF: 0 |	pop   var
  ALU_RES -> ACC
  TICK: 114 PC:  46 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3994 RG_ALU:   1 SP: 3995 ZF: 0 |	pop   var
  ADDR -> ALU_RG
  TICK: 115 PC:  47 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3994 RG_ALU:   6 SP: 3995 ZF: 0 |	store   var
  ALU_RES = ALU_RG
  TICK: 116 PC:  47 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3994 RG_ALU:   6 SP: 3995 ZF: 0 |	store   var
  WRITE ACC -> MEM[ALU]
  TICK: 117 PC:  47 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3994 RG_ALU:   6 SP: 3995 ZF: 0 |	store   var
  NUM -> ALU_RG
  TICK: 118 PC:  48 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3994 RG_ALU:   1 SP: 3995 ZF: 0 |	load   var
  ALU_RES = ALU_RG
  TICK: 119 PC:  48 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3994 RG_ALU:   1 SP: 3995 ZF: 0 |	load   var
  ALU_RES -> ACC
  TICK: 120 PC:  48 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3994 RG_ALU:   1 SP: 3995 ZF: 0 |	load   var
  SP -> ALU_LG
  TICK: 121 PC:  49 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3995 RG_ALU:   1 SP: 3995 ZF: 0 |	push   var
  ALU_RES = SP - 1
  TICK: 122 PC:  49 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3995 RG_ALU:   1 SP: 3995 ZF: 0 |	push   var
  ALU_RES -> SP
  TICK: 123 PC:  49 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3995 RG_ALU:   1 SP: 3994 ZF: 0 |	push   var
  WRITE ACC -> MEM[ALU]
  TICK: 123 PC:  49 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3995 RG_ALU:   1 SP: 3994 ZF: 0 |	push   var
  ADDR -> ALU_RG
  TICK: 124 PC:  50 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3995 RG_ALU:   8 SP: 3994 ZF: 0 |	load   var
  ALU_RES = ALU_RG
  TICK: 125 PC:  50 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3995 RG_ALU:   8 SP: 3994 ZF: 0 |	load   var
  READ MEM[ALU]
  TICK: 126 PC:  50 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3995 RG_ALU:   8 SP: 3994 ZF: 0 |	load   var
  MEM[ALU] -> ALU_RG
  TICK: 127 PC:  50 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3995 RG_ALU:   1 SP: 3994 ZF: 0 |	load   var
  ALU_RES = ALU_RG
  TICK: 128 PC:  50 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3995 RG_ALU:   1 SP: 3994 ZF: 0 |	load   var
  ALU_RES -> ACC
  TICK: 129 PC:  50 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3995 RG_ALU:   1 SP: 3994 ZF: 0 |	load   var
  ADDR -> ALU_RG
  TICK: 130 PC:  51 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3995 RG_ALU:   5 SP: 3994 ZF: 0 |	store   var
  ALU_RES = ALU_RG
  TICK: 131 PC:  51 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3995 RG_ALU:   5 SP: 3994 ZF: 0 |	store   var
  WRITE ACC -> MEM[ALU]
  TICK: 132 PC:  51 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3995 RG_ALU:   5 SP: 3994 ZF: 0 |	store   var
  NUM -> ALU_RG
  TICK: 133 PC:  52 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3995 RG_ALU:   1 SP: 3994 ZF: 0 |	load   var
  ALU_RES = ALU_RG
  TICK: 134 PC:  52 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3995 RG_ALU:   1 SP: 3994 ZF: 0 |	load   var
  ALU_RES -> ACC
  TICK: 135 PC:  52 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3995 RG_ALU:   1 SP: 3994 ZF: 0 |	load   var
  SP -> ALU_LG
  TICK: 136 PC:  53 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3994 RG_ALU:   1 SP: 3994 ZF: 0 |	push   var
  ALU_RES = SP - 1
  TICK: 137 PC:  53 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3994 RG_ALU:   1 SP: 3994 ZF: 0 |	push   var
  ALU_RES -> SP
  TICK: 138 PC:  53 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3994 RG_ALU:   1 SP: 3993 ZF: 0 |	push   var
  WRITE ACC -> MEM[ALU]
  TICK: 138 PC:  53 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3994 RG_ALU:   1 SP: 3993 ZF: 0 |	push   var
  ADDR -> ALU_RG
  TICK: 139 PC:  54 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3994 RG_ALU:   6 SP: 3993 ZF: 0 |	load   <
  ALU_RES = ALU_RG
  TICK: 140 PC:  54 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3994 RG_ALU:   6 SP: 3993 ZF: 0 |	load   <
  READ MEM[ALU]
  TICK: 141 PC:  54 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3994 RG_ALU:   6 SP: 3993 ZF: 0 |	load   <
  MEM[ALU] -> ALU_RG
  TICK: 142 PC:  54 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3994 RG_ALU:   1 SP: 3993 ZF: 0 |	load   <
  ALU_RES = ALU_RG
  TICK: 143 PC:  54 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3994 RG_ALU:   1 SP: 3993 ZF: 0 |	load   <
  ALU_RES -> ACC
  TICK: 144 PC:  54 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3994 RG_ALU:   1 SP: 3993 ZF: 0 |	load   <
  ADDR -> ALU_RG
  TICK: 145 PC:  55 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3994 RG_ALU:   7 SP: 3993 ZF: 0 |	sub   <
  ALU_RES = ALU_RG
  TICK: 146 PC:  55 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3994 RG_ALU:   7 SP: 3993 ZF: 0 |	sub   <
  READ MEM[ALU]
  TICK: 147 PC:  55 ADDR:   0 MEM_OUT: 400000 ACC: 1 LG_ALU: 3994 RG_ALU:   7 SP: 3993 ZF: 0 |	sub   <
  MEM[ALU] -> ALU_RG
  TICK: 148 PC:  55 ADDR:   0 MEM_OUT: 400000 ACC: 1 LG_ALU: 3994 RG_ALU: 400000 SP: 3993 ZF: 0 |	sub   <
  ACC -> ALU_LG
  TICK: 148 PC:  55 ADDR:   0 MEM_OUT: 400000 ACC: 1 LG_ALU:   1 RG_ALU: 400000 SP: 3993 ZF: 0 |	sub   <
  ALU_RES = ALU_LG + ALU_RG
  TICK: 149 PC:  55 ADDR:   0 MEM_OUT: 400000 ACC: 1 LG_ALU:   1 RG_ALU: 400000 SP: 3993 ZF: 0 |	sub   <
  ALU_RES -> ACC
  TICK: 150 PC:  55 ADDR:   0 MEM_OUT: 400000 ACC: -399999 LG_ALU:   1 RG_ALU: 400000 SP: 3993 ZF: 0 |	sub   <
  PC + 1 -> PC
  NUM -> ALU_RG
  TICK: 151 PC:  57 ADDR:   0 MEM_OUT: 400000 ACC: -399999 LG_ALU:   1 RG_ALU:   1 SP: 3993 ZF: 0 |	load   <
  ALU_RES = ALU_RG
  TICK: 152 PC:  57 ADDR:   0 MEM_OUT: 400000 ACC: -399999 LG_ALU:   1 RG_ALU:   1 SP: 3993 ZF: 0 |	load   <
  ALU_RES -> ACC
  TICK: 153 PC:  57 ADDR:   0 MEM_OUT: 400000 ACC: 1 LG_ALU:   1 RG_ALU:   1 SP: 3993 ZF: 0 |	load   <
  ADDR -> PC
  SP -> ALU_LG
  TICK: 155 PC:  60 ADDR:   0 MEM_OUT: 400000 ACC: 1 LG_ALU: 3993 RG_ALU:   1 SP: 3993 ZF: 0 |	push   <
  ALU_RES = SP - 1
  TICK: 156 PC:  60 ADDR:   0 MEM_OUT: 400000 ACC: 1 LG_ALU: 3993 RG_ALU:   1 SP: 3993 ZF: 0 |	push   <
  ALU_RES -> SP
  TICK: 157 PC:  60 ADDR:   0 MEM_OUT: 400000 ACC: 1 LG_ALU: 3993 RG_ALU:   1 SP: 3992 ZF: 0 |	push   <
  WRITE ACC -> MEM[ALU]
  TICK: 157 PC:  60 ADDR:   0 MEM_OUT: 400000 ACC: 1 LG_ALU: 3993 RG_ALU:   1 SP: 3992 ZF: 0 |	push   <
  SP -> ALU_LG
  TICK: 158 PC:  61 ADDR:   0 MEM_OUT: 400000 ACC: 1 LG_ALU: 3992 RG_ALU:   1 SP: 3992 ZF: 0 |	pop
  ALU_RES = ALU_LG
  TICK: 159 PC:  61 ADDR:   0 MEM_OUT: 400000 ACC: 1 LG_ALU: 3992 RG_ALU:   1 SP: 3992 ZF: 0 |	pop
  READ MEM[ALU]
  TICK: 160 PC:  61 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3992 RG_ALU:   1 SP: 3992 ZF: 0 |	pop
  ALU_RES = SP + 1
  TICK: 161 PC:  61 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3992 RG_ALU:   1 SP: 3992 ZF: 0 |	pop
  ALU_RES -> SP
  TICK: 162 PC:  61 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3992 RG_ALU:   1 SP: 3993 ZF: 0 |	pop
  MEM[ALU] -> ALU_RG
  TICK: 162 PC:  61 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3992 RG_ALU:   1 SP: 3993 ZF: 0 |	pop
  ALU_RES = ALU_RG
  TICK: 163 PC:  61 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3992 RG_ALU:   1 SP: 3993 ZF: 0 |	pop
  ALU_RES -> ACC
  TICK: 164 PC:  61 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3992 RG_ALU:   1 SP: 3993 ZF: 0 |	pop
  ADDR -> PC
  ADDR -> PC
  ADDR -> ALU_RG
  TICK: 167 PC:  24 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3992 RG_ALU:   6 SP: 3993 ZF: 0 |	load
  ALU_RES = ALU_RG
  TICK: 168 PC:  24 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3992 RG_ALU:   6 SP: 3993 ZF: 0 |	load
  READ MEM[ALU]
  TICK: 169 PC:  24 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3992 RG_ALU:   6 SP: 3993 ZF: 0 |	load
  MEM[ALU] -> ALU_RG
  TICK: 170 PC:  24 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3992 RG_ALU:   1 SP: 3993 ZF: 0 |	load
  ALU_RES = ALU_RG
  TICK: 171 PC:  24 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3992 RG_ALU:   1 SP: 3993 ZF: 0 |	load
  ALU_RES -> ACC
  TICK: 172 PC:  24 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3992 RG_ALU:   1 SP: 3993 ZF: 0 |	load
  NUM -> ALU_RG
  TICK: 173 PC:  25 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3992 RG_ALU:   2 SP: 3993 ZF: 0 |	mod
  ACC -> ALU_LG
  TICK: 173 PC:  25 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU:   1 RG_ALU:   2 SP: 3993 ZF: 0 |	mod
  ALU_RES = ALU_LG % ALU_RG
  TICK: 174 PC:  25 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU:   1 RG_ALU:   2 SP: 3993 ZF: 0 |	mod
  ALU_RES -> ACC
  TICK: 175 PC:  25 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU:   1 RG_ALU:   2 SP: 3993 ZF: 0 |	mod
  SP -> ALU_LG
  TICK: 176 PC:  26 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3993 RG_ALU:   2 SP: 3993 ZF: 0 |	push
  ALU_RES = SP - 1
  TICK: 177 PC:  26 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3993 RG_ALU:   2 SP: 3993 ZF: 0 |	push
  ALU_RES -> SP
  TICK: 178 PC:  26 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3993 RG_ALU:   2 SP: 3992 ZF: 0 |	push
  WRITE ACC -> MEM[ALU]
  TICK: 178 PC:  26 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3993 RG_ALU:   2 SP: 3992 ZF: 0 |	push
  NUM -> ALU_RG
  TICK: 179 PC:  27 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3993 RG_ALU:   0 SP: 3992 ZF: 0 |	load   =
  ALU_RES = ALU_RG
  TICK: 180 PC:  27 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3993 RG_ALU:   0 SP: 3992 ZF: 1 |	load   =
  ALU_RES -> ACC
  TICK: 181 PC:  27 ADDR:   0 MEM_OUT: 1 ACC: 0 LG_ALU: 3993 RG_ALU:   0 SP: 3992 ZF: 1 |	load   =
  SP -> ALU_LG
  TICK: 182 PC:  28 ADDR:   0 MEM_OUT: 1 ACC: 0 LG_ALU: 3992 RG_ALU:   0 SP: 3992 ZF: 1 |	sub   =
  ALU_RES = ALU_LG
  TICK: 183 PC:  28 ADDR:   0 MEM_OUT: 1 ACC: 0 LG_ALU: 3992 RG_ALU:   0 SP: 3992 ZF: 0 |	sub   =
  READ MEM[ALU]
  TICK: 184 PC:  28 ADDR:   0 MEM_OUT: 1 ACC: 0 LG_ALU: 3992 RG_ALU:   0 SP: 3992 ZF: 0 |	sub   =
  MEM[ALU] -> ALU_RG
  TICK: 185 PC:  28 ADDR:   0 MEM_OUT: 1 ACC: 0 LG_ALU: 3992 RG_ALU:   1 SP: 3992 ZF: 0 |	sub   =
  ALU_RES = SP + 1
  TICK: 186 PC:  28 ADDR:   0 MEM_OUT: 1 ACC: 0 LG_ALU: 3992 RG_ALU:   1 SP: 3992 ZF: 0 |	sub   =
  ALU_RES -> SP
  TICK: 187 PC:  28 ADDR:   0 MEM_OUT: 1 ACC: 0 LG_ALU: 3992 RG_ALU:   1 SP: 3993 ZF: 0 |	sub   =
  ACC -> ALU_LG
  TICK: 187 PC:  28 ADDR:   0 MEM_OUT: 1 ACC: 0 LG_ALU:   0 RG_ALU:   1 SP: 3993 ZF: 0 |	sub   =
  ALU_RES = ALU_LG + ALU_RG
  TICK: 188 PC:  28 ADDR:   0 MEM_OUT: 1 ACC: 0 LG_ALU:   0 RG_ALU:   1 SP: 3993 ZF: 0 |	sub   =
  ALU_RES -> ACC
  TICK: 189 PC:  28 ADDR:   0 MEM_OUT: 1 ACC: -1 LG_ALU:   0 RG_ALU:   1 SP: 3993 ZF: 0 |	sub   =
  ADDR -> PC
  NUM -> ALU_RG
  TICK: 191 PC:  32 ADDR:   0 MEM_OUT: 1 ACC: -1 LG_ALU:   0 RG_ALU:   0 SP: 3993 ZF: 0 |	load   =
  ALU_RES = ALU_RG
  TICK: 192 PC:  32 ADDR:   0 MEM_OUT: 1 ACC: -1 LG_ALU:   0 RG_ALU:   0 SP: 3993 ZF: 1 |	load   =
  ALU_RES -> ACC
  TICK: 193 PC:  32 ADDR:   0 MEM_OUT: 1 ACC: 0 LG_ALU:   0 RG_ALU:   0 SP: 3993 ZF: 1 |	load   =
  SP -> ALU_LG
  TICK: 194 PC:  33 ADDR:   0 MEM_OUT: 1 ACC: 0 LG_ALU: 3993 RG_ALU:   0 SP: 3993 ZF: 1 |	push   =
  ALU_RES = SP - 1
  TICK: 195 PC:  33 ADDR:   0 MEM_OUT: 1 ACC: 0 LG_ALU: 3993 RG_ALU:   0 SP: 3993 ZF: 0 |	push   =
  ALU_RES -> SP
  TICK: 196 PC:  33 ADDR:   0 MEM_OUT: 1 ACC: 0 LG_ALU: 3993 RG_ALU:   0 SP: 3992 ZF: 0 |	push   =
  WRITE ACC -> MEM[ALU]
  TICK: 196 PC:  33 ADDR:   0 MEM_OUT: 1 ACC: 0 LG_ALU: 3993 RG_ALU:   0 SP: 3992 ZF: 0 |	push   =
  SP -> ALU_LG
  TICK: 197 PC:  34 ADDR:   0 MEM_OUT: 1 ACC: 0 LG_ALU: 3992 RG_ALU:   0 SP: 3992 ZF: 0 |	pop   if
  ALU_RES = ALU_LG
  TICK: 198 PC:  34 ADDR:   0 MEM_OUT: 1 ACC: 0 LG_ALU: 3992 RG_ALU:   0 SP: 3992 ZF: 0 |	pop   if
  READ MEM[ALU]
  TICK: 199 PC:  34 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3992 RG_ALU:   0 SP: 3992 ZF: 0 |	pop   if
  ALU_RES = SP + 1
  TICK: 200 PC:  34 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3992 RG_ALU:   0 SP: 3992 ZF: 0 |	pop   if
  ALU_RES -> SP
  TICK: 201 PC:  34 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3992 RG_ALU:   0 SP: 3993 ZF: 0 |	pop   if
  MEM[ALU] -> ALU_RG
  TICK: 201 PC:  34 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3992 RG_ALU:   0 SP: 3993 ZF: 0 |	pop   if
  ALU_RES = ALU_RG
  TICK: 202 PC:  34 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3992 RG_ALU:   0 SP: 3993 ZF: 1 |	pop   if
  ALU_RES -> ACC
  TICK: 203 PC:  34 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3992 RG_ALU:   0 SP: 3993 ZF: 1 |	pop   if
  PC + 1 -> PC
  ADDR -> PC
  NUM -> ALU_RG
  TICK: 205 PC:  20 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3992 RG_ALU:   0 SP: 3993 ZF: 1 |	load   +
  ALU_RES = ALU_RG
  TICK: 206 PC:  20 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3992 RG_ALU:   0 SP: 3993 ZF: 1 |	load   +
  ALU_RES -> ACC
  TICK: 207 PC:  20 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3992 RG_ALU:   0 SP: 3993 ZF: 1 |	load   +
  NUM -> ALU_RG
  TICK: 208 PC:  21 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3992 RG_ALU:   0 SP: 3993 ZF: 1 |	add   +
  ACC -> ALU_LG
  TICK: 208 PC:  21 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU:   0 RG_ALU:   0 SP: 3993 ZF: 1 |	add   +
  ALU_RES = ALU_LG + ALU_RG
  TICK: 209 PC:  21 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU:   0 RG_ALU:   0 SP: 3993 ZF: 1 |	add   +
  ALU_RES -> ACC
  TICK: 210 PC:  21 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU:   0 RG_ALU:   0 SP: 3993 ZF: 1 |	add   +
  SP -> ALU_LG
  TICK: 211 PC:  22 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3993 RG_ALU:   0 SP: 3993 ZF: 1 |	push   +
  ALU_RES = SP - 1
  TICK: 212 PC:  22 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3993 RG_ALU:   0 SP: 3993 ZF: 0 |	push   +
  ALU_RES -> SP
  TICK: 213 PC:  22 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3993 RG_ALU:   0 SP: 3992 ZF: 0 |	push   +
  WRITE ACC -> MEM[ALU]
  TICK: 213 PC:  22 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3993 RG_ALU:   0 SP: 3992 ZF: 0 |	push   +
  ADDR -> PC
  SP -> ALU_LG
  TICK: 215 PC:  37 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3992 RG_ALU:   0 SP: 3992 ZF: 0 |	pop   if
  ALU_RES = ALU_LG
  TICK: 216 PC:  37 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3992 RG_ALU:   0 SP: 3992 ZF: 0 |	pop   if
  READ MEM[ALU]
  TICK: 217 PC:  37 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3992 RG_ALU:   0 SP: 3992 ZF: 0 |	pop   if
  ALU_RES = SP + 1
  TICK: 218 PC:  37 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3992 RG_ALU:   0 SP: 3992 ZF: 0 |	pop   if
  ALU_RES -> SP
  TICK: 219 PC:  37 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3992 RG_ALU:   0 SP: 3993 ZF: 0 |	pop   if
  MEM[ALU] -> ALU_RG
  TICK: 219 PC:  37 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3992 RG_ALU:   0 SP: 3993 ZF: 0 |	pop   if
  ALU_RES = ALU_RG
  TICK: 220 PC:  37 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3992 RG_ALU:   0 SP: 3993 ZF: 1 |	pop   if
  ALU_RES -> ACC
  TICK: 221 PC:  37 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3992 RG_ALU:   0 SP: 3993 ZF: 1 |	pop   if
  SP -> ALU_LG
  TICK: 222 PC:  38 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3993 RG_ALU:   0 SP: 3993 ZF: 1 |	push   if
  ALU_RES = SP - 1
  TICK: 223 PC:  38 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3993 RG_ALU:   0 SP: 3993 ZF: 0 |	push   if
  ALU_RES -> SP
  TICK: 224 PC:  38 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3993 RG_ALU:   0 SP: 3992 ZF: 0 |	push   if
  WRITE ACC -> MEM[ALU]
  TICK: 224 PC:  38 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3993 RG_ALU:   0 SP: 3992 ZF: 0 |	push   if
  ADDR -> ALU_RG
  TICK: 225 PC:  39 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3993 RG_ALU:   6 SP: 3992 ZF: 0 |	load   var
  ALU_RES = ALU_RG
  TICK: 226 PC:  39 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3993 RG_ALU:   6 SP: 3992 ZF: 0 |	load   var
  READ MEM[ALU]
  TICK: 227 PC:  39 ADDR:   0 MEM_OUT: 1 ACC: 0 LG_ALU: 3993 RG_ALU:   6 SP: 3992 ZF: 0 |	load   var
  MEM[ALU] -> ALU_RG
  TICK: 228 PC:  39 ADDR:   0 MEM_OUT: 1 ACC: 0 LG_ALU: 3993 RG_ALU:   1 SP: 3992 ZF: 0 |	load   var
  ALU_RES = ALU_RG
  TICK: 229 PC:  39 ADDR:   0 MEM_OUT: 1 ACC: 0 LG_ALU: 3993 RG_ALU:   1 SP: 3992 ZF: 0 |	load   var
  ALU_RES -> ACC
  TICK: 230 PC:  39 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3993 RG_ALU:   1 SP: 3992 ZF: 0 |	load   var
  ADDR -> ALU_RG
  TICK: 231 PC:  40 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3993 RG_ALU:   8 SP: 3992 ZF: 0 |	store   var
  ALU_RES = ALU_RG
  TICK: 232 PC:  40 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3993 RG_ALU:   8 SP: 3992 ZF: 0 |	store   var
  WRITE ACC -> MEM[ALU]
  TICK: 233 PC:  40 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3993 RG_ALU:   8 SP: 3992 ZF: 0 |	store   var
  NUM -> ALU_RG
  TICK: 234 PC:  41 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3993 RG_ALU:   1 SP: 3992 ZF: 0 |	load   var
  ALU_RES = ALU_RG
  TICK: 235 PC:  41 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3993 RG_ALU:   1 SP: 3992 ZF: 0 |	load   var
  ALU_RES -> ACC
  TICK: 236 PC:  41 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3993 RG_ALU:   1 SP: 3992 ZF: 0 |	load   var
  SP -> ALU_LG
  TICK: 237 PC:  42 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3992 RG_ALU:   1 SP: 3992 ZF: 0 |	push   var
  ALU_RES = SP - 1
  TICK: 238 PC:  42 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3992 RG_ALU:   1 SP: 3992 ZF: 0 |	push   var
  ALU_RES -> SP
  TICK: 239 PC:  42 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3992 RG_ALU:   1 SP: 3991 ZF: 0 |	push   var
  WRITE ACC -> MEM[ALU]
  TICK: 239 PC:  42 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3992 RG_ALU:   1 SP: 3991 ZF: 0 |	push   var
  ADDR -> ALU_RG
  TICK: 240 PC:  43 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3992 RG_ALU:   5 SP: 3991 ZF: 0 |	load   +
  ALU_RES = ALU_RG
  TICK: 241 PC:  43 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3992 RG_ALU:   5 SP: 3991 ZF: 0 |	load   +
  READ MEM[ALU]
  TICK: 242 PC:  43 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3992 RG_ALU:   5 SP: 3991 ZF: 0 |	load   +
  MEM[ALU] -> ALU_RG
  TICK: 243 PC:  43 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3992 RG_ALU:   1 SP: 3991 ZF: 0 |	load   +
  ALU_RES = ALU_RG
  TICK: 244 PC:  43 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3992 RG_ALU:   1 SP: 3991 ZF: 0 |	load   +
  ALU_RES -> ACC
  TICK: 245 PC:  43 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3992 RG_ALU:   1 SP: 3991 ZF: 0 |	load   +
  ADDR -> ALU_RG
  TICK: 246 PC:  44 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3992 RG_ALU:   6 SP: 3991 ZF: 0 |	add   +
  ALU_RES = ALU_RG
  TICK: 247 PC:  44 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3992 RG_ALU:   6 SP: 3991 ZF: 0 |	add   +
  READ MEM[ALU]
  TICK: 248 PC:  44 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3992 RG_ALU:   6 SP: 3991 ZF: 0 |	add   +
  MEM[ALU] -> ALU_RG
  TICK: 249 PC:  44 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3992 RG_ALU:   1 SP: 3991 ZF: 0 |	add   +
  ACC -> ALU_LG
  TICK: 249 PC:  44 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU:   1 RG_ALU:   1 SP: 3991 ZF: 0 |	add   +
  ALU_RES = ALU_LG + ALU_RG
  TICK: 250 PC:  44 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU:   1 RG_ALU:   1 SP: 3991 ZF: 0 |	add   +
  ALU_RES -> ACC
  TICK: 251 PC:  44 ADDR:   0 MEM_OUT: 1 ACC: 2 LG_ALU:   1 RG_ALU:   1 SP: 3991 ZF: 0 |	add   +
  SP -> ALU_LG
  TICK: 252 PC:  45 ADDR:   0 MEM_OUT: 1 ACC: 2 LG_ALU: 3991 RG_ALU:   1 SP: 3991 ZF: 0 |	push   +
  ALU_RES = SP - 1
  TICK: 253 PC:  45 ADDR:   0 MEM_OUT: 1 ACC: 2 LG_ALU: 3991 RG_ALU:   1 SP: 3991 ZF: 0 |	push   +
  ALU_RES -> SP
  TICK: 254 PC:  45 ADDR:   0 MEM_OUT: 1 ACC: 2 LG_ALU: 3991 RG_ALU:   1 SP: 3990 ZF: 0 |	push   +
  WRITE ACC -> MEM[ALU]
  TICK: 254 PC:  45 ADDR:   0 MEM_OUT: 1 ACC: 2 LG_ALU: 3991 RG_ALU:   1 SP: 3990 ZF: 0 |	push   +
  SP -> ALU_LG
  TICK: 255 PC:  46 ADDR:   0 MEM_OUT: 1 ACC: 2 LG_ALU: 3990 RG_ALU:   1 SP: 3990 ZF: 0 |	pop   var
  ALU_RES = ALU_LG
  TICK: 256 PC:  46 ADDR:   0 MEM_OUT: 1 ACC: 2 LG_ALU: 3990 RG_ALU:   1 SP: 3990 ZF: 0 |	pop   var
  READ MEM[ALU]
  TICK: 257 PC:  46 ADDR:   0 MEM_OUT: 2 ACC: 2 LG_ALU: 3990 RG_ALU:   1 SP: 3990 ZF: 0 |	pop   var
  ALU_RES = SP + 1
  TICK: 258 PC:  46 ADDR:   0 MEM_OUT: 2 ACC: 2 LG_ALU: 3990 RG_ALU:   1 SP: 3990 ZF: 0 |	pop   var
  ALU_RES -> SP
  TICK: 259 PC:  46 ADDR:   0 MEM_OUT: 2 ACC: 2 LG_ALU: 3990 RG_ALU:   1 SP: 3991 ZF: 0 |	pop   var
  MEM[ALU] -> ALU_RG
  TICK: 259 PC:  46 ADDR:   0 MEM_OUT: 2 ACC: 2 LG_ALU: 3990 RG_ALU:   2 SP: 3991 ZF: 0 |	pop   var
  ALU_RES = ALU_RG
  TICK: 260 PC:  46 ADDR:   0 MEM_OUT: 2 ACC: 2 LG_ALU: 3990 RG_ALU:   2 SP: 3991 ZF: 0 |	pop   var
  ALU_RES -> ACC
  TICK: 261 PC:  46 ADDR:   0 MEM_OUT: 2 ACC: 2 LG_ALU: 3990 RG_ALU:   2 SP: 3991 ZF: 0 |	pop   var
  ADDR -> ALU_RG
  TICK: 262 PC:  47 ADDR:   0 MEM_OUT: 2 ACC: 2 LG_ALU: 3990 RG_ALU:   6 SP: 3991 ZF: 0 |	store   var
  ALU_RES = ALU_RG
  TICK: 263 PC:  47 ADDR:   0 MEM_OUT: 2 ACC: 2 LG_ALU: 3990 RG_ALU:   6 SP: 3991 ZF: 0 |	store   var
  WRITE ACC -> MEM[ALU]
  TICK: 264 PC:  47 ADDR:   0 MEM_OUT: 2 ACC: 2 LG_ALU: 3990 RG_ALU:   6 SP: 3991 ZF: 0 |	store   var
  NUM -> ALU_RG
  TICK: 265 PC:  48 ADDR:   0 MEM_OUT: 2 ACC: 2 LG_ALU: 3990 RG_ALU:   1 SP: 3991 ZF: 0 |	load   var
  ALU_RES = ALU_RG
  TICK: 266 PC:  48 ADDR:   0 MEM_OUT: 2 ACC: 2 LG_ALU: 3990 RG_ALU:   1 SP: 3991 ZF: 0 |	load   var
  ALU_RES -> ACC
  TICK: 267 PC:  48 ADDR:   0 MEM_OUT: 2 ACC: 1 LG_ALU: 3990 RG_ALU:   1 SP: 3991 ZF: 0 |	load   var
  SP -> ALU_LG
  TICK: 268 PC:  49 ADDR:   0 MEM_OUT: 2 ACC: 1 LG_ALU: 3991 RG_ALU:   1 SP: 3991 ZF: 0 |	push   var
  ALU_RES = SP - 1
  TICK: 269 PC:  49 ADDR:   0 MEM_OUT: 2 ACC: 1 LG_ALU: 3991 RG_ALU:   1 SP: 3991 ZF: 0 |	push   var
  ALU_RES -> SP
  TICK: 270 PC:  49 ADDR:   0 MEM_OUT: 2 ACC: 1 LG_ALU: 3991 RG_ALU:   1 SP: 3990 ZF: 0 |	push   var
  WRITE ACC -> MEM[ALU]
  TICK: 270 PC:  49 ADDR:   0 MEM_OUT: 2 ACC: 1 LG_ALU: 3991 RG_ALU:   1 SP: 3990 ZF: 0 |	push   var
  ADDR -> ALU_RG
  TICK: 271 PC:  50 ADDR:   0 MEM_OUT: 2 ACC: 1 LG_ALU: 3991 RG_ALU:   8 SP: 3990 ZF: 0 |	load   var
  ALU_RES = ALU_RG
  TICK: 272 PC:  50 ADDR:   0 MEM_OUT: 2 ACC: 1 LG_ALU: 3991 RG_ALU:   8 SP: 3990 ZF: 0 |	load   var
  READ MEM[ALU]
  TICK: 273 PC:  50 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3991 RG_ALU:   8 SP: 3990 ZF: 0 |	load   var
  MEM[ALU] -> ALU_RG
  TICK: 274 PC:  50 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3991 RG_ALU:   1 SP: 3990 ZF: 0 |	load   var
  ALU_RES = ALU_RG
  TICK: 275 PC:  50 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3991 RG_ALU:   1 SP: 3990 ZF: 0 |	load   var
  ALU_RES -> ACC
  TICK: 276 PC:  50 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3991 RG_ALU:   1 SP: 3990 ZF: 0 |	load   var
  ADDR -> ALU_RG
  TICK: 277 PC:  51 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3991 RG_ALU:   5 SP: 3990 ZF: 0 |	store   var
  ALU_RES = ALU_RG
  TICK: 278 PC:  51 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3991 RG_ALU:   5 SP: 3990 ZF: 0 |	store   var
  WRITE ACC -> MEM[ALU]
  TICK: 279 PC:  51 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3991 RG_ALU:   5 SP: 3990 ZF: 0 |	store   var
  NUM -> ALU_RG
  TICK: 280 PC:  52 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3991 RG_ALU:   1 SP: 3990 ZF: 0 |	load   var
  ALU_RES = ALU_RG
  TICK: 281 PC:  52 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3991 RG_ALU:   1 SP: 3990 ZF: 0 |	load   var
  ALU_RES -> ACC
  TICK: 282 PC:  52 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3991 RG_ALU:   1 SP: 3990 ZF: 0 |	load   var
  SP -> ALU_LG
  TICK: 283 PC:  53 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3990 RG_ALU:   1 SP: 3990 ZF: 0 |	push   var
  ALU_RES = SP - 1
  TICK: 284 PC:  53 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3990 RG_ALU:   1 SP: 3990 ZF: 0 |	push   var
  ALU_RES -> SP
  TICK: 285 PC:  53 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3990 RG_ALU:   1 SP: 3989 ZF: 0 |	push   var
  WRITE ACC -> MEM[ALU]
  TICK: 285 PC:  53 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3990 RG_ALU:   1 SP: 3989 ZF: 0 |	push   var
  ADDR -> ALU_RG
  TICK: 286 PC:  54 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3990 RG_ALU:   6 SP: 3989 ZF: 0 |	load   <
  ALU_RES = ALU_RG
  TICK: 287 PC:  54 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3990 RG_ALU:   6 SP: 3989 ZF: 0 |	load   <
  READ MEM[ALU]
  TICK: 288 PC:  54 ADDR:   0 MEM_OUT: 2 ACC: 1 LG_ALU: 3990 RG_ALU:   6 SP: 3989 ZF: 0 |	load   <
  MEM[ALU] -> ALU_RG
  TICK: 289 PC:  54 ADDR:   0 MEM_OUT: 2 ACC: 1 LG_ALU: 3990 RG_ALU:   2 SP: 3989 ZF: 0 |	load   <
  ALU_RES = ALU_RG
  TICK: 290 PC:  54 ADDR:   0 MEM_OUT: 2 ACC: 1 LG_ALU: 3990 RG_ALU:   2 SP: 3989 ZF: 0 |	load   <
  ALU_RES -> ACC
  TICK: 291 PC:  54 ADDR:   0 MEM_OUT: 2 ACC: 2 LG_ALU: 3990 RG_ALU:   2 SP: 3989 ZF: 0 |	load   <
  ADDR -> ALU_RG
  TICK: 292 PC:  55 ADDR:   0 MEM_OUT: 2 ACC: 2 LG_ALU: 3990 RG_ALU:   7 SP: 3989 ZF: 0 |	sub   <
  ALU_RES = ALU_RG
  TICK: 293 PC:  55 ADDR:   0 MEM_OUT: 2 ACC: 2 LG_ALU: 3990 RG_ALU:   7 SP: 3989 ZF: 0 |	sub   <
  READ MEM[ALU]
  TICK: 294 PC:  55 ADDR:   0 MEM_OUT: 400000 ACC: 2 LG_ALU: 3990 RG_ALU:   7 SP: 3989 ZF: 0 |	sub   <
  MEM[ALU] -> ALU_RG
  TICK: 295 PC:  55 ADDR:   0 MEM_OUT: 400000 ACC: 2 LG_ALU: 3990 RG_ALU: 400000 SP: 3989 ZF: 0 |	sub   <
  ACC -> ALU_LG
  TICK: 295 PC:  55 ADDR:   0 MEM_OUT: 400000 ACC: 2 LG_ALU:   2 RG_ALU: 400000 SP: 3989 ZF: 0 |	sub   <
  ALU_RES = ALU_LG + ALU_RG
  TICK: 296 PC:  55 ADDR:   0 MEM_OUT: 400000 ACC: 2 LG_ALU:   2 RG_ALU: 400000 SP: 3989 ZF: 0 |	sub   <
  ALU_RES -> ACC
  TICK: 297 PC:  55 ADDR:   0 MEM_OUT: 400000 ACC: -399998 LG_ALU:   2 RG_ALU: 400000 SP: 3989 ZF: 0 |	sub   <
  PC + 1 -> PC
  NUM -> ALU_RG
  TICK: 298 PC:  57 ADDR:   0 MEM_OUT: 400000 ACC: -399998 LG_ALU:   2 RG_ALU:   1 SP: 3989 ZF: 0 |	load   <
  ALU_RES = ALU_RG
  TICK: 299 PC:  57 ADDR:   0 MEM_OUT: 400000 ACC: -399998 LG_ALU:   2 RG_ALU:   1 SP: 3989 ZF: 0 |	load   <
  ALU_RES -> ACC
  TICK: 300 PC:  57 ADDR:   0 MEM_OUT: 400000 ACC: 1 LG_ALU:   2 RG_ALU:   1 SP: 3989 ZF: 0 |	load   <
  ADDR -> PC
  SP -> ALU_LG
  TICK: 302 PC:  60 ADDR:   0 MEM_OUT: 400000 ACC: 1 LG_ALU: 3989 RG_ALU:   1 SP: 3989 ZF: 0 |	push   <
  ALU_RES = SP - 1
  TICK: 303 PC:  60 ADDR:   0 MEM_OUT: 400000 ACC: 1 LG_ALU: 3989 RG_ALU:   1 SP: 3989 ZF: 0 |	push   <
  ALU_RES -> SP
  TICK: 304 PC:  60 ADDR:   0 MEM_OUT: 400000 ACC: 1 LG_ALU: 3989 RG_ALU:   1 SP: 3988 ZF: 0 |	push   <
  WRITE ACC -> MEM[ALU]
  TICK: 304 PC:  60 ADDR:   0 MEM_OUT: 400000 ACC: 1 LG_ALU: 3989 RG_ALU:   1 SP: 3988 ZF: 0 |	push   <
  SP -> ALU_LG
  TICK: 305 PC:  61 ADDR:   0 MEM_OUT: 400000 ACC: 1 LG_ALU: 3988 RG_ALU:   1 SP: 3988 ZF: 0 |	pop
  ALU_RES = ALU_LG
  TICK: 306 PC:  61 ADDR:   0 MEM_OUT: 400000 ACC: 1 LG_ALU: 3988 RG_ALU:   1 SP: 3988 ZF: 0 |	pop
  READ MEM[ALU]
  TICK: 307 PC:  61 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3988 RG_ALU:   1 SP: 3988 ZF: 0 |	pop
  ALU_RES = SP + 1
  TICK: 308 PC:  61 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3988 RG_ALU:   1 SP: 3988 ZF: 0 |	pop
  ALU_RES -> SP
  TICK: 309 PC:  61 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3988 RG_ALU:   1 SP: 3989 ZF: 0 |	pop
  MEM[ALU] -> ALU_RG
  TICK: 309 PC:  61 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3988 RG_ALU:   1 SP: 3989 ZF: 0 |	pop
  ALU_RES = ALU_RG
  TICK: 310 PC:  61 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3988 RG_ALU:   1 SP: 3989 ZF: 0 |	pop
  ALU_RES -> ACC
  TICK: 311 PC:  61 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3988 RG_ALU:   1 SP: 3989 ZF: 0 |	pop
  ADDR -> PC
  ADDR -> PC
  ADDR -> ALU_RG
  TICK: 314 PC:  24 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3988 RG_ALU:   6 SP: 3989 ZF: 0 |	load
  ALU_RES = ALU_RG
  TICK: 315 PC:  24 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3988 RG_ALU:   6 SP: 3989 ZF: 0 |	load
  READ MEM[ALU]
  TICK: 316 PC:  24 ADDR:   0 MEM_OUT: 2 ACC: 1 LG_ALU: 3988 RG_ALU:   6 SP: 3989 ZF: 0 |	load
  MEM[ALU] -> ALU_RG
  TICK: 317 PC:  24 ADDR:   0 MEM_OUT: 2 ACC: 1 LG_ALU: 3988 RG_ALU:   2 SP: 3989 ZF: 0 |	load
  ALU_RES = ALU_RG
  TICK: 318 PC:  24 ADDR:   0 MEM_OUT: 2 ACC: 1 LG_ALU: 3988 RG_ALU:   2 SP: 3989 ZF: 0 |	load
  ALU_RES -> ACC
  TICK: 319 PC:  24 ADDR:   0 MEM_OUT: 2 ACC: 2 LG_ALU: 3988 RG_ALU:   2 SP: 3989 ZF: 0 |	load
  NUM -> ALU_RG
  TICK: 320 PC:  25 ADDR:   0 MEM_OUT: 2 ACC: 2 LG_ALU: 3988 RG_ALU:   2 SP: 3989 ZF: 0 |	mod
  ACC -> ALU_LG
  TICK: 320 PC:  25 ADDR:   0 MEM_OUT: 2 ACC: 2 LG_ALU:   2 RG_ALU:   2 SP: 3989 ZF: 0 |	mod
  ALU_RES = ALU_LG % ALU_RG
  TICK: 321 PC:  25 ADDR:   0 MEM_OUT: 2 ACC: 2 LG_ALU:   2 RG_ALU:   2 SP: 3989 ZF: 1 |	mod
  ALU_RES -> ACC
  TICK: 322 PC:  25 ADDR:   0 MEM_OUT: 2 ACC: 0 LG_ALU:   2 RG_ALU:   2 SP: 3989 ZF: 1 |	mod
  SP -> ALU_LG
  TICK: 323 PC:  26 ADDR:   0 MEM_OUT: 2 ACC: 0 LG_ALU: 3989 RG_ALU:   2 SP: 3989 ZF: 1 |	push
  ALU_RES = SP - 1
  TICK: 324 PC:  26 ADDR:   0 MEM_OUT: 2 ACC: 0 LG_ALU: 3989 RG_ALU:   2 SP: 3989 ZF: 0 |	push
  ALU_RES -> SP
  TICK: 325 PC:  26 ADDR:   0 MEM_OUT: 2 ACC: 0 LG_ALU: 3989 RG_ALU:   2 SP: 3988 ZF: 0 |	push
  WRITE ACC -> MEM[ALU]
  TICK: 325 PC:  26 ADDR:   0 MEM_OUT: 2 ACC: 0 LG_ALU: 3989 RG_ALU:   2 SP: 3988 ZF: 0 |	push
  NUM -> ALU_RG
  TICK: 326 PC:  27 ADDR:   0 MEM_OUT: 2 ACC: 0 LG_ALU: 3989 RG_ALU:   0 SP: 3988 ZF: 0 |	load   =
  ALU_RES = ALU_RG
  TICK: 327 PC:  27 ADDR:   0 MEM_OUT: 2 ACC: 0 LG_ALU: 3989 RG_ALU:   0 SP: 3988 ZF: 1 |	load   =
  ALU_RES -> ACC
  TICK: 328 PC:  27 ADDR:   0 MEM_OUT: 2 ACC: 0 LG_ALU: 3989 RG_ALU:   0 SP: 3988 ZF: 1 |	load   =
  SP -> ALU_LG
  TICK: 329 PC:  28 ADDR:   0 MEM_OUT: 2 ACC: 0 LG_ALU: 3988 RG_ALU:   0 SP: 3988 ZF: 1 |	sub   =
  ALU_RES = ALU_LG
  TICK: 330 PC:  28 ADDR:   0 MEM_OUT: 2 ACC: 0 LG_ALU: 3988 RG_ALU:   0 SP: 3988 ZF: 0 |	sub   =
  READ MEM[ALU]
  TICK: 331 PC:  28 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3988 RG_ALU:   0 SP: 3988 ZF: 0 |	sub   =
  MEM[ALU] -> ALU_RG
  TICK: 332 PC:  28 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3988 RG_ALU:   0 SP: 3988 ZF: 0 |	sub   =
  ALU_RES = SP + 1
  TICK: 333 PC:  28 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3988 RG_ALU:   0 SP: 3988 ZF: 0 |	sub   =
  ALU_RES -> SP
  TICK: 334 PC:  28 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3988 RG_ALU:   0 SP: 3989 ZF: 0 |	sub   =
  ACC -> ALU_LG
  TICK: 334 PC:  28 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU:   0 RG_ALU:   0 SP: 3989 ZF: 0 |	sub   =
  ALU_RES = ALU_LG + ALU_RG
  TICK: 335 PC:  28 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU:   0 RG_ALU:   0 SP: 3989 ZF: 1 |	sub   =
  ALU_RES -> ACC
  TICK: 336 PC:  28 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU:   0 RG_ALU:   0 SP: 3989 ZF: 1 |	sub   =
  PC + 1 -> PC
  NUM -> ALU_RG
  TICK: 337 PC:  30 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU:   0 RG_ALU:   1 SP: 3989 ZF: 1 |	load   =
  ALU_RES = ALU_RG
  TICK: 338 PC:  30 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU:   0 RG_ALU:   1 SP: 3989 ZF: 0 |	load   =
  ALU_RES -> ACC
  TICK: 339 PC:  30 ADDR:   0 MEM_OUT: 0 ACC: 1 LG_ALU:   0 RG_ALU:   1 SP: 3989 ZF: 0 |	load   =
  ADDR -> PC
  SP -> ALU_LG
  TICK: 341 PC:  33 ADDR:   0 MEM_OUT: 0 ACC: 1 LG_ALU: 3989 RG_ALU:   1 SP: 3989 ZF: 0 |	push   =
  ALU_RES = SP - 1
  TICK: 342 PC:  33 ADDR:   0 MEM_OUT: 0 ACC: 1 LG_ALU: 3989 RG_ALU:   1 SP: 3989 ZF: 0 |	push   =
  ALU_RES -> SP
  TICK: 343 PC:  33 ADDR:   0 MEM_OUT: 0 ACC: 1 LG_ALU: 3989 RG_ALU:   1 SP: 3988 ZF: 0 |	push   =
  WRITE ACC -> MEM[ALU]
  TICK: 343 PC:  33 ADDR:   0 MEM_OUT: 0 ACC: 1 LG_ALU: 3989 RG_ALU:   1 SP: 3988 ZF: 0 |	push   =
  SP -> ALU_LG
  TICK: 344 PC:  34 ADDR:   0 MEM_OUT: 0 ACC: 1 LG_ALU: 3988 RG_ALU:   1 SP: 3988 ZF: 0 |	pop   if
  ALU_RES = ALU_LG
  TICK: 345 PC:  34 ADDR:   0 MEM_OUT: 0 ACC: 1 LG_ALU: 3988 RG_ALU:   1 SP: 3988 ZF: 0 |	pop   if
  READ MEM[ALU]
  TICK: 346 PC:  34 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3988 RG_ALU:   1 SP: 3988 ZF: 0 |	pop   if
  ALU_RES = SP + 1
  TICK: 347 PC:  34 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3988 RG_ALU:   1 SP: 3988 ZF: 0 |	pop   if
  ALU_RES -> SP
  TICK: 348 PC:  34 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3988 RG_ALU:   1 SP: 3989 ZF: 0 |	pop   if
  MEM[ALU] -> ALU_RG
  TICK: 348 PC:  34 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3988 RG_ALU:   1 SP: 3989 ZF: 0 |	pop   if
  ALU_RES = ALU_RG
  TICK: 349 PC:  34 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3988 RG_ALU:   1 SP: 3989 ZF: 0 |	pop   if
  ALU_RES -> ACC
  TICK: 350 PC:  34 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3988 RG_ALU:   1 SP: 3989 ZF: 0 |	pop   if
  ADDR -> PC
  ADDR -> ALU_RG
  TICK: 352 PC:   7 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3988 RG_ALU:   6 SP: 3989 ZF: 0 |	load   print
  ALU_RES = ALU_RG
  TICK: 353 PC:   7 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3988 RG_ALU:   6 SP: 3989 ZF: 0 |	load   print
  READ MEM[ALU]
  TICK: 354 PC:   7 ADDR:   0 MEM_OUT: 2 ACC: 1 LG_ALU: 3988 RG_ALU:   6 SP: 3989 ZF: 0 |	load   print
  MEM[ALU] -> ALU_RG
  TICK: 355 PC:   7 ADDR:   0 MEM_OUT: 2 ACC: 1 LG_ALU: 3988 RG_ALU:   2 SP: 3989 ZF: 0 |	load   print
  ALU_RES = ALU_RG
  TICK: 356 PC:   7 ADDR:   0 MEM_OUT: 2 ACC: 1 LG_ALU: 3988 RG_ALU:   2 SP: 3989 ZF: 0 |	load   print
  ALU_RES -> ACC
  TICK: 357 PC:   7 ADDR:   0 MEM_OUT: 2 ACC: 2 LG_ALU: 3988 RG_ALU:   2 SP: 3989 ZF: 0 |	load   print
  get IO module port
  TICK: 358 PC:   8 ADDR:   0 MEM_OUT: 2 ACC: 2 LG_ALU: 3988 RG_ALU:   2 SP: 3989 ZF: 0 |	output   print
  ACC -> OUTPUT 
  TICK: 359 PC:   8 ADDR:   0 MEM_OUT: 2 ACC: 2 LG_ALU: 3988 RG_ALU:   2 SP: 3989 ZF: 0 |	output   print
  NUM -> ALU_RG
  TICK: 360 PC:   9 ADDR:   0 MEM_OUT: 2 ACC: 2 LG_ALU: 3988 RG_ALU:   1 SP: 3989 ZF: 0 |	load   print
  ALU_RES = ALU_RG
  TICK: 361 PC:   9 ADDR:   0 MEM_OUT: 2 ACC: 2 LG_ALU: 3988 RG_ALU:   1 SP: 3989 ZF: 0 |	load   print
  ALU_RES -> ACC
  TICK: 362 PC:   9 ADDR:   0 MEM_OUT: 2 ACC: 1 LG_ALU: 3988 RG_ALU:   1 SP: 3989 ZF: 0 |	load   print
  SP -> ALU_LG
  TICK: 363 PC:  10 ADDR:   0 MEM_OUT: 2 ACC: 1 LG_ALU: 3989 RG_ALU:   1 SP: 3989 ZF: 0 |	push   print
  ALU_RES = SP - 1
  TICK: 364 PC:  10 ADDR:   0 MEM_OUT: 2 ACC: 1 LG_ALU: 3989 RG_ALU:   1 SP: 3989 ZF: 0 |	push   print
  ALU_RES -> SP
  TICK: 365 PC:  10 ADDR:   0 MEM_OUT: 2 ACC: 1 LG_ALU: 3989 RG_ALU:   1 SP: 3988 ZF: 0 |	push   print
  WRITE ACC -> MEM[ALU]
  TICK: 365 PC:  10 ADDR:   0 MEM_OUT: 2 ACC: 1 LG_ALU: 3989 RG_ALU:   1 SP: 3988 ZF: 0 |	push   print
  NUM -> ALU_RG
  TICK: 366 PC:  11 ADDR:   0 MEM_OUT: 2 ACC: 1 LG_ALU: 3989 RG_ALU:  95 SP: 3988 ZF: 0 |	load   print
  ALU_RES = ALU_RG
  TICK: 367 PC:  11 ADDR:   0 MEM_OUT: 2 ACC: 1 LG_ALU: 3989 RG_ALU:  95 SP: 3988 ZF: 0 |	load   print
  ALU_RES -> ACC
  TICK: 368 PC:  11 ADDR:   0 MEM_OUT: 2 ACC: 95 LG_ALU: 3989 RG_ALU:  95 SP: 3988 ZF: 0 |	load   print
  get IO module port
  TICK: 369 PC:  12 ADDR:   0 MEM_OUT: 2 ACC: 95 LG_ALU: 3989 RG_ALU:  95 SP: 3988 ZF: 0 |	output   print
  ACC -> OUTPUT 
  TICK: 370 PC:  12 ADDR:   0 MEM_OUT: 2 ACC: 95 LG_ALU: 3989 RG_ALU:  95 SP: 3988 ZF: 0 |	output   print
  NUM -> ALU_RG
  TICK: 371 PC:  13 ADDR:   0 MEM_OUT: 2 ACC: 95 LG_ALU: 3989 RG_ALU:   0 SP: 3988 ZF: 0 |	load   print
  ALU_RES = ALU_RG
  TICK: 372 PC:  13 ADDR:   0 MEM_OUT: 2 ACC: 95 LG_ALU: 3989 RG_ALU:   0 SP: 3988 ZF: 1 |	load   print
  ALU_RES -> ACC
  TICK: 373 PC:  13 ADDR:   0 MEM_OUT: 2 ACC: 0 LG_ALU: 3989 RG_ALU:   0 SP: 3988 ZF: 1 |	load   print
  get IO module port
  TICK: 374 PC:  14 ADDR:   0 MEM_OUT: 2 ACC: 0 LG_ALU: 3989 RG_ALU:   0 SP: 3988 ZF: 1 |	output   print
  ACC -> OUTPUT 
  TICK: 375 PC:  14 ADDR:   0 MEM_OUT: 2 ACC: 0 LG_ALU: 3989 RG_ALU:   0 SP: 3988 ZF: 1 |	output   print
  NUM -> ALU_RG
  TICK: 376 PC:  15 ADDR:   0 MEM_OUT: 2 ACC: 0 LG_ALU: 3989 RG_ALU:   0 SP: 3988 ZF: 1 |	load   print
  ALU_RES = ALU_RG
  TICK: 377 PC:  15 ADDR:   0 MEM_OUT: 2 ACC: 0 LG_ALU: 3989 RG_ALU:   0 SP: 3988 ZF: 1 |	load   print
  ALU_RES -> ACC
  TICK: 378 PC:  15 ADDR:   0 MEM_OUT: 2 ACC: 0 LG_ALU: 3989 RG_ALU:   0 SP: 3988 ZF: 1 |	load   print
  get IO module port
  TICK: 379 PC:  16 ADDR:   0 MEM_OUT: 2 ACC: 0 LG_ALU: 3989 RG_ALU:   0 SP: 3988 ZF: 1 |	output   print
  ACC -> OUTPUT 
  TICK: 380 PC:  16 ADDR:   0 MEM_OUT: 2 ACC: 0 LG_ALU: 3989 RG_ALU:   0 SP: 3988 ZF: 1 |	output   print
  NUM -> ALU_RG
  TICK: 381 PC:  17 ADDR:   0 MEM_OUT: 2 ACC: 0 LG_ALU: 3989 RG_ALU:   1 SP: 3988 ZF: 1 |	load   print
  ALU_RES = ALU_RG
  TICK: 382 PC:  17 ADDR:   0 MEM_OUT: 2 ACC: 0 LG_ALU: 3989 RG_ALU:   1 SP: 3988 ZF: 0 |	load   print
  ALU_RES -> ACC
  TICK: 383 PC:  17 ADDR:   0 MEM_OUT: 2 ACC: 1 LG_ALU: 3989 RG_ALU:   1 SP: 3988 ZF: 0 |	load   print
  SP -> ALU_LG
  TICK: 384 PC:  18 ADDR:   0 MEM_OUT: 2 ACC: 1 LG_ALU: 3988 RG_ALU:   1 SP: 3988 ZF: 0 |	push   print
  ALU_RES = SP - 1
  TICK: 385 PC:  18 ADDR:   0 MEM_OUT: 2 ACC: 1 LG_ALU: 3988 RG_ALU:   1 SP: 3988 ZF: 0 |	push   print
  ALU_RES -> SP
  TICK: 386 PC:  18 ADDR:   0 MEM_OUT: 2 ACC: 1 LG_ALU: 3988 RG_ALU:   1 SP: 3987 ZF: 0 |	push   print
  WRITE ACC -> MEM[ALU]
  TICK: 386 PC:  18 ADDR:   0 MEM_OUT: 2 ACC: 1 LG_ALU: 3988 RG_ALU:   1 SP: 3987 ZF: 0 |	push   print
  ADDR -> PC
  SP -> ALU_LG
  TICK: 388 PC:  37 ADDR:   0 MEM_OUT: 2 ACC: 1 LG_ALU: 3987 RG_ALU:   1 SP: 3987 ZF: 0 |	pop   if
  ALU_RES = ALU_LG
  TICK: 389 PC:  37 ADDR:   0 MEM_OUT: 2 ACC: 1 LG_ALU: 3987 RG_ALU:   1 SP: 3987 ZF: 0 |	pop   if
  READ MEM[ALU]
  TICK: 390 PC:  37 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3987 RG_ALU:   1 SP: 3987 ZF: 0 |	pop   if
  ALU_RES = SP + 1
  TICK: 391 PC:  37 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3987 RG_ALU:   1 SP: 3987 ZF: 0 |	pop   if
  ALU_RES -> SP
  TICK: 392 PC:  37 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3987 RG_ALU:   1 SP: 3988 ZF: 0 |	pop   if
  MEM[ALU] -> ALU_RG
  TICK: 392 PC:  37 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3987 RG_ALU:   1 SP: 3988 ZF: 0 |	pop   if
  ALU_RES = ALU_RG
  TICK: 393 PC:  37 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3987 RG_ALU:   1 SP: 3988 ZF: 0 |	pop   if
  ALU_RES -> ACC
  TICK: 394 PC:  37 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3987 RG_ALU:   1 SP: 3988 ZF: 0 |	pop   if
  SP -> ALU_LG
  TICK: 395 PC:  38 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3988 RG_ALU:   1 SP: 3988 ZF: 0 |	push   if
  ALU_RES = SP - 1
  TICK: 396 PC:  38 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3988 RG_ALU:   1 SP: 3988 ZF: 0 |	push   if
  ALU_RES -> SP
  TICK: 397 PC:  38 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3988 RG_ALU:   1 SP: 3987 ZF: 0 |	push   if
  WRITE ACC -> MEM[ALU]
  TICK: 397 PC:  38 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3988 RG_ALU:   1 SP: 3987 ZF: 0 |	push   if
  ADDR -> ALU_RG
  TICK: 398 PC:  39 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3988 RG_ALU:   6 SP: 3987 ZF: 0 |	load   var
  ALU_RES = ALU_RG
  TICK: 399 PC:  39 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3988 RG_ALU:   6 SP: 3987 ZF: 0 |	load   var
  READ MEM[ALU]
  TICK: 400 PC:  39 ADDR:   0 MEM_OUT: 2 ACC: 1 LG_ALU: 3988 RG_ALU:   6 SP: 3987 ZF: 0 |	load   var
  MEM[ALU] -> ALU_RG
  TICK: 401 PC:  39 ADDR:   0 MEM_OUT: 2 ACC: 1 LG_ALU: 3988 RG_ALU:   2 SP: 3987 ZF: 0 |	load   var
  ALU_RES = ALU_RG
  TICK: 402 PC:  39 ADDR:   0 MEM_OUT: 2 ACC: 1 LG_ALU: 3988 RG_ALU:   2 SP: 3987 ZF: 0 |	load   var
  ALU_RES -> ACC
  TICK: 403 PC:  39 ADDR:   0 MEM_OUT: 2 ACC: 2 LG_ALU: 3988 RG_ALU:   2 SP: 3987 ZF: 0 |	load   var
  ADDR -> ALU_RG
  TICK: 404 PC:  40 ADDR:   0 MEM_OUT: 2 ACC: 2 LG_ALU: 3988 RG_ALU:   8 SP: 3987 ZF: 0 |	store   var
  ALU_RES = ALU_RG
  TICK: 405 PC:  40 ADDR:   0 MEM_OUT: 2 ACC: 2 LG_ALU: 3988 RG_ALU:   8 SP: 3987 ZF: 0 |	store   var
  WRITE ACC -> MEM[ALU]
  TICK: 406 PC:  40 ADDR:   0 MEM_OUT: 2 ACC: 2 LG_ALU: 3988 RG_ALU:   8 SP: 3987 ZF: 0 |	store   var
  NUM -> ALU_RG
  TICK: 407 PC:  41 ADDR:   0 MEM_OUT: 2 ACC: 2 LG_ALU: 3988 RG_ALU:   1 SP: 3987 ZF: 0 |	load   var
  ALU_RES = ALU_RG
  TICK: 408 PC:  41 ADDR:   0 MEM_OUT: 2 ACC: 2 LG_ALU: 3988 RG_ALU:   1 SP: 3987 ZF: 0 |	load   var
  ALU_RES -> ACC
  TICK: 409 PC:  41 ADDR:   0 MEM_OUT: 2 ACC: 1 LG_ALU: 3988 RG_ALU:   1 SP: 3987 ZF: 0 |	load   var
  SP -> ALU_LG
  TICK: 410 PC:  42 ADDR:   0 MEM_OUT: 2 ACC: 1 LG_ALU: 3987 RG_ALU:   1 SP: 3987 ZF: 0 |	push   var
  ALU_RES = SP - 1
  TICK: 411 PC:  42 ADDR:   0 MEM_OUT: 2 ACC: 1 LG_ALU: 3987 RG_ALU:   1 SP: 3987 ZF: 0 |	push   var
  ALU_RES -> SP
  TICK: 412 PC:  42 ADDR:   0 MEM_OUT: 2 ACC: 1 LG_ALU: 3987 RG_ALU:   1 SP: 3986 ZF: 0 |	push   var
  WRITE ACC -> MEM[ALU]
  TICK: 412 PC:  42 ADDR:   0 MEM_OUT: 2 ACC: 1 LG_ALU: 3987 RG_ALU:   1 SP: 3986 ZF: 0 |	push   var
  ADDR -> ALU_RG
  TICK: 413 PC:  43 ADDR:   0 MEM_OUT: 2 ACC: 1 LG_ALU: 3987 RG_ALU:   5 SP: 3986 ZF: 0 |	load   +
  ALU_RES = ALU_RG
  TICK: 414 PC:  43 ADDR:   0 MEM_OUT: 2 ACC: 1 LG_ALU: 3987 RG_ALU:   5 SP: 3986 ZF: 0 |	load   +
  READ MEM[ALU]
  TICK: 415 PC:  43 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3987 RG_ALU:   5 SP: 3986 ZF: 0 |	load   +
  MEM[ALU] -> ALU_RG
  TICK: 416 PC:  43 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3987 RG_ALU:   1 SP: 3986 ZF: 0 |	load   +
  ALU_RES = ALU_RG
  TICK: 417 PC:  43 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3987 RG_ALU:   1 SP: 3986 ZF: 0 |	load   +
  ALU_RES -> ACC
  TICK: 418 PC:  43 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3987 RG_ALU:   1 SP: 3986 ZF: 0 |	load   +
  ADDR -> ALU_RG
  TICK: 419 PC:  44 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3987 RG_ALU:   6 SP: 3986 ZF: 0 |	add   +
  ALU_RES = ALU_RG
  TICK: 420 PC:  44 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3987 RG_ALU:   6 SP: 3986 ZF: 0 |	add   +
  READ MEM[ALU]
  TICK: 421 PC:  44 ADDR:   0 MEM_OUT: 2 ACC: 1 LG_ALU: 3987 RG_ALU:   6 SP: 3986 ZF: 0 |	add   +
  MEM[ALU] -> ALU_RG
  TICK: 422 PC:  44 ADDR:   0 MEM_OUT: 2 ACC: 1 LG_ALU: 3987 RG_ALU:   2 SP: 3986 ZF: 0 |	add   +
  ACC -> ALU_LG
  TICK: 422 PC:  44 ADDR:   0 MEM_OUT: 2 ACC: 1 LG_ALU:   1 RG_ALU:   2 SP: 3986 ZF: 0 |	add   +
  ALU_RES = ALU_LG + ALU_RG
  TICK: 423 PC:  44 ADDR:   0 MEM_OUT: 2 ACC: 1 LG_ALU:   1 RG_ALU:   2 SP: 3986 ZF: 0 |	add   +
  ALU_RES -> ACC
  TICK: 424 PC:  44 ADDR:   0 MEM_OUT: 2 ACC: 3 LG_ALU:   1 RG_ALU:   2 SP: 3986 ZF: 0 |	add   +
  SP -> ALU_LG
  TICK: 425 PC:  45 ADDR:   0 MEM_OUT: 2 ACC: 3 LG_ALU: 3986 RG_ALU:   2 SP: 3986 ZF: 0 |	push   +
  ALU_RES = SP - 1
  TICK: 426 PC:  45 ADDR:   0 MEM_OUT: 2 ACC: 3 LG_ALU: 3986 RG_ALU:   2 SP: 3986 ZF: 0 |	push   +
  ALU_RES -> SP
  TICK: 427 PC:  45 ADDR:   0 MEM_OUT: 2 ACC: 3 LG_ALU: 3986 RG_ALU:   2 SP: 3985 ZF: 0 |	push   +
  WRITE ACC -> MEM[ALU]
  TICK: 427 PC:  45 ADDR:   0 MEM_OUT: 2 ACC: 3 LG_ALU: 3986 RG_ALU:   2 SP: 3985 ZF: 0 |	push   +
  SP -> ALU_LG
  TICK: 428 PC:  46 ADDR:   0 MEM_OUT: 2 ACC: 3 LG_ALU: 3985 RG_ALU:   2 SP: 3985 ZF: 0 |	pop   var
  ALU_RES = ALU_LG
  TICK: 429 PC:  46 ADDR:   0 MEM_OUT: 2 ACC: 3 LG_ALU: 3985 RG_ALU:   2 SP: 3985 ZF: 0 |	pop   var
  READ MEM[ALU]
  TICK: 430 PC:  46 ADDR:   0 MEM_OUT: 3 ACC: 3 LG_ALU: 3985 RG_ALU:   2 SP: 3985 ZF: 0 |	pop   var
  ALU_RES = SP + 1
  TICK: 431 PC:  46 ADDR:   0 MEM_OUT: 3 ACC: 3 LG_ALU: 3985 RG_ALU:   2 SP: 3985 ZF: 0 |	pop   var
  ALU_RES -> SP
  TICK: 432 PC:  46 ADDR:   0 MEM_OUT: 3 ACC: 3 LG_ALU: 3985 RG_ALU:   2 SP: 3986 ZF: 0 |	pop   var
  MEM[ALU] -> ALU_RG
  TICK: 432 PC:  46 ADDR:   0 MEM_OUT: 3 ACC: 3 LG_ALU: 3985 RG_ALU:   3 SP: 3986 ZF: 0 |	pop   var
  ALU_RES = ALU_RG
  TICK: 433 PC:  46 ADDR:   0 MEM_OUT: 3 ACC: 3 LG_ALU: 3985 RG_ALU:   3 SP: 3986 ZF: 0 |	pop   var
  ALU_RES -> ACC
  TICK: 434 PC:  46 ADDR:   0 MEM_OUT: 3 ACC: 3 LG_ALU: 3985 RG_ALU:   3 SP: 3986 ZF: 0 |	pop   var
  ADDR -> ALU_RG
  TICK: 435 PC:  47 ADDR:   0 MEM_OUT: 3 ACC: 3 LG_ALU: 3985 RG_ALU:   6 SP: 3986 ZF: 0 |	store   var
  ALU_RES = ALU_RG
  TICK: 436 PC:  47 ADDR:   0 MEM_OUT: 3 ACC: 3 LG_ALU: 3985 RG_ALU:   6 SP: 3986 ZF: 0 |	store   var
  WRITE ACC -> MEM[ALU]
  TICK: 437 PC:  47 ADDR:   0 MEM_OUT: 3 ACC: 3 LG_ALU: 3985 RG_ALU:   6 SP: 3986 ZF: 0 |	store   var
  NUM -> ALU_RG
  TICK: 438 PC:  48 ADDR:   0 MEM_OUT: 3 ACC: 3 LG_ALU: 3985 RG_ALU:   1 SP: 3986 ZF: 0 |	load   var
  ALU_RES = ALU_RG
  TICK: 439 PC:  48 ADDR:   0 MEM_OUT: 3 ACC: 3 LG_ALU: 3985 RG_ALU:   1 SP: 3986 ZF: 0 |	load   var
  ALU_RES -> ACC
  TICK: 440 PC:  48 ADDR:   0 MEM_OUT: 3 ACC: 1 LG_ALU: 3985 RG_ALU:   1 SP: 3986 ZF: 0 |	load   var
  SP -> ALU_LG
  TICK: 441 PC:  49 ADDR:   0 MEM_OUT: 3 ACC: 1 LG_ALU: 3986 RG_ALU:   1 SP: 3986 ZF: 0 |	push   var
  ALU_RES = SP - 1
  TICK: 442 PC:  49 ADDR:   0 MEM_OUT: 3 ACC: 1 LG_ALU: 3986 RG_ALU:   1 SP: 3986 ZF: 0 |	push   var
  ALU_RES -> SP
  TICK: 443 PC:  49 ADDR:   0 MEM_OUT: 3 ACC: 1 LG_ALU: 3986 RG_ALU:   1 SP: 3985 ZF: 0 |	push   var
  WRITE ACC -> MEM[ALU]
  TICK: 443 PC:  49 ADDR:   0 MEM_OUT: 3 ACC: 1 LG_ALU: 3986 RG_ALU:   1 SP: 3985 ZF: 0 |	push   var
  ADDR -> ALU_RG
  TICK: 444 PC:  50 ADDR:   0 MEM_OUT: 3 ACC: 1 LG_ALU: 3986 RG_ALU:   8 SP: 3985 ZF: 0 |	load   var
  ALU_RES = ALU_RG
  TICK: 445 PC:  50 ADDR:   0 MEM_OUT: 3 ACC: 1 LG_ALU: 3986 RG_ALU:   8 SP: 3985 ZF: 0 |	load   var
  READ MEM[ALU]
  TICK: 446 PC:  50 ADDR:   0 MEM_OUT: 2 ACC: 1 LG_ALU: 3986 RG_ALU:   8 SP: 3985 ZF: 0 |	load   var
  MEM[ALU] -> ALU_RG
  TICK: 447 PC:  50 ADDR:   0 MEM_OUT: 2 ACC: 1 LG_ALU: 3986 RG_ALU:   2 SP: 3985 ZF: 0 |	load   var
  ALU_RES = ALU_RG
  TICK: 448 PC:  50 ADDR:   0 MEM_OUT: 2 ACC: 1 LG_ALU: 3986 RG_ALU:   2 SP: 3985 ZF: 0 |	load   var
  ALU_RES -> ACC
  TICK: 449 PC:  50 ADDR:   0 MEM_OUT: 2 ACC: 2 LG_ALU: 3986 RG_ALU:   2 SP: 3985 ZF: 0 |	load   var
  ADDR -> ALU_RG
  TICK: 450 PC:  51 ADDR:   0 MEM_OUT: 2 ACC: 2 LG_ALU: 3986 RG_ALU:   5 SP: 3985 ZF: 0 |	store   var
  ALU_RES = ALU_RG
  TICK: 451 PC:  51 ADDR:   0 MEM_OUT: 2 ACC: 2 LG_ALU: 3986 RG_ALU:   5 SP: 3985 ZF: 0 |	store   var
  WRITE ACC -> MEM[ALU]
  TICK: 452 PC:  51 ADDR:   0 MEM_OUT: 2 ACC: 2 LG_ALU: 3986 RG_ALU:   5 SP: 3985 ZF: 0 |	store   var
  NUM -> ALU_RG
  TICK: 453 PC:  52 ADDR:   0 MEM_OUT: 2 ACC: 2 LG_ALU: 3986 RG_ALU:   1 SP: 3985 ZF: 0 |	load   var
  ALU_RES = ALU_RG
  TICK: 454 PC:  52 ADDR:   0 MEM_OUT: 2 ACC: 2 LG_ALU: 3986 RG_ALU:   1 SP: 3985 ZF: 0 |	load   var
  ALU_RES -> ACC
  TICK: 455 PC:  52 ADDR:   0 MEM_OUT: 2 ACC: 1 LG_ALU: 3986 RG_ALU:   1 SP: 3985 ZF: 0 |	load   var
  SP -> ALU_LG
  TICK: 456 PC:  53 ADDR:   0 MEM_OUT: 2 ACC: 1 LG_ALU: 3985 RG_ALU:   1 SP: 3985 ZF: 0 |	push   var
  ALU_RES = SP - 1
  TICK: 457 PC:  53 ADDR:   0 MEM_OUT: 2 ACC: 1 LG_ALU: 3985 RG_ALU:   1 SP: 3985 ZF: 0 |	push   var
  ALU_RES -> SP
  TICK: 458 PC:  53 ADDR:   0 MEM_OUT: 2 ACC: 1 LG_ALU: 3985 RG_ALU:   1 SP: 3984 ZF: 0 |	push   var
  WRITE ACC -> MEM[ALU]
  TICK: 458 PC:  53 ADDR:   0 MEM_OUT: 2 ACC: 1 LG_ALU: 3985 RG_ALU:   1 SP: 3984 ZF: 0 |	push   var
  ADDR -> ALU_RG
  TICK: 459 PC:  54 ADDR:   0 MEM_OUT: 2 ACC: 1 LG_ALU: 3985 RG_ALU:   6 SP: 3984 ZF: 0 |	load   <
  ALU_RES = ALU_RG
  TICK: 460 PC:  54 ADDR:   0 MEM_OUT: 2 ACC: 1 LG_ALU: 3985 RG_ALU:   6 SP: 3984 ZF: 0 |	load   <
  READ MEM[ALU]
  TICK: 461 PC:  54 ADDR:   0 MEM_OUT: 3 ACC: 1 LG_ALU: 3985 RG_ALU:   6 SP: 3984 ZF: 0 |	load   <
  MEM[ALU] -> ALU_RG
  TICK: 462 PC:  54 ADDR:   0 MEM_OUT: 3 ACC: 1 LG_ALU: 3985 RG_ALU:   3 SP: 3984 ZF: 0 |	load   <
  ALU_RES = ALU_RG
  TICK: 463 PC:  54 ADDR:   0 MEM_OUT: 3 ACC: 1 LG_ALU: 3985 RG_ALU:   3 SP: 3984 ZF: 0 |	load   <
  ALU_RES -> ACC
  TICK: 464 PC:  54 ADDR:   0 MEM_OUT: 3 ACC: 3 LG_ALU: 3985 RG_ALU:   3 SP: 3984 ZF: 0 |	load   <
  ADDR -> ALU_RG
  TICK: 465 PC:  55 ADDR:   0 MEM_OUT: 3 ACC: 3 LG_ALU: 3985 RG_ALU:   7 SP: 3984 ZF: 0 |	sub   <
  ALU_RES = ALU_RG
  TICK: 466 PC:  55 ADDR:   0 MEM_OUT: 3 ACC: 3 LG_ALU: 3985 RG_ALU:   7 SP: 3984 ZF: 0 |	sub   <
  READ MEM[ALU]
  TICK: 467 PC:  55 ADDR:   0 MEM_OUT: 400000 ACC: 3 LG_ALU: 3985 RG_ALU:   7 SP: 3984 ZF: 0 |	sub   <
  MEM[ALU] -> ALU_RG
  TICK: 468 PC:  55 ADDR:   0 MEM_OUT: 400000 ACC: 3 LG_ALU: 3985 RG_ALU: 400000 SP: 3984 ZF: 0 |	sub   <
  ACC -> ALU_LG
  TICK: 468 PC:  55 ADDR:   0 MEM_OUT: 400000 ACC: 3 LG_ALU:   3 RG_ALU: 400000 SP: 3984 ZF: 0 |	sub   <
  ALU_RES = ALU_LG + ALU_RG
  TICK: 469 PC:  55 ADDR:   0 MEM_OUT: 400000 ACC: 3 LG_ALU:   3 RG_ALU: 400000 SP: 3984 ZF: 0 |	sub   <
  ALU_RES -> ACC
  TICK: 470 PC:  55 ADDR:   0 MEM_OUT: 400000 ACC: -399997 LG_ALU:   3 RG_ALU: 400000 SP: 3984 ZF: 0 |	sub   <
  PC + 1 -> PC
  NUM -> ALU_RG
  TICK: 471 PC:  57 ADDR:   0 MEM_OUT: 400000 ACC: -399997 LG_ALU:   3 RG_ALU:   1 SP: 3984 ZF: 0 |	load   <
  ALU_RES = ALU_RG
  TICK: 472 PC:  57 ADDR:   0 MEM_OUT: 400000 ACC: -399997 LG_ALU:   3 RG_ALU:   1 SP: 3984 ZF: 0 |	load   <
  ALU_RES -> ACC
  TICK: 473 PC:  57 ADDR:   0 MEM_OUT: 400000 ACC: 1 LG_ALU:   3 RG_ALU:   1 SP: 3984 ZF: 0 |	load   <
  ADDR -> PC
  SP -> ALU_LG
  TICK: 475 PC:  60 ADDR:   0 MEM_OUT: 400000 ACC: 1 LG_ALU: 3984 RG_ALU:   1 SP: 3984 ZF: 0 |	push   <
  ALU_RES = SP - 1
  TICK: 476 PC:  60 ADDR:   0 MEM_OUT: 400000 ACC: 1 LG_ALU: 3984 RG_ALU:   1 SP: 3984 ZF: 0 |	push   <
  ALU_RES -> SP
  TICK: 477 PC:  60 ADDR:   0 MEM_OUT: 400000 ACC: 1 LG_ALU: 3984 RG_ALU:   1 SP: 3983 ZF: 0 |	push   <
  WRITE ACC -> MEM[ALU]
  TICK: 477 PC:  60 ADDR:   0 MEM_OUT: 400000 ACC: 1 LG_ALU: 3984 RG_ALU:   1 SP: 3983 ZF: 0 |	push   <
  SP -> ALU_LG
  TICK: 478 PC:  61 ADDR:   0 MEM_OUT: 400000 ACC: 1 LG_ALU: 3983 RG_ALU:   1 SP: 3983 ZF: 0 |	pop
  ALU_RES = ALU_LG
  TICK: 479 PC:  61 ADDR:   0 MEM_OUT: 400000 ACC: 1 LG_ALU: 3983 RG_ALU:   1 SP: 3983 ZF: 0 |	pop
  READ MEM[ALU]
  TICK: 480 PC:  61 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3983 RG_ALU:   1 SP: 3983 ZF: 0 |	pop
  ALU_RES = SP + 1
  TICK: 481 PC:  61 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3983 RG_ALU:   1 SP: 3983 ZF: 0 |	pop
  ALU_RES -> SP
  TICK: 482 PC:  61 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3983 RG_ALU:   1 SP: 3984 ZF: 0 |	pop
  MEM[ALU] -> ALU_RG
  TICK: 482 PC:  61 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3983 RG_ALU:   1 SP: 3984 ZF: 0 |	pop
  ALU_RES = ALU_RG
  TICK: 483 PC:  61 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3983 RG_ALU:   1 SP: 3984 ZF: 0 |	pop
  ALU_RES -> ACC
  TICK: 484 PC:  61 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3983 RG_ALU:   1 SP: 3984 ZF: 0 |	pop
  ADDR -> PC
  ADDR -> PC
  ADDR -> ALU_RG
  TICK: 487 PC:  24 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3983 RG_ALU:   6 SP: 3984 ZF: 0 |	load
  ALU_RES = ALU_RG
  TICK: 488 PC:  24 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3983 RG_ALU:   6 SP: 3984 ZF: 0 |	load
  READ MEM[ALU]
  TICK: 489 PC:  24 ADDR:   0 MEM_OUT: 3 ACC: 1 LG_ALU: 3983 RG_ALU:   6 SP: 3984 ZF: 0 |	load
  MEM[ALU] -> ALU_RG
  TICK: 490 PC:  24 ADDR:   0 MEM_OUT: 3 ACC: 1 LG_ALU: 3983 RG_ALU:   3 SP: 3984 ZF: 0 |	load
  ALU_RES = ALU_RG
  TICK: 491 PC:  24 ADDR:   0 MEM_OUT: 3 ACC: 1 LG_ALU: 3983 RG_ALU:   3 SP: 3984 ZF: 0 |	load
  ALU_RES -> ACC
  TICK: 492 PC:  24 ADDR:   0 MEM_OUT: 3 ACC: 3 LG_ALU: 3983 RG_ALU:   3 SP: 3984 ZF: 0 |	load
  NUM -> ALU_RG
  TICK: 493 PC:  25 ADDR:   0 MEM_OUT: 3 ACC: 3 LG_ALU: 3983 RG_ALU:   2 SP: 3984 ZF: 0 |	mod
  ACC -> ALU_LG
  TICK: 493 PC:  25 ADDR:   0 MEM_OUT: 3 ACC: 3 LG_ALU:   3 RG_ALU:   2 SP: 3984 ZF: 0 |	mod
  ALU_RES = ALU_LG % ALU_RG
  TICK: 494 PC:  25 ADDR:   0 MEM_OUT: 3 ACC: 3 LG_ALU:   3 RG_ALU:   2 SP: 3984 ZF: 0 |	mod
  ALU_RES -> ACC
  TICK: 495 PC:  25 ADDR:   0 MEM_OUT: 3 ACC: 1 LG_ALU:   3 RG_ALU:   2 SP: 3984 ZF: 0 |	mod
  SP -> ALU_LG
  TICK: 496 PC:  26 ADDR:   0 MEM_OUT: 3 ACC: 1 LG_ALU: 3984 RG_ALU:   2 SP: 3984 ZF: 0 |	push
  ALU_RES = SP - 1
  TICK: 497 PC:  26 ADDR:   0 MEM_OUT: 3 ACC: 1 LG_ALU: 3984 RG_ALU:   2 SP: 3984 ZF: 0 |	push
  ALU_RES -> SP
  TICK: 498 PC:  26 ADDR:   0 MEM_OUT: 3 ACC: 1 LG_ALU: 3984 RG_ALU:   2 SP: 3983 ZF: 0 |	push
  WRITE ACC -> MEM[ALU]
  TICK: 498 PC:  26 ADDR:   0 MEM_OUT: 3 ACC: 1 LG_ALU: 3984 RG_ALU:   2 SP: 3983 ZF: 0 |	push
  NUM -> ALU_RG
  TICK: 499 PC:  27 ADDR:   0 MEM_OUT: 3 ACC: 1 LG_ALU: 3984 RG_ALU:   0 SP: 3983 ZF: 0 |	load   =
  ALU_RES = ALU_RG
  TICK: 500 PC:  27 ADDR:   0 MEM_OUT: 3 ACC: 1 LG_ALU: 3984 RG_ALU:   0 SP: 3983 ZF: 1 |	load   =
  ALU_RES -> ACC
  TICK: 501 PC:  27 ADDR:   0 MEM_OUT: 3 ACC: 0 LG_ALU: 3984 RG_ALU:   0 SP: 3983 ZF: 1 |	load   =
  SP -> ALU_LG
  TICK: 502 PC:  28 ADDR:   0 MEM_OUT: 3 ACC: 0 LG_ALU: 3983 RG_ALU:   0 SP: 3983 ZF: 1 |	sub   =
  ALU_RES = ALU_LG
  TICK: 503 PC:  28 ADDR:   0 MEM_OUT: 3 ACC: 0 LG_ALU: 3983 RG_ALU:   0 SP: 3983 ZF: 0 |	sub   =
  READ MEM[ALU]
  TICK: 504 PC:  28 ADDR:   0 MEM_OUT: 1 ACC: 0 LG_ALU: 3983 RG_ALU:   0 SP: 3983 ZF: 0 |	sub   =
  MEM[ALU] -> ALU_RG
  TICK: 505 PC:  28 ADDR:   0 MEM_OUT: 1 ACC: 0 LG_ALU: 3983 RG_ALU:   1 SP: 3983 ZF: 0 |	sub   =
  ALU_RES = SP + 1
  TICK: 506 PC:  28 ADDR:   0 MEM_OUT: 1 ACC: 0 LG_ALU: 3983 RG_ALU:   1 SP: 3983 ZF: 0 |	sub   =
  ALU_RES -> SP
  TICK: 507 PC:  28 ADDR:   0 MEM_OUT: 1 ACC: 0 LG_ALU: 3983 RG_ALU:   1 SP: 3984 ZF: 0 |	sub   =
  ACC -> ALU_LG
  TICK: 507 PC:  28 ADDR:   0 MEM_OUT: 1 ACC: 0 LG_ALU:   0 RG_ALU:   1 SP: 3984 ZF: 0 |	sub   =
  ALU_RES = ALU_LG + ALU_RG
  TICK: 508 PC:  28 ADDR:   0 MEM_OUT: 1 ACC: 0 LG_ALU:   0 RG_ALU:   1 SP: 3984 ZF: 0 |	sub   =
  ALU_RES -> ACC
  TICK: 509 PC:  28 ADDR:   0 MEM_OUT: 1 ACC: -1 LG_ALU:   0 RG_ALU:   1 SP: 3984 ZF: 0 |	sub   =
  ADDR -> PC
  NUM -> ALU_RG
  TICK: 511 PC:  32 ADDR:   0 MEM_OUT: 1 ACC: -1 LG_ALU:   0 RG_ALU:   0 SP: 3984 ZF: 0 |	load   =
  ALU_RES = ALU_RG
  TICK: 512 PC:  32 ADDR:   0 MEM_OUT: 1 ACC: -1 LG_ALU:   0 RG_ALU:   0 SP: 3984 ZF: 1 |	load   =
  ALU_RES -> ACC
  TICK: 513 PC:  32 ADDR:   0 MEM_OUT: 1 ACC: 0 LG_ALU:   0 RG_ALU:   0 SP: 3984 ZF: 1 |	load   =
  SP -> ALU_LG
  TICK: 514 PC:  33 ADDR:   0 MEM_OUT: 1 ACC: 0 LG_ALU: 3984 RG_ALU:   0 SP: 3984 ZF: 1 |	push   =
  ALU_RES = SP - 1
  TICK: 515 PC:  33 ADDR:   0 MEM_OUT: 1 ACC: 0 LG_ALU: 3984 RG_ALU:   0 SP: 3984 ZF: 0 |	push   =
  ALU_RES -> SP
  TICK: 516 PC:  33 ADDR:   0 MEM_OUT: 1 ACC: 0 LG_ALU: 3984 RG_ALU:   0 SP: 3983 ZF: 0 |	push   =
  WRITE ACC -> MEM[ALU]
  TICK: 516 PC:  33 ADDR:   0 MEM_OUT: 1 ACC: 0 LG_ALU: 3984 RG_ALU:   0 SP: 3983 ZF: 0 |	push   =
  SP -> ALU_LG
  TICK: 517 PC:  34 ADDR:   0 MEM_OUT: 1 ACC: 0 LG_ALU: 3983 RG_ALU:   0 SP: 3983 ZF: 0 |	pop   if
  ALU_RES = ALU_LG
  TICK: 518 PC:  34 ADDR:   0 MEM_OUT: 1 ACC: 0 LG_ALU: 3983 RG_ALU:   0 SP: 3983 ZF: 0 |	pop   if
  READ MEM[ALU]
  TICK: 519 PC:  34 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3983 RG_ALU:   0 SP: 3983 ZF: 0 |	pop   if
  ALU_RES = SP + 1
  TICK: 520 PC:  34 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3983 RG_ALU:   0 SP: 3983 ZF: 0 |	pop   if
  ALU_RES -> SP
  TICK: 521 PC:  34 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3983 RG_ALU:   0 SP: 3984 ZF: 0 |	pop   if
  MEM[ALU] -> ALU_RG
  TICK: 521 PC:  34 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3983 RG_ALU:   0 SP: 3984 ZF: 0 |	pop   if
  ALU_RES = ALU_RG
  TICK: 522 PC:  34 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3983 RG_ALU:   0 SP: 3984 ZF: 1 |	pop   if
  ALU_RES -> ACC
  TICK: 523 PC:  34 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3983 RG_ALU:   0 SP: 3984 ZF: 1 |	pop   if
  PC + 1 -> PC
  ADDR -> PC
  NUM -> ALU_RG
  TICK: 525 PC:  20 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3983 RG_ALU:   0 SP: 3984 ZF: 1 |	load   +
  ALU_RES = ALU_RG
  TICK: 526 PC:  20 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3983 RG_ALU:   0 SP: 3984 ZF: 1 |	load   +
  ALU_RES -> ACC
  TICK: 527 PC:  20 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3983 RG_ALU:   0 SP: 3984 ZF: 1 |	load   +
  NUM -> ALU_RG
  TICK: 528 PC:  21 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3983 RG_ALU:   0 SP: 3984 ZF: 1 |	add   +
  ACC -> ALU_LG
  TICK: 528 PC:  21 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU:   0 RG_ALU:   0 SP: 3984 ZF: 1 |	add   +
  ALU_RES = ALU_LG + ALU_RG
  TICK: 529 PC:  21 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU:   0 RG_ALU:   0 SP: 3984 ZF: 1 |	add   +
  ALU_RES -> ACC
  TICK: 530 PC:  21 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU:   0 RG_ALU:   0 SP: 3984 ZF: 1 |	add   +
  SP -> ALU_LG
  TICK: 531 PC:  22 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3984 RG_ALU:   0 SP: 3984 ZF: 1 |	push   +
  ALU_RES = SP - 1
  TICK: 532 PC:  22 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3984 RG_ALU:   0 SP: 3984 ZF: 0 |	push   +
  ALU_RES -> SP
  TICK: 533 PC:  22 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3984 RG_ALU:   0 SP: 3983 ZF: 0 |	push   +
  WRITE ACC -> MEM[ALU]
  TICK: 533 PC:  22 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3984 RG_ALU:   0 SP: 3983 ZF: 0 |	push   +
  ADDR -> PC
  SP -> ALU_LG
  TICK: 535 PC:  37 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3983 RG_ALU:   0 SP: 3983 ZF: 0 |	pop   if
  ALU_RES = ALU_LG
  TICK: 536 PC:  37 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3983 RG_ALU:   0 SP: 3983 ZF: 0 |	pop   if
  READ MEM[ALU]
  TICK: 537 PC:  37 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3983 RG_ALU:   0 SP: 3983 ZF: 0 |	pop   if
  ALU_RES = SP + 1
  TICK: 538 PC:  37 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3983 RG_ALU:   0 SP: 3983 ZF: 0 |	pop   if
  ALU_RES -> SP
  TICK: 539 PC:  37 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3983 RG_ALU:   0 SP: 3984 ZF: 0 |	pop   if
  MEM[ALU] -> ALU_RG
  TICK: 539 PC:  37 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3983 RG_ALU:   0 SP: 3984 ZF: 0 |	pop   if
  ALU_RES = ALU_RG
  TICK: 540 PC:  37 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3983 RG_ALU:   0 SP: 3984 ZF: 1 |	pop   if
  ALU_RES -> ACC
  TICK: 541 PC:  37 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3983 RG_ALU:   0 SP: 3984 ZF: 1 |	pop   if
  SP -> ALU_LG
  TICK: 542 PC:  38 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3984 RG_ALU:   0 SP: 3984 ZF: 1 |	push   if
  ALU_RES = SP - 1
  TICK: 543 PC:  38 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3984 RG_ALU:   0 SP: 3984 ZF: 0 |	push   if
  ALU_RES -> SP
  TICK: 544 PC:  38 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3984 RG_ALU:   0 SP: 3983 ZF: 0 |	push   if
  WRITE ACC -> MEM[ALU]
  TICK: 544 PC:  38 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3984 RG_ALU:   0 SP: 3983 ZF: 0 |	push   if
  ADDR -> ALU_RG
  TICK: 545 PC:  39 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3984 RG_ALU:   6 SP: 3983 ZF: 0 |	load   var
  ALU_RES = ALU_RG
  TICK: 546 PC:  39 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3984 RG_ALU:   6 SP: 3983 ZF: 0 |	load   var
  READ MEM[ALU]
  TICK: 547 PC:  39 ADDR:   0 MEM_OUT: 3 ACC: 0 LG_ALU: 3984 RG_ALU:   6 SP: 3983 ZF: 0 |	load   var
  MEM[ALU] -> ALU_RG
  TICK: 548 PC:  39 ADDR:   0 MEM_OUT: 3 ACC: 0 LG_ALU: 3984 RG_ALU:   3 SP: 3983 ZF: 0 |	load   var
  ALU_RES = ALU_RG
  TICK: 549 PC:  39 ADDR:   0 MEM_OUT: 3 ACC: 0 LG_ALU: 3984 RG_ALU:   3 SP: 3983 ZF: 0 |	load   var
  ALU_RES -> ACC
  TICK: 550 PC:  39 ADDR:   0 MEM_OUT: 3 ACC: 3 LG_ALU: 3984 RG_ALU:   3 SP: 3983 ZF: 0 |	load   var
  ADDR -> ALU_RG
  TICK: 551 PC:  40 ADDR:   0 MEM_OUT: 3 ACC: 3 LG_ALU: 3984 RG_ALU:   8 SP: 3983 ZF: 0 |	store   var
  ALU_RES = ALU_RG
  TICK: 552 PC:  40 ADDR:   0 MEM_OUT: 3 ACC: 3 LG_ALU: 3984 RG_ALU:   8 SP: 3983 ZF: 0 |	store   var
  WRITE ACC -> MEM[ALU]
  TICK: 553 PC:  40 ADDR:   0 MEM_OUT: 3 ACC: 3 LG_ALU: 3984 RG_ALU:   8 SP: 3983 ZF: 0 |	store   var
  NUM -> ALU_RG
  TICK: 554 PC:  41 ADDR:   0 MEM_OUT: 3 ACC: 3 LG_ALU: 3984 RG_ALU:   1 SP: 3983 ZF: 0 |	load   var
  ALU_RES = ALU_RG
  TICK: 555 PC:  41 ADDR:   0 MEM_OUT: 3 ACC: 3 LG_ALU: 3984 RG_ALU:   1 SP: 3983 ZF: 0 |	load   var
  ALU_RES -> ACC
  TICK: 556 PC:  41 ADDR:   0 MEM_OUT: 3 ACC: 1 LG_ALU: 3984 RG_ALU:   1 SP: 3983 ZF: 0 |	load   var
  SP -> ALU_LG
  TICK: 557 PC:  42 ADDR:   0 MEM_OUT: 3 ACC: 1 LG_ALU: 3983 RG_ALU:   1 SP: 3983 ZF: 0 |	push   var
  ALU_RES = SP - 1
  TICK: 558 PC:  42 ADDR:   0 MEM_OUT: 3 ACC: 1 LG_ALU: 3983 RG_ALU:   1 SP: 3983 ZF: 0 |	push   var
  ALU_RES -> SP
  TICK: 559 PC:  42 ADDR:   0 MEM_OUT: 3 ACC: 1 LG_ALU: 3983 RG_ALU:   1 SP: 3982 ZF: 0 |	push   var
  WRITE ACC -> MEM[ALU]
  TICK: 559 PC:  42 ADDR:   0 MEM_OUT: 3 ACC: 1 LG_ALU: 3983 RG_ALU:   1 SP: 3982 ZF: 0 |	push   var
  ADDR -> ALU_RG
  TICK: 560 PC:  43 ADDR:   0 MEM_OUT: 3 ACC: 1 LG_ALU: 3983 RG_ALU:   5 SP: 3982 ZF: 0 |	load   +
  ALU_RES = ALU_RG
  TICK: 561 PC:  43 ADDR:   0 MEM_OUT: 3 ACC: 1 LG_ALU: 3983 RG_ALU:   5 SP: 3982 ZF: 0 |	load   +
  READ MEM[ALU]
  TICK: 562 PC:  43 ADDR:   0 MEM_OUT: 2 ACC: 1 LG_ALU: 3983 RG_ALU:   5 SP: 3982 ZF: 0 |	load   +
  MEM[ALU] -> ALU_RG
  TICK: 563 PC:  43 ADDR:   0 MEM_OUT: 2 ACC: 1 LG_ALU: 3983 RG_ALU:   2 SP: 3982 ZF: 0 |	load   +
  ALU_RES = ALU_RG
  TICK: 564 PC:  43 ADDR:   0 MEM_OUT: 2 ACC: 1 LG_ALU: 3983 RG_ALU:   2 SP: 3982 ZF: 0 |	load   +
  ALU_RES -> ACC
  TICK: 565 PC:  43 ADDR:   0 MEM_OUT: 2 ACC: 2 LG_ALU: 3983 RG_ALU:   2 SP: 3982 ZF: 0 |	load   +
  ADDR -> ALU_RG
  TICK: 566 PC:  44 ADDR:   0 MEM_OUT: 2 ACC: 2 LG_ALU: 3983 RG_ALU:   6 SP: 3982 ZF: 0 |	add   +
  ALU_RES = ALU_RG
  TICK: 567 PC:  44 ADDR:   0 MEM_OUT: 2 ACC: 2 LG_ALU: 3983 RG_ALU:   6 SP: 3982 ZF: 0 |	add   +
  READ MEM[ALU]
  TICK: 568 PC:  44 ADDR:   0 MEM_OUT: 3 ACC: 2 LG_ALU: 3983 RG_ALU:   6 SP: 3982 ZF: 0 |	add   +
  MEM[ALU] -> ALU_RG
  TICK: 569 PC:  44 ADDR:   0 MEM_OUT: 3 ACC: 2 LG_ALU: 3983 RG_ALU:   3 SP: 3982 ZF: 0 |	add   +
  ACC -> ALU_LG
  TICK: 569 PC:  44 ADDR:   0 MEM_OUT: 3 ACC: 2 LG_ALU:   2 RG_ALU:   3 SP: 3982 ZF: 0 |	add   +
  ALU_RES = ALU_LG + ALU_RG
  TICK: 570 PC:  44 ADDR:   0 MEM_OUT: 3 ACC: 2 LG_ALU:   2 RG_ALU:   3 SP: 3982 ZF: 0 |	add   +
  ALU_RES -> ACC
  TICK: 571 PC:  44 ADDR:   0 MEM_OUT: 3 ACC: 5 LG_ALU:   2 RG_ALU:   3 SP: 3982 ZF: 0 |	add   +
  SP -> ALU_LG
  TICK: 572 PC:  45 ADDR:   0 MEM_OUT: 3 ACC: 5 LG_ALU: 3982 RG_ALU:   3 SP: 3982 ZF: 0 |	push   +
  ALU_RES = SP - 1
  TICK: 573 PC:  45 ADDR:   0 MEM_OUT: 3 ACC: 5 LG_ALU: 3982 RG_ALU:   3 SP: 3982 ZF: 0 |	push   +
  ALU_RES -> SP
  TICK: 574 PC:  45 ADDR:   0 MEM_OUT: 3 ACC: 5 LG_ALU: 3982 RG_ALU:   3 SP: 3981 ZF: 0 |	push   +
  WRITE ACC -> MEM[ALU]
  TICK: 574 PC:  45 ADDR:   0 MEM_OUT: 3 ACC: 5 LG_ALU: 3982 RG_ALU:   3 SP: 3981 ZF: 0 |	push   +
  SP -> ALU_LG
  TICK: 575 PC:  46 ADDR:   0 MEM_OUT: 3 ACC: 5 LG_ALU: 3981 RG_ALU:   3 SP: 3981 ZF: 0 |	pop   var
  ALU_RES = ALU_LG
  TICK: 576 PC:  46 ADDR:   0 MEM_OUT: 3 ACC: 5 LG_ALU: 3981 RG_ALU:   3 SP: 3981 ZF: 0 |	pop   var
  READ MEM[ALU]
  TICK: 577 PC:  46 ADDR:   0 MEM_OUT: 5 ACC: 5 LG_ALU: 3981 RG_ALU:   3 SP: 3981 ZF: 0 |	pop   var
  ALU_RES = SP + 1
  TICK: 578 PC:  46 ADDR:   0 MEM_OUT: 5 ACC: 5 LG_ALU: 3981 RG_ALU:   3 SP: 3981 ZF: 0 |	pop   var
  ALU_RES -> SP
  TICK: 579 PC:  46 ADDR:   0 MEM_OUT: 5 ACC: 5 LG_ALU: 3981 RG_ALU:   3 SP: 3982 ZF: 0 |	pop   var
  MEM[ALU] -> ALU_RG
  TICK: 579 PC:  46 ADDR:   0 MEM_OUT: 5 ACC: 5 LG_ALU: 3981 RG_ALU:   5 SP: 3982 ZF: 0 |	pop   var
  ALU_RES = ALU_RG
  TICK: 580 PC:  46 ADDR:   0 MEM_OUT: 5 ACC: 5 LG_ALU: 3981 RG_ALU:   5 SP: 3982 ZF: 0 |	pop   var
  ALU_RES -> ACC
  TICK: 581 PC:  46 ADDR:   0 MEM_OUT: 5 ACC: 5 LG_ALU: 3981 RG_ALU:   5 SP: 3982 ZF: 0 |	pop   var
  ADDR -> ALU_RG
  TICK: 582 PC:  47 ADDR:   0 MEM_OUT: 5 ACC: 5 LG_ALU: 3981 RG_ALU:   6 SP: 3982 ZF: 0 |	store   var
  ALU_RES = ALU_RG
  TICK: 583 PC:  47 ADDR:   0 MEM_OUT: 5 ACC: 5 LG_ALU: 3981 RG_ALU:   6 SP: 3982 ZF: 0 |	store   var
  WRITE ACC -> MEM[ALU]
  TICK: 584 PC:  47 ADDR:   0 MEM_OUT: 5 ACC: 5 LG_ALU: 3981 RG_ALU:   6 SP: 3982 ZF: 0 |	store   var
  NUM -> ALU_RG
  TICK: 585 PC:  48 ADDR:   0 MEM_OUT: 5 ACC: 5 LG_ALU: 3981 RG_ALU:   1 SP: 3982 ZF: 0 |	load   var
  ALU_RES = ALU_RG
  TICK: 586 PC:  48 ADDR:   0 MEM_OUT: 5 ACC: 5 LG_ALU: 3981 RG_ALU:   1 SP: 3982 ZF: 0 |	load   var
  ALU_RES -> ACC
  TICK: 587 PC:  48 ADDR:   0 MEM_OUT: 5 ACC: 1 LG_ALU: 3981 RG_ALU:   1 SP: 3982 ZF: 0 |	load   var
  SP -> ALU_LG
  TICK: 588 PC:  49 ADDR:   0 MEM_OUT: 5 ACC: 1 LG_ALU: 3982 RG_ALU:   1 SP: 3982 ZF: 0 |	push   var
  ALU_RES = SP - 1
  TICK: 589 PC:  49 ADDR:   0 MEM_OUT: 5 ACC: 1 LG_ALU: 3982 RG_ALU:   1 SP: 3982 ZF: 0 |	push   var
  ALU_RES -> SP
  TICK: 590 PC:  49 ADDR:   0 MEM_OUT: 5 ACC: 1 LG_ALU: 3982 RG_ALU:   1 SP: 3981 ZF: 0 |	push   var
  WRITE ACC -> MEM[ALU]
  TICK: 590 PC:  49 ADDR:   0 MEM_OUT: 5 ACC: 1 LG_ALU: 3982 RG_ALU:   1 SP: 3981 ZF: 0 |	push   var
  ADDR -> ALU_RG
  TICK: 591 PC:  50 ADDR:   0 MEM_OUT: 5 ACC: 1 LG_ALU: 3982 RG_ALU:   8 SP: 3981 ZF: 0 |	load   var
  ALU_RES = ALU_RG
  TICK: 592 PC:  50 ADDR:   0 MEM_OUT: 5 ACC: 1 LG_ALU: 3982 RG_ALU:   8 SP: 3981 ZF: 0 |	load   var
  READ MEM[ALU]
  TICK: 593 PC:  50 ADDR:   0 MEM_OUT: 3 ACC: 1 LG_ALU: 3982 RG_ALU:   8 SP: 3981 ZF: 0 |	load   var
  MEM[ALU] -> ALU_RG
  TICK: 594 PC:  50 ADDR:   0 MEM_OUT: 3 ACC: 1 LG_ALU: 3982 RG_ALU:   3 SP: 3981 ZF: 0 |	load   var
  ALU_RES = ALU_RG
  TICK: 595 PC:  50 ADDR:   0 MEM_OUT: 3 ACC: 1 LG_ALU: 3982 RG_ALU:   3 SP: 3981 ZF: 0 |	load   var
  ALU_RES -> ACC
  TICK: 596 PC:  50 ADDR:   0 MEM_OUT: 3 ACC: 3 LG_ALU: 3982 RG_ALU:   3 SP: 3981 ZF: 0 |	load   var
  ADDR -> ALU_RG
  TICK: 597 PC:  51 ADDR:   0 MEM_OUT: 3 ACC: 3 LG_ALU: 3982 RG_ALU:   5 SP: 3981 ZF: 0 |	store   var
  ALU_RES = ALU_RG
  TICK: 598 PC:  51 ADDR:   0 MEM_OUT: 3 ACC: 3 LG_ALU: 3982 RG_ALU:   5 SP: 3981 ZF: 0 |	store   var
  WRITE ACC -> MEM[ALU]
  TICK: 599 PC:  51 ADDR:   0 MEM_OUT: 3 ACC: 3 LG_ALU: 3982 RG_ALU:   5 SP: 3981 ZF: 0 |	store   var
  NUM -> ALU_RG
  TICK: 600 PC:  52 ADDR:   0 MEM_OUT: 3 ACC: 3 LG_ALU: 3982 RG_ALU:   1 SP: 3981 ZF: 0 |	load   var
  ALU_RES = ALU_RG
  TICK: 601 PC:  52 ADDR:   0 MEM_OUT: 3 ACC: 3 LG_ALU: 3982 RG_ALU:   1 SP: 3981 ZF: 0 |	load   var
  ALU_RES -> ACC
  TICK: 602 PC:  52 ADDR:   0 MEM_OUT: 3 ACC: 1 LG_ALU: 3982 RG_ALU:   1 SP: 3981 ZF: 0 |	load   var
  SP -> ALU_LG
  TICK: 603 PC:  53 ADDR:   0 MEM_OUT: 3 ACC: 1 LG_ALU: 3981 RG_ALU:   1 SP: 3981 ZF: 0 |	push   var
  ALU_RES = SP - 1
  TICK: 604 PC:  53 ADDR:   0 MEM_OUT: 3 ACC: 1 LG_ALU: 3981 RG_ALU:   1 SP: 3981 ZF: 0 |	push   var
  ALU_RES -> SP
  TICK: 605 PC:  53 ADDR:   0 MEM_OUT: 3 ACC: 1 LG_ALU: 3981 RG_ALU:   1 SP: 3980 ZF: 0 |	push   var
  WRITE ACC -> MEM[ALU]
  TICK: 605 PC:  53 ADDR:   0 MEM_OUT: 3 ACC: 1 LG_ALU: 3981 RG_ALU:   1 SP: 3980 ZF: 0 |	push   var
  ADDR -> ALU_RG
  TICK: 606 PC:  54 ADDR:   0 MEM_OUT: 3 ACC: 1 LG_ALU: 3981 RG_ALU:   6 SP: 3980 ZF: 0 |	load   <
  ALU_RES = ALU_RG
  TICK: 607 PC:  54 ADDR:   0 MEM_OUT: 3 ACC: 1 LG_ALU: 3981 RG_ALU:   6 SP: 3980 ZF: 0 |	load   <
  READ MEM[ALU]
  TICK: 608 PC:  54 ADDR:   0 MEM_OUT: 5 ACC: 1 LG_ALU: 3981 RG_ALU:   6 SP: 3980 ZF: 0 |	load   <
  MEM[ALU] -> ALU_RG
  TICK: 609 PC:  54 ADDR:   0 MEM_OUT: 5 ACC: 1 LG_ALU: 3981 RG_ALU:   5 SP: 3980 ZF: 0 |	load   <
  ALU_RES = ALU_RG
  TICK: 610 PC:  54 ADDR:   0 MEM_OUT: 5 ACC: 1 LG_ALU: 3981 RG_ALU:   5 SP: 3980 ZF: 0 |	load   <
  ALU_RES -> ACC
  TICK: 611 PC:  54 ADDR:   0 MEM_OUT: 5 ACC: 5 LG_ALU: 3981 RG_ALU:   5 SP: 3980 ZF: 0 |	load   <
  ADDR -> ALU_RG
  TICK: 612 PC:  55 ADDR:   0 MEM_OUT: 5 ACC: 5 LG_ALU: 3981 RG_ALU:   7 SP: 3980 ZF: 0 |	sub   <
  ALU_RES = ALU_RG
  TICK: 613 PC:  55 ADDR:   0 MEM_OUT: 5 ACC: 5 LG_ALU: 3981 RG_ALU:   7 SP: 3980 ZF: 0 |	sub   <
  READ MEM[ALU]
  TICK: 614 PC:  55 ADDR:   0 MEM_OUT: 400000 ACC: 5 LG_ALU: 3981 RG_ALU:   7 SP: 3980 ZF: 0 |	sub   <
  MEM[ALU] -> ALU_RG
  TICK: 615 PC:  55 ADDR:   0 MEM_OUT: 400000 ACC: 5 LG_ALU: 3981 RG_ALU: 400000 SP: 3980 ZF: 0 |	sub   <
  ACC -> ALU_LG
  TICK: 615 PC:  55 ADDR:   0 MEM_OUT: 400000 ACC: 5 LG_ALU:   5 RG_ALU: 400000 SP: 3980 ZF: 0 |	sub   <
  ALU_RES = ALU_LG + ALU_RG
  TICK: 616 PC:  55 ADDR:   0 MEM_OUT: 400000 ACC: 5 LG_ALU:   5 RG_ALU: 400000 SP: 3980 ZF: 0 |	sub   <
  ALU_RES -> ACC
  TICK: 617 PC:  55 ADDR:   0 MEM_OUT: 400000 ACC: -399995 LG_ALU:   5 RG_ALU: 400000 SP: 3980 ZF: 0 |	sub   <
  PC + 1 -> PC
  NUM -> ALU_RG
  TICK: 618 PC:  57 ADDR:   0 MEM_OUT: 400000 ACC: -399995 LG_ALU:   5 RG_ALU:   1 SP: 3980 ZF: 0 |	load   <
  ALU_RES = ALU_RG
  TICK: 619 PC:  57 ADDR:   0 MEM_OUT: 400000 ACC: -399995 LG_ALU:   5 RG_ALU:   1 SP: 3980 ZF: 0 |	load   <
  ALU_RES -> ACC
  TICK: 620 PC:  57 ADDR:   0 MEM_OUT: 400000 ACC: 1 LG_ALU:   5 RG_ALU:   1 SP: 3980 ZF: 0 |	load   <
  ADDR -> PC
  SP -> ALU_LG
  TICK: 622 PC:  60 ADDR:   0 MEM_OUT: 400000 ACC: 1 LG_ALU: 3980 RG_ALU:   1 SP: 3980 ZF: 0 |	push   <
  ALU_RES = SP - 1
  TICK: 623 PC:  60 ADDR:   0 MEM_OUT: 400000 ACC: 1 LG_ALU: 3980 RG_ALU:   1 SP: 3980 ZF: 0 |	push   <
  ALU_RES -> SP
  TICK: 624 PC:  60 ADDR:   0 MEM_OUT: 400000 ACC: 1 LG_ALU: 3980 RG_ALU:   1 SP: 3979 ZF: 0 |	push   <
  WRITE ACC -> MEM[ALU]
  TICK: 624 PC:  60 ADDR:   0 MEM_OUT: 400000 ACC: 1 LG_ALU: 3980 RG_ALU:   1 SP: 3979 ZF: 0 |	push   <
  SP -> ALU_LG
  TICK: 625 PC:  61 ADDR:   0 MEM_OUT: 400000 ACC: 1 LG_ALU: 3979 RG_ALU:   1 SP: 3979 ZF: 0 |	pop
  ALU_RES = ALU_LG
  TICK: 626 PC:  61 ADDR:   0 MEM_OUT: 400000 ACC: 1 LG_ALU: 3979 RG_ALU:   1 SP: 3979 ZF: 0 |	pop
  READ MEM[ALU]
  TICK: 627 PC:  61 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3979 RG_ALU:   1 SP: 3979 ZF: 0 |	pop
  ALU_RES = SP + 1
  TICK: 628 PC:  61 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3979 RG_ALU:   1 SP: 3979 ZF: 0 |	pop
  ALU_RES -> SP
  TICK: 629 PC:  61 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3979 RG_ALU:   1 SP: 3980 ZF: 0 |	pop
  MEM[ALU] -> ALU_RG
  TICK: 629 PC:  61 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3979 RG_ALU:   1 SP: 3980 ZF: 0 |	pop
  ALU_RES = ALU_RG
  TICK: 630 PC:  61 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3979 RG_ALU:   1 SP: 3980 ZF: 0 |	pop
  ALU_RES -> ACC
  TICK: 631 PC:  61 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3979 RG_ALU:   1 SP: 3980 ZF: 0 |	pop
  ADDR -> PC
  ADDR -> PC
  ADDR -> ALU_RG
  TICK: 634 PC:  24 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3979 RG_ALU:   6 SP: 3980 ZF: 0 |	load
  ALU_RES = ALU_RG
  TICK: 635 PC:  24 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3979 RG_ALU:   6 SP: 3980 ZF: 0 |	load
  READ MEM[ALU]
  TICK: 636 PC:  24 ADDR:   0 MEM_OUT: 5 ACC: 1 LG_ALU: 3979 RG_ALU:   6 SP: 3980 ZF: 0 |	load
  MEM[ALU] -> ALU_RG
  TICK: 637 PC:  24 ADDR:   0 MEM_OUT: 5 ACC: 1 LG_ALU: 3979 RG_ALU:   5 SP: 3980 ZF: 0 |	load
  ALU_RES = ALU_RG
  TICK: 638 PC:  24 ADDR:   0 MEM_OUT: 5 ACC: 1 LG_ALU: 3979 RG_ALU:   5 SP: 3980 ZF: 0 |	load
  ALU_RES -> ACC
  TICK: 639 PC:  24 ADDR:   0 MEM_OUT: 5 ACC: 5 LG_ALU: 3979 RG_ALU:   5 SP: 3980 ZF: 0 |	load
  NUM -> ALU_RG
  TICK: 640 PC:  25 ADDR:   0 MEM_OUT: 5 ACC: 5 LG_ALU: 3979 RG_ALU:   2 SP: 3980 ZF: 0 |	mod
  ACC -> ALU_LG
  TICK: 640 PC:  25 ADDR:   0 MEM_OUT: 5 ACC: 5 LG_ALU:   5 RG_ALU:   2 SP: 3980 ZF: 0 |	mod
  ALU_RES = ALU_LG % ALU_RG
  TICK: 641 PC:  25 ADDR:   0 MEM_OUT: 5 ACC: 5 LG_ALU:   5 RG_ALU:   2 SP: 3980 ZF: 0 |	mod
  ALU_RES -> ACC
  TICK: 642 PC:  25 ADDR:   0 MEM_OUT: 5 ACC: 1 LG_ALU:   5 RG_ALU:   2 SP: 3980 ZF: 0 |	mod
  SP -> ALU_LG
  TICK: 643 PC:  26 ADDR:   0 MEM_OUT: 5 ACC: 1 LG_ALU: 3980 RG_ALU:   2 SP: 3980 ZF: 0 |	push
  ALU_RES = SP - 1
  TICK: 644 PC:  26 ADDR:   0 MEM_OUT: 5 ACC: 1 LG_ALU: 3980 RG_ALU:   2 SP: 3980 ZF: 0 |	push
  ALU_RES -> SP
  TICK: 645 PC:  26 ADDR:   0 MEM_OUT: 5 ACC: 1 LG_ALU: 3980 RG_ALU:   2 SP: 3979 ZF: 0 |	push
  WRITE ACC -> MEM[ALU]
  TICK: 645 PC:  26 ADDR:   0 MEM_OUT: 5 ACC: 1 LG_ALU: 3980 RG_ALU:   2 SP: 3979 ZF: 0 |	push
  NUM -> ALU_RG
  TICK: 646 PC:  27 ADDR:   0 MEM_OUT: 5 ACC: 1 LG_ALU: 3980 RG_ALU:   0 SP: 3979 ZF: 0 |	load   =
  ALU_RES = ALU_RG
  TICK: 647 PC:  27 ADDR:   0 MEM_OUT: 5 ACC: 1 LG_ALU: 3980 RG_ALU:   0 SP: 3979 ZF: 1 |	load   =
  ALU_RES -> ACC
  TICK: 648 PC:  27 ADDR:   0 MEM_OUT: 5 ACC: 0 LG_ALU: 3980 RG_ALU:   0 SP: 3979 ZF: 1 |	load   =
  SP -> ALU_LG
  TICK: 649 PC:  28 ADDR:   0 MEM_OUT: 5 ACC: 0 LG_ALU: 3979 RG_ALU:   0 SP: 3979 ZF: 1 |	sub   =
  ALU_RES = ALU_LG
  TICK: 650 PC:  28 ADDR:   0 MEM_OUT: 5 ACC: 0 LG_ALU: 3979 RG_ALU:   0 SP: 3979 ZF: 0 |	sub   =
  READ MEM[ALU]
  TICK: 651 PC:  28 ADDR:   0 MEM_OUT: 1 ACC: 0 LG_ALU: 3979 RG_ALU:   0 SP: 3979 ZF: 0 |	sub   =
  MEM[ALU] -> ALU_RG
  TICK: 652 PC:  28 ADDR:   0 MEM_OUT: 1 ACC: 0 LG_ALU: 3979 RG_ALU:   1 SP: 3979 ZF: 0 |	sub   =
  ALU_RES = SP + 1
  TICK: 653 PC:  28 ADDR:   0 MEM_OUT: 1 ACC: 0 LG_ALU: 3979 RG_ALU:   1 SP: 3979 ZF: 0 |	sub   =
  ALU_RES -> SP
  TICK: 654 PC:  28 ADDR:   0 MEM_OUT: 1 ACC: 0 LG_ALU: 3979 RG_ALU:   1 SP: 3980 ZF: 0 |	sub   =
  ACC -> ALU_LG
  TICK: 654 PC:  28 ADDR:   0 MEM_OUT: 1 ACC: 0 LG_ALU:   0 RG_ALU:   1 SP: 3980 ZF: 0 |	sub   =
  ALU_RES = ALU_LG + ALU_RG
  TICK: 655 PC:  28 ADDR:   0 MEM_OUT: 1 ACC: 0 LG_ALU:   0 RG_ALU:   1 SP: 3980 ZF: 0 |	sub   =
  ALU_RES -> ACC
  TICK: 656 PC:  28 ADDR:   0 MEM_OUT: 1 ACC: -1 LG_ALU:   0 RG_ALU:   1 SP: 3980 ZF: 0 |	sub   =
  ADDR -> PC
  NUM -> ALU_RG
  TICK: 658 PC:  32 ADDR:   0 MEM_OUT: 1 ACC: -1 LG_ALU:   0 RG_ALU:   0 SP: 3980 ZF: 0 |	load   =
  ALU_RES = ALU_RG
  TICK: 659 PC:  32 ADDR:   0 MEM_OUT: 1 ACC: -1 LG_ALU:   0 RG_ALU:   0 SP: 3980 ZF: 1 |	load   =
  ALU_RES -> ACC
  TICK: 660 PC:  32 ADDR:   0 MEM_OUT: 1 ACC: 0 LG_ALU:   0 RG_ALU:   0 SP: 3980 ZF: 1 |	load   =
  SP -> ALU_LG
  TICK: 661 PC:  33 ADDR:   0 MEM_OUT: 1 ACC: 0 LG_ALU: 3980 RG_ALU:   0 SP: 3980 ZF: 1 |	push   =
  ALU_RES = SP - 1
  TICK: 662 PC:  33 ADDR:   0 MEM_OUT: 1 ACC: 0 LG_ALU: 3980 RG_ALU:   0 SP: 3980 ZF: 0 |	push   =
  ALU_RES -> SP
  TICK: 663 PC:  33 ADDR:   0 MEM_OUT: 1 ACC: 0 LG_ALU: 3980 RG_ALU:   0 SP: 3979 ZF: 0 |	push   =
  WRITE ACC -> MEM[ALU]
  TICK: 663 PC:  33 ADDR:   0 MEM_OUT: 1 ACC: 0 LG_ALU: 3980 RG_ALU:   0 SP: 3979 ZF: 0 |	push   =
  SP -> ALU_LG
  TICK: 664 PC:  34 ADDR:   0 MEM_OUT: 1 ACC: 0 LG_ALU: 3979 RG_ALU:   0 SP: 3979 ZF: 0 |	pop   if
  ALU_RES = ALU_LG
  TICK: 665 PC:  34 ADDR:   0 MEM_OUT: 1 ACC: 0 LG_ALU: 3979 RG_ALU:   0 SP: 3979 ZF: 0 |	pop   if
  READ MEM[ALU]
  TICK: 666 PC:  34 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3979 RG_ALU:   0 SP: 3979 ZF: 0 |	pop   if
  ALU_RES = SP + 1
  TICK: 667 PC:  34 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3979 RG_ALU:   0 SP: 3979 ZF: 0 |	pop   if
  ALU_RES -> SP
  TICK: 668 PC:  34 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3979 RG_ALU:   0 SP: 3980 ZF: 0 |	pop   if
  MEM[ALU] -> ALU_RG
  TICK: 668 PC:  34 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3979 RG_ALU:   0 SP: 3980 ZF: 0 |	pop   if
  ALU_RES = ALU_RG
  TICK: 669 PC:  34 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3979 RG_ALU:   0 SP: 3980 ZF: 1 |	pop   if
  ALU_RES -> ACC
  TICK: 670 PC:  34 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3979 RG_ALU:   0 SP: 3980 ZF: 1 |	pop   if
  PC + 1 -> PC
  ADDR -> PC
  NUM -> ALU_RG
  TICK: 672 PC:  20 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3979 RG_ALU:   0 SP: 3980 ZF: 1 |	load   +
  ALU_RES = ALU_RG
  TICK: 673 PC:  20 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3979 RG_ALU:   0 SP: 3980 ZF: 1 |	load   +
  ALU_RES -> ACC
  TICK: 674 PC:  20 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3979 RG_ALU:   0 SP: 3980 ZF: 1 |	load   +
  NUM -> ALU_RG
  TICK: 675 PC:  21 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3979 RG_ALU:   0 SP: 3980 ZF: 1 |	add   +
  ACC -> ALU_LG
  TICK: 675 PC:  21 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU:   0 RG_ALU:   0 SP: 3980 ZF: 1 |	add   +
  ALU_RES = ALU_LG + ALU_RG
  TICK: 676 PC:  21 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU:   0 RG_ALU:   0 SP: 3980 ZF: 1 |	add   +
  ALU_RES -> ACC
  TICK: 677 PC:  21 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU:   0 RG_ALU:   0 SP: 3980 ZF: 1 |	add   +
  SP -> ALU_LG
  TICK: 678 PC:  22 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3980 RG_ALU:   0 SP: 3980 ZF: 1 |	push   +
  ALU_RES = SP - 1
  TICK: 679 PC:  22 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3980 RG_ALU:   0 SP: 3980 ZF: 0 |	push   +
  ALU_RES -> SP
  TICK: 680 PC:  22 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3980 RG_ALU:   0 SP: 3979 ZF: 0 |	push   +
  WRITE ACC -> MEM[ALU]
  TICK: 680 PC:  22 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3980 RG_ALU:   0 SP: 3979 ZF: 0 |	push   +
  ADDR -> PC
  SP -> ALU_LG
  TICK: 682 PC:  37 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3979 RG_ALU:   0 SP: 3979 ZF: 0 |	pop   if
  ALU_RES = ALU_LG
  TICK: 683 PC:  37 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3979 RG_ALU:   0 SP: 3979 ZF: 0 |	pop   if
  READ MEM[ALU]
  TICK: 684 PC:  37 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3979 RG_ALU:   0 SP: 3979 ZF: 0 |	pop   if
  ALU_RES = SP + 1
  TICK: 685 PC:  37 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3979 RG_ALU:   0 SP: 3979 ZF: 0 |	pop   if
  ALU_RES -> SP
  TICK: 686 PC:  37 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3979 RG_ALU:   0 SP: 3980 ZF: 0 |	pop   if
  MEM[ALU] -> ALU_RG
  TICK: 686 PC:  37 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3979 RG_ALU:   0 SP: 3980 ZF: 0 |	pop   if
  ALU_RES = ALU_RG
  TICK: 687 PC:  37 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3979 RG_ALU:   0 SP: 3980 ZF: 1 |	pop   if
  ALU_RES -> ACC
  TICK: 688 PC:  37 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3979 RG_ALU:   0 SP: 3980 ZF: 1 |	pop   if
  SP -> ALU_LG
  TICK: 689 PC:  38 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3980 RG_ALU:   0 SP: 3980 ZF: 1 |	push   if
  ALU_RES = SP - 1
  TICK: 690 PC:  38 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3980 RG_ALU:   0 SP: 3980 ZF: 0 |	push   if
  ALU_RES -> SP
  TICK: 691 PC:  38 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3980 RG_ALU:   0 SP: 3979 ZF: 0 |	push   if
  WRITE ACC -> MEM[ALU]
  TICK: 691 PC:  38 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3980 RG_ALU:   0 SP: 3979 ZF: 0 |	push   if
  ADDR -> ALU_RG
  TICK: 692 PC:  39 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3980 RG_ALU:   6 SP: 3979 ZF: 0 |	load   var
  ALU_RES = ALU_RG
  TICK: 693 PC:  39 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3980 RG_ALU:   6 SP: 3979 ZF: 0 |	load   var
  READ MEM[ALU]
  TICK: 694 PC:  39 ADDR:   0 MEM_OUT: 5 ACC: 0 LG_ALU: 3980 RG_ALU:   6 SP: 3979 ZF: 0 |	load   var
  MEM[ALU] -> ALU_RG
  TICK: 695 PC:  39 ADDR:   0 MEM_OUT: 5 ACC: 0 LG_ALU: 3980 RG_ALU:   5 SP: 3979 ZF: 0 |	load   var
  ALU_RES = ALU_RG
  TICK: 696 PC:  39 ADDR:   0 MEM_OUT: 5 ACC: 0 LG_ALU: 3980 RG_ALU:   5 SP: 3979 ZF: 0 |	load   var
  ALU_RES -> ACC
  TICK: 697 PC:  39 ADDR:   0 MEM_OUT: 5 ACC: 5 LG_ALU: 3980 RG_ALU:   5 SP: 3979 ZF: 0 |	load   var
  ADDR -> ALU_RG
  TICK: 698 PC:  40 ADDR:   0 MEM_OUT: 5 ACC: 5 LG_ALU: 3980 RG_ALU:   8 SP: 3979 ZF: 0 |	store   var
  ALU_RES = ALU_RG
  TICK: 699 PC:  40 ADDR:   0 MEM_OUT: 5 ACC: 5 LG_ALU: 3980 RG_ALU:   8 SP: 3979 ZF: 0 |	store   var
  WRITE ACC -> MEM[ALU]
  TICK: 700 PC:  40 ADDR:   0 MEM_OUT: 5 ACC: 5 LG_ALU: 3980 RG_ALU:   8 SP: 3979 ZF: 0 |	store   var
  NUM -> ALU_RG
  TICK: 701 PC:  41 ADDR:   0 MEM_OUT: 5 ACC: 5 LG_ALU: 3980 RG_ALU:   1 SP: 3979 ZF: 0 |	load   var
  ALU_RES = ALU_RG
  TICK: 702 PC:  41 ADDR:   0 MEM_OUT: 5 ACC: 5 LG_ALU: 3980 RG_ALU:   1 SP: 3979 ZF: 0 |	load   var
  ALU_RES -> ACC
  TICK: 703 PC:  41 ADDR:   0 MEM_OUT: 5 ACC: 1 LG_ALU: 3980 RG_ALU:   1 SP: 3979 ZF: 0 |	load   var
  SP -> ALU_LG
  TICK: 704 PC:  42 ADDR:   0 MEM_OUT: 5 ACC: 1 LG_ALU: 3979 RG_ALU:   1 SP: 3979 ZF: 0 |	push   var
  ALU_RES = SP - 1
  TICK: 705 PC:  42 ADDR:   0 MEM_OUT: 5 ACC: 1 LG_ALU: 3979 RG_ALU:   1 SP: 3979 ZF: 0 |	push   var
  ALU_RES -> SP
  TICK: 706 PC:  42 ADDR:   0 MEM_OUT: 5 ACC: 1 LG_ALU: 3979 RG_ALU:   1 SP: 3978 ZF: 0 |	push   var
  WRITE ACC -> MEM[ALU]
  TICK: 706 PC:  42 ADDR:   0 MEM_OUT: 5 ACC: 1 LG_ALU: 3979 RG_ALU:   1 SP: 3978 ZF: 0 |	push   var
  ADDR -> ALU_RG
  TICK: 707 PC:  43 ADDR:   0 MEM_OUT: 5 ACC: 1 LG_ALU: 3979 RG_ALU:   5 SP: 3978 ZF: 0 |	load   +
  ALU_RES = ALU_RG
  TICK: 708 PC:  43 ADDR:   0 MEM_OUT: 5 ACC: 1 LG_ALU: 3979 RG_ALU:   5 SP: 3978 ZF: 0 |	load   +
  READ MEM[ALU]
  TICK: 709 PC:  43 ADDR:   0 MEM_OUT: 3 ACC: 1 LG_ALU: 3979 RG_ALU:   5 SP: 3978 ZF: 0 |	load   +
  MEM[ALU] -> ALU_RG
  TICK: 710 PC:  43 ADDR:   0 MEM_OUT: 3 ACC: 1 LG_ALU: 3979 RG_ALU:   3 SP: 3978 ZF: 0 |	load   +
  ALU_RES = ALU_RG
  TICK: 711 PC:  43 ADDR:   0 MEM_OUT: 3 ACC: 1 LG_ALU: 3979 RG_ALU:   3 SP: 3978 ZF: 0 |	load   +
  ALU_RES -> ACC
  TICK: 712 PC:  43 ADDR:   0 MEM_OUT: 3 ACC: 3 LG_ALU: 3979 RG_ALU:   3 SP: 3978 ZF: 0 |	load   +
  ADDR -> ALU_RG
  TICK: 713 PC:  44 ADDR:   0 MEM_OUT: 3 ACC: 3 LG_ALU: 3979 RG_ALU:   6 SP: 3978 ZF: 0 |	add   +
  ALU_RES = ALU_RG
  TICK: 714 PC:  44 ADDR:   0 MEM_OUT: 3 ACC: 3 LG_ALU: 3979 RG_ALU:   6 SP: 3978 ZF: 0 |	add   +
  READ MEM[ALU]
  TICK: 715 PC:  44 ADDR:   0 MEM_OUT: 5 ACC: 3 LG_ALU: 3979 RG_ALU:   6 SP: 3978 ZF: 0 |	add   +
  MEM[ALU] -> ALU_RG
  TICK: 716 PC:  44 ADDR:   0 MEM_OUT: 5 ACC: 3 LG_ALU: 3979 RG_ALU:   5 SP: 3978 ZF: 0 |	add   +
  ACC -> ALU_LG
  TICK: 716 PC:  44 ADDR:   0 MEM_OUT: 5 ACC: 3 LG_ALU:   3 RG_ALU:   5 SP: 3978 ZF: 0 |	add   +
  ALU_RES = ALU_LG + ALU_RG
  TICK: 717 PC:  44 ADDR:   0 MEM_OUT: 5 ACC: 3 LG_ALU:   3 RG_ALU:   5 SP: 3978 ZF: 0 |	add   +
  ALU_RES -> ACC
  TICK: 718 PC:  44 ADDR:   0 MEM_OUT: 5 ACC: 8 LG_ALU:   3 RG_ALU:   5 SP: 3978 ZF: 0 |	add   +
  SP -> ALU_LG
  TICK: 719 PC:  45 ADDR:   0 MEM_OUT: 5 ACC: 8 LG_ALU: 3978 RG_ALU:   5 SP: 3978 ZF: 0 |	push   +
  ALU_RES = SP - 1
  TICK: 720 PC:  45 ADDR:   0 MEM_OUT: 5 ACC: 8 LG_ALU: 3978 RG_ALU:   5 SP: 3978 ZF: 0 |	push   +
  ALU_RES -> SP
  TICK: 721 PC:  45 ADDR:   0 MEM_OUT: 5 ACC: 8 LG_ALU: 3978 RG_ALU:   5 SP: 3977 ZF: 0 |	push   +
  WRITE ACC -> MEM[ALU]
  TICK: 721 PC:  45 ADDR:   0 MEM_OUT: 5 ACC: 8 LG_ALU: 3978 RG_ALU:   5 SP: 3977 ZF: 0 |	push   +
  SP -> ALU_LG
  TICK: 722 PC:  46 ADDR:   0 MEM_OUT: 5 ACC: 8 LG_ALU: 3977 RG_ALU:   5 SP: 3977 ZF: 0 |	pop   var
  ALU_RES = ALU_LG
  TICK: 723 PC:  46 ADDR:   0 MEM_OUT: 5 ACC: 8 LG_ALU: 3977 RG_ALU:   5 SP: 3977 ZF: 0 |	pop   var
  READ MEM[ALU]
  TICK: 724 PC:  46 ADDR:   0 MEM_OUT: 8 ACC: 8 LG_ALU: 3977 RG_ALU:   5 SP: 3977 ZF: 0 |	pop   var
  ALU_RES = SP + 1
  TICK: 725 PC:  46 ADDR:   0 MEM_OUT: 8 ACC: 8 LG_ALU: 3977 RG_ALU:   5 SP: 3977 ZF: 0 |	pop   var
  ALU_RES -> SP
  TICK: 726 PC:  46 ADDR:   0 MEM_OUT: 8 ACC: 8 LG_ALU: 3977 RG_ALU:   5 SP: 3978 ZF: 0 |	pop   var
  MEM[ALU] -> ALU_RG
  TICK: 726 PC:  46 ADDR:   0 MEM_OUT: 8 ACC: 8 LG_ALU: 3977 RG_ALU:   8 SP: 3978 ZF: 0 |	pop   var
  ALU_RES = ALU_RG
  TICK: 727 PC:  46 ADDR:   0 MEM_OUT: 8 ACC: 8 LG_ALU: 3977 RG_ALU:   8 SP: 3978 ZF: 0 |	pop   var
  ALU_RES -> ACC
  TICK: 728 PC:  46 ADDR:   0 MEM_OUT: 8 ACC: 8 LG_ALU: 3977 RG_ALU:   8 SP: 3978 ZF: 0 |	pop   var
  ADDR -> ALU_RG
  TICK: 729 PC:  47 ADDR:   0 MEM_OUT: 8 ACC: 8 LG_ALU: 3977 RG_ALU:   6 SP: 3978 ZF: 0 |	store   var
  ALU_RES = ALU_RG
  TICK: 730 PC:  47 ADDR:   0 MEM_OUT: 8 ACC: 8 LG_ALU: 3977 RG_ALU:   6 SP: 3978 ZF: 0 |	store   var
  WRITE ACC -> MEM[ALU]
  TICK: 731 PC:  47 ADDR:   0 MEM_OUT: 8 ACC: 8 LG_ALU: 3977 RG_ALU:   6 SP: 3978 ZF: 0 |	store   var
  NUM -> ALU_RG
  TICK: 732 PC:  48 ADDR:   0 MEM_OUT: 8 ACC: 8 LG_ALU: 3977 RG_ALU:   1 SP: 3978 ZF: 0 |	load   var
  ALU_RES = ALU_RG
  TICK: 733 PC:  48 ADDR:   0 MEM_OUT: 8 ACC: 8 LG_ALU: 3977 RG_ALU:   1 SP: 3978 ZF: 0 |	load   var
  ALU_RES -> ACC
  TICK: 734 PC:  48 ADDR:   0 MEM_OUT: 8 ACC: 1 LG_ALU: 3977 RG_ALU:   1 SP: 3978 ZF: 0 |	load   var
  SP -> ALU_LG
  TICK: 735 PC:  49 ADDR:   0 MEM_OUT: 8 ACC: 1 LG_ALU: 3978 RG_ALU:   1 SP: 3978 ZF: 0 |	push   var
  ALU_RES = SP - 1
  TICK: 736 PC:  49 ADDR:   0 MEM_OUT: 8 ACC: 1 LG_ALU: 3978 RG_ALU:   1 SP: 3978 ZF: 0 |	push   var
  ALU_RES -> SP
  TICK: 737 PC:  49 ADDR:   0 MEM_OUT: 8 ACC: 1 LG_ALU: 3978 RG_ALU:   1 SP: 3977 ZF: 0 |	push   var
  WRITE ACC -> MEM[ALU]
  TICK: 737 PC:  49 ADDR:   0 MEM_OUT: 8 ACC: 1 LG_ALU: 3978 RG_ALU:   1 SP: 3977 ZF: 0 |	push   var
  ADDR -> ALU_RG
  TICK: 738 PC:  50 ADDR:   0 MEM_OUT: 8 ACC: 1 LG_ALU: 3978 RG_ALU:   8 SP: 3977 ZF: 0 |	load   var
  ALU_RES = ALU_RG
  TICK: 739 PC:  50 ADDR:   0 MEM_OUT: 8 ACC: 1 LG_ALU: 3978 RG_ALU:   8 SP: 3977 ZF: 0 |	load   var
  READ MEM[ALU]
  TICK: 740 PC:  50 ADDR:   0 MEM_OUT: 5 ACC: 1 LG_ALU: 3978 RG_ALU:   8 SP: 3977 ZF: 0 |	load   var
  MEM[ALU] -> ALU_RG
  TICK: 741 PC:  50 ADDR:   0 MEM_OUT: 5 ACC: 1 LG_ALU: 3978 RG_ALU:   5 SP: 3977 ZF: 0 |	load   var
  ALU_RES = ALU_RG
  TICK: 742 PC:  50 ADDR:   0 MEM_OUT: 5 ACC: 1 LG_ALU: 3978 RG_ALU:   5 SP: 3977 ZF: 0 |	load   var
  ALU_RES -> ACC
  TICK: 743 PC:  50 ADDR:   0 MEM_OUT: 5 ACC: 5 LG_ALU: 3978 RG_ALU:   5 SP: 3977 ZF: 0 |	load   var
  ADDR -> ALU_RG
  TICK: 744 PC:  51 ADDR:   0 MEM_OUT: 5 ACC: 5 LG_ALU: 3978 RG_ALU:   5 SP: 3977 ZF: 0 |	store   var
  ALU_RES = ALU_RG
  TICK: 745 PC:  51 ADDR:   0 MEM_OUT: 5 ACC: 5 LG_ALU: 3978 RG_ALU:   5 SP: 3977 ZF: 0 |	store   var
  WRITE ACC -> MEM[ALU]
  TICK: 746 PC:  51 ADDR:   0 MEM_OUT: 5 ACC: 5 LG_ALU: 3978 RG_ALU:   5 SP: 3977 ZF: 0 |	store   var
  NUM -> ALU_RG
  TICK: 747 PC:  52 ADDR:   0 MEM_OUT: 5 ACC: 5 LG_ALU: 3978 RG_ALU:   1 SP: 3977 ZF: 0 |	load   var
  ALU_RES = ALU_RG
  TICK: 748 PC:  52 ADDR:   0 MEM_OUT: 5 ACC: 5 LG_ALU: 3978 RG_ALU:   1 SP: 3977 ZF: 0 |	load   var
  ALU_RES -> ACC
  TICK: 749 PC:  52 ADDR:   0 MEM_OUT: 5 ACC: 1 LG_ALU: 3978 RG_ALU:   1 SP: 3977 ZF: 0 |	load   var
  SP -> ALU_LG
  TICK: 750 PC:  53 ADDR:   0 MEM_OUT: 5 ACC: 1 LG_ALU: 3977 RG_ALU:   1 SP: 3977 ZF: 0 |	push   var
  ALU_RES = SP - 1
  TICK: 751 PC:  53 ADDR:   0 MEM_OUT: 5 ACC: 1 LG_ALU: 3977 RG_ALU:   1 SP: 3977 ZF: 0 |	push   var
  ALU_RES -> SP
  TICK: 752 PC:  53 ADDR:   0 MEM_OUT: 5 ACC: 1 LG_ALU: 3977 RG_ALU:   1 SP: 3976 ZF: 0 |	push   var
  WRITE ACC -> MEM[ALU]
  TICK: 752 PC:  53 ADDR:   0 MEM_OUT: 5 ACC: 1 LG_ALU: 3977 RG_ALU:   1 SP: 3976 ZF: 0 |	push   var
  ADDR -> ALU_RG
  TICK: 753 PC:  54 ADDR:   0 MEM_OUT: 5 ACC: 1 LG_ALU: 3977 RG_ALU:   6 SP: 3976 ZF: 0 |	load   <
  ALU_RES = ALU_RG
  TICK: 754 PC:  54 ADDR:   0 MEM_OUT: 5 ACC: 1 LG_ALU: 3977 RG_ALU:   6 SP: 3976 ZF: 0 |	load   <
  READ MEM[ALU]
  TICK: 755 PC:  54 ADDR:   0 MEM_OUT: 8 ACC: 1 LG_ALU: 3977 RG_ALU:   6 SP: 3976 ZF: 0 |	load   <
  MEM[ALU] -> ALU_RG
  TICK: 756 PC:  54 ADDR:   0 MEM_OUT: 8 ACC: 1 LG_ALU: 3977 RG_ALU:   8 SP: 3976 ZF: 0 |	load   <
  ALU_RES = ALU_RG
  TICK: 757 PC:  54 ADDR:   0 MEM_OUT: 8 ACC: 1 LG_ALU: 3977 RG_ALU:   8 SP: 3976 ZF: 0 |	load   <
  ALU_RES -> ACC
  TICK: 758 PC:  54 ADDR:   0 MEM_OUT: 8 ACC: 8 LG_ALU: 3977 RG_ALU:   8 SP: 3976 ZF: 0 |	load   <
  ADDR -> ALU_RG
  TICK: 759 PC:  55 ADDR:   0 MEM_OUT: 8 ACC: 8 LG_ALU: 3977 RG_ALU:   7 SP: 3976 ZF: 0 |	sub   <
  ALU_RES = ALU_RG
  TICK: 760 PC:  55 ADDR:   0 MEM_OUT: 8 ACC: 8 LG_ALU: 3977 RG_ALU:   7 SP: 3976 ZF: 0 |	sub   <
  READ MEM[ALU]
  TICK: 761 PC:  55 ADDR:   0 MEM_OUT: 400000 ACC: 8 LG_ALU: 3977 RG_ALU:   7 SP: 3976 ZF: 0 |	sub   <
  MEM[ALU] -> ALU_RG
  TICK: 762 PC:  55 ADDR:   0 MEM_OUT: 400000 ACC: 8 LG_ALU: 3977 RG_ALU: 400000 SP: 3976 ZF: 0 |	sub   <
  ACC -> ALU_LG
  TICK: 762 PC:  55 ADDR:   0 MEM_OUT: 400000 ACC: 8 LG_ALU:   8 RG_ALU: 400000 SP: 3976 ZF: 0 |	sub   <
  ALU_RES = ALU_LG + ALU_RG
  TICK: 763 PC:  55 ADDR:   0 MEM_OUT: 400000 ACC: 8 LG_ALU:   8 RG_ALU: 400000 SP: 3976 ZF: 0 |	sub   <
  ALU_RES -> ACC
  TICK: 764 PC:  55 ADDR:   0 MEM_OUT: 400000 ACC: -399992 LG_ALU:   8 RG_ALU: 400000 SP: 3976 ZF: 0 |	sub   <
  PC + 1 -> PC
  NUM -> ALU_RG
  TICK: 765 PC:  57 ADDR:   0 MEM_OUT: 400000 ACC: -399992 LG_ALU:   8 RG_ALU:   1 SP: 3976 ZF: 0 |	load   <
  ALU_RES = ALU_RG
  TICK: 766 PC:  57 ADDR:   0 MEM_OUT: 400000 ACC: -399992 LG_ALU:   8 RG_ALU:   1 SP: 3976 ZF: 0 |	load   <
  ALU_RES -> ACC
  TICK: 767 PC:  57 ADDR:   0 MEM_OUT: 400000 ACC: 1 LG_ALU:   8 RG_ALU:   1 SP: 3976 ZF: 0 |	load   <
  ADDR -> PC
  SP -> ALU_LG
  TICK: 769 PC:  60 ADDR:   0 MEM_OUT: 400000 ACC: 1 LG_ALU: 3976 RG_ALU:   1 SP: 3976 ZF: 0 |	push   <
  ALU_RES = SP - 1
  TICK: 770 PC:  60 ADDR:   0 MEM_OUT: 400000 ACC: 1 LG_ALU: 3976 RG_ALU:   1 SP: 3976 ZF: 0 |	push   <
  ALU_RES -> SP
  TICK: 771 PC:  60 ADDR:   0 MEM_OUT: 400000 ACC: 1 LG_ALU: 3976 RG_ALU:   1 SP: 3975 ZF: 0 |	push   <
  WRITE ACC -> MEM[ALU]
  TICK: 771 PC:  60 ADDR:   0 MEM_OUT: 400000 ACC: 1 LG_ALU: 3976 RG_ALU:   1 SP: 3975 ZF: 0 |	push   <
  SP -> ALU_LG
  TICK: 772 PC:  61 ADDR:   0 MEM_OUT: 400000 ACC: 1 LG_ALU: 3975 RG_ALU:   1 SP: 3975 ZF: 0 |	pop
  ALU_RES = ALU_LG
  TICK: 773 PC:  61 ADDR:   0 MEM_OUT: 400000 ACC: 1 LG_ALU: 3975 RG_ALU:   1 SP: 3975 ZF: 0 |	pop
  READ MEM[ALU]
  TICK: 774 PC:  61 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3975 RG_ALU:   1 SP: 3975 ZF: 0 |	pop
  ALU_RES = SP + 1
  TICK: 775 PC:  61 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3975 RG_ALU:   1 SP: 3975 ZF: 0 |	pop
  ALU_RES -> SP
  TICK: 776 PC:  61 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3975 RG_ALU:   1 SP: 3976 ZF: 0 |	pop
  MEM[ALU] -> ALU_RG
  TICK: 776 PC:  61 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3975 RG_ALU:   1 SP: 3976 ZF: 0 |	pop
  ALU_RES = ALU_RG
  TICK: 777 PC:  61 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3975 RG_ALU:   1 SP: 3976 ZF: 0 |	pop
  ALU_RES -> ACC
  TICK: 778 PC:  61 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3975 RG_ALU:   1 SP: 3976 ZF: 0 |	pop
  ADDR -> PC
  ADDR -> PC
  ADDR -> ALU_RG
  TICK: 781 PC:  24 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3975 RG_ALU:   6 SP: 3976 ZF: 0 |	load
  ALU_RES = ALU_RG
  TICK: 782 PC:  24 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3975 RG_ALU:   6 SP: 3976 ZF: 0 |	load
  READ MEM[ALU]
  TICK: 783 PC:  24 ADDR:   0 MEM_OUT: 8 ACC: 1 LG_ALU: 3975 RG_ALU:   6 SP: 3976 ZF: 0 |	load
  MEM[ALU] -> ALU_RG
  TICK: 784 PC:  24 ADDR:   0 MEM_OUT: 8 ACC: 1 LG_ALU: 3975 RG_ALU:   8 SP: 3976 ZF: 0 |	load
  ALU_RES = ALU_RG
  TICK: 785 PC:  24 ADDR:   0 MEM_OUT: 8 ACC: 1 LG_ALU: 3975 RG_ALU:   8 SP: 3976 ZF: 0 |	load
  ALU_RES -> ACC
  TICK: 786 PC:  24 ADDR:   0 MEM_OUT: 8 ACC: 8 LG_ALU: 3975 RG_ALU:   8 SP: 3976 ZF: 0 |	load
  NUM -> ALU_RG
  TICK: 787 PC:  25 ADDR:   0 MEM_OUT: 8 ACC: 8 LG_ALU: 3975 RG_ALU:   2 SP: 3976 ZF: 0 |	mod
  ACC -> ALU_LG
  TICK: 787 PC:  25 ADDR:   0 MEM_OUT: 8 ACC: 8 LG_ALU:   8 RG_ALU:   2 SP: 3976 ZF: 0 |	mod
  ALU_RES = ALU_LG % ALU_RG
  TICK: 788 PC:  25 ADDR:   0 MEM_OUT: 8 ACC: 8 LG_ALU:   8 RG_ALU:   2 SP: 3976 ZF: 1 |	mod
  ALU_RES -> ACC
  TICK: 789 PC:  25 ADDR:   0 MEM_OUT: 8 ACC: 0 LG_ALU:   8 RG_ALU:   2 SP: 3976 ZF: 1 |	mod
  SP -> ALU_LG
  TICK: 790 PC:  26 ADDR:   0 MEM_OUT: 8 ACC: 0 LG_ALU: 3976 RG_ALU:   2 SP: 3976 ZF: 1 |	push
  ALU_RES = SP - 1
  TICK: 791 PC:  26 ADDR:   0 MEM_OUT: 8 ACC: 0 LG_ALU: 3976 RG_ALU:   2 SP: 3976 ZF: 0 |	push
  ALU_RES -> SP
  TICK: 792 PC:  26 ADDR:   0 MEM_OUT: 8 ACC: 0 LG_ALU: 3976 RG_ALU:   2 SP: 3975 ZF: 0 |	push
  WRITE ACC -> MEM[ALU]
  TICK: 792 PC:  26 ADDR:   0 MEM_OUT: 8 ACC: 0 LG_ALU: 3976 RG_ALU:   2 SP: 3975 ZF: 0 |	push
  NUM -> ALU_RG
  TICK: 793 PC:  27 ADDR:   0 MEM_OUT: 8 ACC: 0 LG_ALU: 3976 RG_ALU:   0 SP: 3975 ZF: 0 |	load   =
  ALU_RES = ALU_RG
  TICK: 794 PC:  27 ADDR:   0 MEM_OUT: 8 ACC: 0 LG_ALU: 3976 RG_ALU:   0 SP: 3975 ZF: 1 |	load   =
  ALU_RES -> ACC
  TICK: 795 PC:  27 ADDR:   0 MEM_OUT: 8 ACC: 0 LG_ALU: 3976 RG_ALU:   0 SP: 3975 ZF: 1 |	load   =
  SP -> ALU_LG
  TICK: 796 PC:  28 ADDR:   0 MEM_OUT: 8 ACC: 0 LG_ALU: 3975 RG_ALU:   0 SP: 3975 ZF: 1 |	sub   =
  ALU_RES = ALU_LG
  TICK: 797 PC:  28 ADDR:   0 MEM_OUT: 8 ACC: 0 LG_ALU: 3975 RG_ALU:   0 SP: 3975 ZF: 0 |	sub   =
  READ MEM[ALU]
  TICK: 798 PC:  28 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3975 RG_ALU:   0 SP: 3975 ZF: 0 |	sub   =
  MEM[ALU] -> ALU_RG
  TICK: 799 PC:  28 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3975 RG_ALU:   0 SP: 3975 ZF: 0 |	sub   =
  ALU_RES = SP + 1
  TICK: 800 PC:  28 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3975 RG_ALU:   0 SP: 3975 ZF: 0 |	sub   =
  ALU_RES -> SP
  TICK: 801 PC:  28 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3975 RG_ALU:   0 SP: 3976 ZF: 0 |	sub   =
  ACC -> ALU_LG
  TICK: 801 PC:  28 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU:   0 RG_ALU:   0 SP: 3976 ZF: 0 |	sub   =
  ALU_RES = ALU_LG + ALU_RG
  TICK: 802 PC:  28 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU:   0 RG_ALU:   0 SP: 3976 ZF: 1 |	sub   =
  ALU_RES -> ACC
  TICK: 803 PC:  28 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU:   0 RG_ALU:   0 SP: 3976 ZF: 1 |	sub   =
  PC + 1 -> PC
  NUM -> ALU_RG
  TICK: 804 PC:  30 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU:   0 RG_ALU:   1 SP: 3976 ZF: 1 |	load   =
  ALU_RES = ALU_RG
  TICK: 805 PC:  30 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU:   0 RG_ALU:   1 SP: 3976 ZF: 0 |	load   =
  ALU_RES -> ACC
  TICK: 806 PC:  30 ADDR:   0 MEM_OUT: 0 ACC: 1 LG_ALU:   0 RG_ALU:   1 SP: 3976 ZF: 0 |	load   =
  ADDR -> PC
  SP -> ALU_LG
  TICK: 808 PC:  33 ADDR:   0 MEM_OUT: 0 ACC: 1 LG_ALU: 3976 RG_ALU:   1 SP: 3976 ZF: 0 |	push   =
  ALU_RES = SP - 1
  TICK: 809 PC:  33 ADDR:   0 MEM_OUT: 0 ACC: 1 LG_ALU: 3976 RG_ALU:   1 SP: 3976 ZF: 0 |	push   =
  ALU_RES -> SP
  TICK: 810 PC:  33 ADDR:   0 MEM_OUT: 0 ACC: 1 LG_ALU: 3976 RG_ALU:   1 SP: 3975 ZF: 0 |	push   =
  WRITE ACC -> MEM[ALU]
  TICK: 810 PC:  33 ADDR:   0 MEM_OUT: 0 ACC: 1 LG_ALU: 3976 RG_ALU:   1 SP: 3975 ZF: 0 |	push   =
  SP -> ALU_LG
  TICK: 811 PC:  34 ADDR:   0 MEM_OUT: 0 ACC: 1 LG_ALU: 3975 RG_ALU:   1 SP: 3975 ZF: 0 |	pop   if
  ALU_RES = ALU_LG
  TICK: 812 PC:  34 ADDR:   0 MEM_OUT: 0 ACC: 1 LG_ALU: 3975 RG_ALU:   1 SP: 3975 ZF: 0 |	pop   if
  READ MEM[ALU]
  TICK: 813 PC:  34 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3975 RG_ALU:   1 SP: 3975 ZF: 0 |	pop   if
  ALU_RES = SP + 1
  TICK: 814 PC:  34 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3975 RG_ALU:   1 SP: 3975 ZF: 0 |	pop   if
  ALU_RES -> SP
  TICK: 815 PC:  34 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3975 RG_ALU:   1 SP: 3976 ZF: 0 |	pop   if
  MEM[ALU] -> ALU_RG
  TICK: 815 PC:  34 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3975 RG_ALU:   1 SP: 3976 ZF: 0 |	pop   if
  ALU_RES = ALU_RG
  TICK: 816 PC:  34 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3975 RG_ALU:   1 SP: 3976 ZF: 0 |	pop   if
  ALU_RES -> ACC
  TICK: 817 PC:  34 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3975 RG_ALU:   1 SP: 3976 ZF: 0 |	pop   if
  ADDR -> PC
  ADDR -> ALU_RG
  TICK: 819 PC:   7 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3975 RG_ALU:   6 SP: 3976 ZF: 0 |	load   print
  ALU_RES = ALU_RG
  TICK: 820 PC:   7 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3975 RG_ALU:   6 SP: 3976 ZF: 0 |	load   print
  READ MEM[ALU]
  TICK: 821 PC:   7 ADDR:   0 MEM_OUT: 8 ACC: 1 LG_ALU: 3975 RG_ALU:   6 SP: 3976 ZF: 0 |	load   print
  MEM[ALU] -> ALU_RG
  TICK: 822 PC:   7 ADDR:   0 MEM_OUT: 8 ACC: 1 LG_ALU: 3975 RG_ALU:   8 SP: 3976 ZF: 0 |	load   print
  ALU_RES = ALU_RG
  TICK: 823 PC:   7 ADDR:   0 MEM_OUT: 8 ACC: 1 LG_ALU: 3975 RG_ALU:   8 SP: 3976 ZF: 0 |	load   print
  ALU_RES -> ACC
  TICK: 824 PC:   7 ADDR:   0 MEM_OUT: 8 ACC: 8 LG_ALU: 3975 RG_ALU:   8 SP: 3976 ZF: 0 |	load   print
  get IO module port
  TICK: 825 PC:   8 ADDR:   0 MEM_OUT: 8 ACC: 8 LG_ALU: 3975 RG_ALU:   8 SP: 3976 ZF: 0 |	output   print
  ACC -> OUTPUT 
  TICK: 826 PC:   8 ADDR:   0 MEM_OUT: 8 ACC: 8 LG_ALU: 3975 RG_ALU:   8 SP: 3976 ZF: 0 |	output   print
  NUM -> ALU_RG
  TICK: 827 PC:   9 ADDR:   0 MEM_OUT: 8 ACC: 8 LG_ALU: 3975 RG_ALU:   1 SP: 3976 ZF: 0 |	load   print
  ALU_RES = ALU_RG
  TICK: 828 PC:   9 ADDR:   0 MEM_OUT: 8 ACC: 8 LG_ALU: 3975 RG_ALU:   1 SP: 3976 ZF: 0 |	load   print
  ALU_RES -> ACC
  TICK: 829 PC:   9 ADDR:   0 MEM_OUT: 8 ACC: 1 LG_ALU: 3975 RG_ALU:   1 SP: 3976 ZF: 0 |	load   print
  SP -> ALU_LG
  TICK: 830 PC:  10 ADDR:   0 MEM_OUT: 8 ACC: 1 LG_ALU: 3976 RG_ALU:   1 SP: 3976 ZF: 0 |	push   print
  ALU_RES = SP - 1
  TICK: 831 PC:  10 ADDR:   0 MEM_OUT: 8 ACC: 1 LG_ALU: 3976 RG_ALU:   1 SP: 3976 ZF: 0 |	push   print
  ALU_RES -> SP
  TICK: 832 PC:  10 ADDR:   0 MEM_OUT: 8 ACC: 1 LG_ALU: 3976 RG_ALU:   1 SP: 3975 ZF: 0 |	push   print
  WRITE ACC -> MEM[ALU]
  TICK: 832 PC:  10 ADDR:   0 MEM_OUT: 8 ACC: 1 LG_ALU: 3976 RG_ALU:   1 SP: 3975 ZF: 0 |	push   print
  NUM -> ALU_RG
  TICK: 833 PC:  11 ADDR:   0 MEM_OUT: 8 ACC: 1 LG_ALU: 3976 RG_ALU:  95 SP: 3975 ZF: 0 |	load   print
  ALU_RES = ALU_RG
  TICK: 834 PC:  11 ADDR:   0 MEM_OUT: 8 ACC: 1 LG_ALU: 3976 RG_ALU:  95 SP: 3975 ZF: 0 |	load   print
  ALU_RES -> ACC
  TICK: 835 PC:  11 ADDR:   0 MEM_OUT: 8 ACC: 95 LG_ALU: 3976 RG_ALU:  95 SP: 3975 ZF: 0 |	load   print
  get IO module port
  TICK: 836 PC:  12 ADDR:   0 MEM_OUT: 8 ACC: 95 LG_ALU: 3976 RG_ALU:  95 SP: 3975 ZF: 0 |	output   print
  ACC -> OUTPUT 
  TICK: 837 PC:  12 ADDR:   0 MEM_OUT: 8 ACC: 95 LG_ALU: 3976 RG_ALU:  95 SP: 3975 ZF: 0 |	output   print
  NUM -> ALU_RG
  TICK: 838 PC:  13 ADDR:   0 MEM_OUT: 8 ACC: 95 LG_ALU: 3976 RG_ALU:   0 SP: 3975 ZF: 0 |	load   print
  ALU_RES = ALU_RG
  TICK: 839 PC:  13 ADDR:   0 MEM_OUT: 8 ACC: 95 LG_ALU: 3976 RG_ALU:   0 SP: 3975 ZF: 1 |	load   print
  ALU_RES -> ACC
  TICK: 840 PC:  13 ADDR:   0 MEM_OUT: 8 ACC: 0 LG_ALU: 3976 RG_ALU:   0 SP: 3975 ZF: 1 |	load   print
  get IO module port
  TICK: 841 PC:  14 ADDR:   0 MEM_OUT: 8 ACC: 0 LG_ALU: 3976 RG_ALU:   0 SP: 3975 ZF: 1 |	output   print
  ACC -> OUTPUT 
  TICK: 842 PC:  14 ADDR:   0 MEM_OUT: 8 ACC: 0 LG_ALU: 3976 RG_ALU:   0 SP: 3975 ZF: 1 |	output   print
  NUM -> ALU_RG
  TICK: 843 PC:  15 ADDR:   0 MEM_OUT: 8 ACC: 0 LG_ALU: 3976 RG_ALU:   0 SP: 3975 ZF: 1 |	load   print
  ALU_RES = ALU_RG
  TICK: 844 PC:  15 ADDR:   0 MEM_OUT: 8 ACC: 0 LG_ALU: 3976 RG_ALU:   0 SP: 3975 ZF: 1 |	load   print
  ALU_RES -> ACC
  TICK: 845 PC:  15 ADDR:   0 MEM_OUT: 8 ACC: 0 LG_ALU: 3976 RG_ALU:   0 SP: 3975 ZF: 1 |	load   print
  get IO module port
  TICK: 846 PC:  16 ADDR:   0 MEM_OUT: 8 ACC: 0 LG_ALU: 3976 RG_ALU:   0 SP: 3975 ZF: 1 |	output   print
  ACC -> OUTPUT 
  TICK: 847 PC:  16 ADDR:   0 MEM_OUT: 8 ACC: 0 LG_ALU: 3976 RG_ALU:   0 SP: 3975 ZF: 1 |	output   print
  NUM -> ALU_RG
  TICK: 848 PC:  17 ADDR:   0 MEM_OUT: 8 ACC: 0 LG_ALU: 3976 RG_ALU:   1 SP: 3975 ZF: 1 |	load   print
  ALU_RES = ALU_RG
  TICK: 849 PC:  17 ADDR:   0 MEM_OUT: 8 ACC: 0 LG_ALU: 3976 RG_ALU:   1 SP: 3975 ZF: 0 |	load   print
  ALU_RES -> ACC
  TICK: 850 PC:  17 ADDR:   0 MEM_OUT: 8 ACC: 1 LG_ALU: 3976 RG_ALU:   1 SP: 3975 ZF: 0 |	load   print
  SP -> ALU_LG
  TICK: 851 PC:  18 ADDR:   0 MEM_OUT: 8 ACC: 1 LG_ALU: 3975 RG_ALU:   1 SP: 3975 ZF: 0 |	push   print
  ALU_RES = SP - 1
  TICK: 852 PC:  18 ADDR:   0 MEM_OUT: 8 ACC: 1 LG_ALU: 3975 RG_ALU:   1 SP: 3975 ZF: 0 |	push   print
  ALU_RES -> SP
  TICK: 853 PC:  18 ADDR:   0 MEM_OUT: 8 ACC: 1 LG_ALU: 3975 RG_ALU:   1 SP: 3974 ZF: 0 |	push   print
  WRITE ACC -> MEM[ALU]
  TICK: 853 PC:  18 ADDR:   0 MEM_OUT: 8 ACC: 1 LG_ALU: 3975 RG_ALU:   1 SP: 3974 ZF: 0 |	push   print
  ADDR -> PC
  SP -> ALU_LG
  TICK: 855 PC:  37 ADDR:   0 MEM_OUT: 8 ACC: 1 LG_ALU: 3974 RG_ALU:   1 SP: 3974 ZF: 0 |	pop   if
  ALU_RES = ALU_LG
  TICK: 856 PC:  37 ADDR:   0 MEM_OUT: 8 ACC: 1 LG_ALU: 3974 RG_ALU:   1 SP: 3974 ZF: 0 |	pop   if
  READ MEM[ALU]
  TICK: 857 PC:  37 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3974 RG_ALU:   1 SP: 3974 ZF: 0 |	pop   if
  ALU_RES = SP + 1
  TICK: 858 PC:  37 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3974 RG_ALU:   1 SP: 3974 ZF: 0 |	pop   if
  ALU_RES -> SP
  TICK: 859 PC:  37 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3974 RG_ALU:   1 SP: 3975 ZF: 0 |	pop   if
  MEM[ALU] -> ALU_RG
  TICK: 859 PC:  37 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3974 RG_ALU:   1 SP: 3975 ZF: 0 |	pop   if
  ALU_RES = ALU_RG
  TICK: 860 PC:  37 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3974 RG_ALU:   1 SP: 3975 ZF: 0 |	pop   if
  ALU_RES -> ACC
  TICK: 861 PC:  37 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3974 RG_ALU:   1 SP: 3975 ZF: 0 |	pop   if
  SP -> ALU_LG
  TICK: 862 PC:  38 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3975 RG_ALU:   1 SP: 3975 ZF: 0 |	push   if
  ALU_RES = SP - 1
  TICK: 863 PC:  38 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3975 RG_ALU:   1 SP: 3975 ZF: 0 |	push   if
  ALU_RES -> SP
  TICK: 864 PC:  38 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3975 RG_ALU:   1 SP: 3974 ZF: 0 |	push   if
  WRITE ACC -> MEM[ALU]
  TICK: 864 PC:  38 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3975 RG_ALU:   1 SP: 3974 ZF: 0 |	push   if
  ADDR -> ALU_RG
  TICK: 865 PC:  39 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3975 RG_ALU:   6 SP: 3974 ZF: 0 |	load   var
  ALU_RES = ALU_RG
  TICK: 866 PC:  39 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3975 RG_ALU:   6 SP: 3974 ZF: 0 |	load   var
  READ MEM[ALU]
  TICK: 867 PC:  39 ADDR:   0 MEM_OUT: 8 ACC: 1 LG_ALU: 3975 RG_ALU:   6 SP: 3974 ZF: 0 |	load   var
  MEM[ALU] -> ALU_RG
  TICK: 868 PC:  39 ADDR:   0 MEM_OUT: 8 ACC: 1 LG_ALU: 3975 RG_ALU:   8 SP: 3974 ZF: 0 |	load   var
  ALU_RES = ALU_RG
  TICK: 869 PC:  39 ADDR:   0 MEM_OUT: 8 ACC: 1 LG_ALU: 3975 RG_ALU:   8 SP: 3974 ZF: 0 |	load   var
  ALU_RES -> ACC
  TICK: 870 PC:  39 ADDR:   0 MEM_OUT: 8 ACC: 8 LG_ALU: 3975 RG_ALU:   8 SP: 3974 ZF: 0 |	load   var
  ADDR -> ALU_RG
  TICK: 871 PC:  40 ADDR:   0 MEM_OUT: 8 ACC: 8 LG_ALU: 3975 RG_ALU:   8 SP: 3974 ZF: 0 |	store   var
  ALU_RES = ALU_RG
  TICK: 872 PC:  40 ADDR:   0 MEM_OUT: 8 ACC: 8 LG_ALU: 3975 RG_ALU:   8 SP: 3974 ZF: 0 |	store   var
  WRITE ACC -> MEM[ALU]
  TICK: 873 PC:  40 ADDR:   0 MEM_OUT: 8 ACC: 8 LG_ALU: 3975 RG_ALU:   8 SP: 3974 ZF: 0 |	store   var
  NUM -> ALU_RG
  TICK: 874 PC:  41 ADDR:   0 MEM_OUT: 8 ACC: 8 LG_ALU: 3975 RG_ALU:   1 SP: 3974 ZF: 0 |	load   var
  ALU_RES = ALU_RG
  TICK: 875 PC:  41 ADDR:   0 MEM_OUT: 8 ACC: 8 LG_ALU: 3975 RG_ALU:   1 SP: 3974 ZF: 0 |	load   var
  ALU_RES -> ACC
  TICK: 876 PC:  41 ADDR:   0 MEM_OUT: 8 ACC: 1 LG_ALU: 3975 RG_ALU:   1 SP: 3974 ZF: 0 |	load   var
  SP -> ALU_LG
  TICK: 877 PC:  42 ADDR:   0 MEM_OUT: 8 ACC: 1 LG_ALU: 3974 RG_ALU:   1 SP: 3974 ZF: 0 |	push   var
  ALU_RES = SP - 1
  TICK: 878 PC:  42 ADDR:   0 MEM_OUT: 8 ACC: 1 LG_ALU: 3974 RG_ALU:   1 SP: 3974 ZF: 0 |	push   var
  ALU_RES -> SP
  TICK: 879 PC:  42 ADDR:   0 MEM_OUT: 8 ACC: 1 LG_ALU: 3974 RG_ALU:   1 SP: 3973 ZF: 0 |	push   var
  WRITE ACC -> MEM[ALU]
  TICK: 879 PC:  42 ADDR:   0 MEM_OUT: 8 ACC: 1 LG_ALU: 3974 RG_ALU:   1 SP: 3973 ZF: 0 |	push   var
  ADDR -> ALU_RG
  TICK: 880 PC:  43 ADDR:   0 MEM_OUT: 8 ACC: 1 LG_ALU: 3974 RG_ALU:   5 SP: 3973 ZF: 0 |	load   +
  ALU_RES = ALU_RG
  TICK: 881 PC:  43 ADDR:   0 MEM_OUT: 8 ACC: 1 LG_ALU: 3974 RG_ALU:   5 SP: 3973 ZF: 0 |	load   +
  READ MEM[ALU]
  TICK: 882 PC:  43 ADDR:   0 MEM_OUT: 5 ACC: 1 LG_ALU: 3974 RG_ALU:   5 SP: 3973 ZF: 0 |	load   +
  MEM[ALU] -> ALU_RG
  TICK: 883 PC:  43 ADDR:   0 MEM_OUT: 5 ACC: 1 LG_ALU: 3974 RG_ALU:   5 SP: 3973 ZF: 0 |	load   +
  ALU_RES = ALU_RG
  TICK: 884 PC:  43 ADDR:   0 MEM_OUT: 5 ACC: 1 LG_ALU: 3974 RG_ALU:   5 SP: 3973 ZF: 0 |	load   +
  ALU_RES -> ACC
  TICK: 885 PC:  43 ADDR:   0 MEM_OUT: 5 ACC: 5 LG_ALU: 3974 RG_ALU:   5 SP: 3973 ZF: 0 |	load   +
  ADDR -> ALU_RG
  TICK: 886 PC:  44 ADDR:   0 MEM_OUT: 5 ACC: 5 LG_ALU: 3974 RG_ALU:   6 SP: 3973 ZF: 0 |	add   +
  ALU_RES = ALU_RG
  TICK: 887 PC:  44 ADDR:   0 MEM_OUT: 5 ACC: 5 LG_ALU: 3974 RG_ALU:   6 SP: 3973 ZF: 0 |	add   +
  READ MEM[ALU]
  TICK: 888 PC:  44 ADDR:   0 MEM_OUT: 8 ACC: 5 LG_ALU: 3974 RG_ALU:   6 SP: 3973 ZF: 0 |	add   +
  MEM[ALU] -> ALU_RG
  TICK: 889 PC:  44 ADDR:   0 MEM_OUT: 8 ACC: 5 LG_ALU: 3974 RG_ALU:   8 SP: 3973 ZF: 0 |	add   +
  ACC -> ALU_LG
  TICK: 889 PC:  44 ADDR:   0 MEM_OUT: 8 ACC: 5 LG_ALU:   5 RG_ALU:   8 SP: 3973 ZF: 0 |	add   +
  ALU_RES = ALU_LG + ALU_RG
  TICK: 890 PC:  44 ADDR:   0 MEM_OUT: 8 ACC: 5 LG_ALU:   5 RG_ALU:   8 SP: 3973 ZF: 0 |	add   +
  ALU_RES -> ACC
  TICK: 891 PC:  44 ADDR:   0 MEM_OUT: 8 ACC: 13 LG_ALU:   5 RG_ALU:   8 SP: 3973 ZF: 0 |	add   +
  SP -> ALU_LG
  TICK: 892 PC:  45 ADDR:   0 MEM_OUT: 8 ACC: 13 LG_ALU: 3973 RG_ALU:   8 SP: 3973 ZF: 0 |	push   +
  ALU_RES = SP - 1
  TICK: 893 PC:  45 ADDR:   0 MEM_OUT: 8 ACC: 13 LG_ALU: 3973 RG_ALU:   8 SP: 3973 ZF: 0 |	push   +
  ALU_RES -> SP
  TICK: 894 PC:  45 ADDR:   0 MEM_OUT: 8 ACC: 13 LG_ALU: 3973 RG_ALU:   8 SP: 3972 ZF: 0 |	push   +
  WRITE ACC -> MEM[ALU]
  TICK: 894 PC:  45 ADDR:   0 MEM_OUT: 8 ACC: 13 LG_ALU: 3973 RG_ALU:   8 SP: 3972 ZF: 0 |	push   +
  SP -> ALU_LG
  TICK: 895 PC:  46 ADDR:   0 MEM_OUT: 8 ACC: 13 LG_ALU: 3972 RG_ALU:   8 SP: 3972 ZF: 0 |	pop   var
  ALU_RES = ALU_LG
  TICK: 896 PC:  46 ADDR:   0 MEM_OUT: 8 ACC: 13 LG_ALU: 3972 RG_ALU:   8 SP: 3972 ZF: 0 |	pop   var
  READ MEM[ALU]
  TICK: 897 PC:  46 ADDR:   0 MEM_OUT: 13 ACC: 13 LG_ALU: 3972 RG_ALU:   8 SP: 3972 ZF: 0 |	pop   var
  ALU_RES = SP + 1
  TICK: 898 PC:  46 ADDR:   0 MEM_OUT: 13 ACC: 13 LG_ALU: 3972 RG_ALU:   8 SP: 3972 ZF: 0 |	pop   var
  ALU_RES -> SP
  TICK: 899 PC:  46 ADDR:   0 MEM_OUT: 13 ACC: 13 LG_ALU: 3972 RG_ALU:   8 SP: 3973 ZF: 0 |	pop   var
  MEM[ALU] -> ALU_RG
  TICK: 899 PC:  46 ADDR:   0 MEM_OUT: 13 ACC: 13 LG_ALU: 3972 RG_ALU:  13 SP: 3973 ZF: 0 |	pop   var
  ALU_RES = ALU_RG
  TICK: 900 PC:  46 ADDR:   0 MEM_OUT: 13 ACC: 13 LG_ALU: 3972 RG_ALU:  13 SP: 3973 ZF: 0 |	pop   var
  ALU_RES -> ACC
  TICK: 901 PC:  46 ADDR:   0 MEM_OUT: 13 ACC: 13 LG_ALU: 3972 RG_ALU:  13 SP: 3973 ZF: 0 |	pop   var
  ADDR -> ALU_RG
  TICK: 902 PC:  47 ADDR:   0 MEM_OUT: 13 ACC: 13 LG_ALU: 3972 RG_ALU:   6 SP: 3973 ZF: 0 |	store   var
  ALU_RES = ALU_RG
  TICK: 903 PC:  47 ADDR:   0 MEM_OUT: 13 ACC: 13 LG_ALU: 3972 RG_ALU:   6 SP: 3973 ZF: 0 |	store   var
  WRITE ACC -> MEM[ALU]
  TICK: 904 PC:  47 ADDR:   0 MEM_OUT: 13 ACC: 13 LG_ALU: 3972 RG_ALU:   6 SP: 3973 ZF: 0 |	store   var
  NUM -> ALU_RG
  TICK: 905 PC:  48 ADDR:   0 MEM_OUT: 13 ACC: 13 LG_ALU: 3972 RG_ALU:   1 SP: 3973 ZF: 0 |	load   var
  ALU_RES = ALU_RG
  TICK: 906 PC:  48 ADDR:   0 MEM_OUT: 13 ACC: 13 LG_ALU: 3972 RG_ALU:   1 SP: 3973 ZF: 0 |	load   var
  ALU_RES -> ACC
  TICK: 907 PC:  48 ADDR:   0 MEM_OUT: 13 ACC: 1 LG_ALU: 3972 RG_ALU:   1 SP: 3973 ZF: 0 |	load   var
  SP -> ALU_LG
  TICK: 908 PC:  49 ADDR:   0 MEM_OUT: 13 ACC: 1 LG_ALU: 3973 RG_ALU:   1 SP: 3973 ZF: 0 |	push   var
  ALU_RES = SP - 1
  TICK: 909 PC:  49 ADDR:   0 MEM_OUT: 13 ACC: 1 LG_ALU: 3973 RG_ALU:   1 SP: 3973 ZF: 0 |	push   var
  ALU_RES -> SP
  TICK: 910 PC:  49 ADDR:   0 MEM_OUT: 13 ACC: 1 LG_ALU: 3973 RG_ALU:   1 SP: 3972 ZF: 0 |	push   var
  WRITE ACC -> MEM[ALU]
  TICK: 910 PC:  49 ADDR:   0 MEM_OUT: 13 ACC: 1 LG_ALU: 3973 RG_ALU:   1 SP: 3972 ZF: 0 |	push   var
  ADDR -> ALU_RG
  TICK: 911 PC:  50 ADDR:   0 MEM_OUT: 13 ACC: 1 LG_ALU: 3973 RG_ALU:   8 SP: 3972 ZF: 0 |	load   var
  ALU_RES = ALU_RG
  TICK: 912 PC:  50 ADDR:   0 MEM_OUT: 13 ACC: 1 LG_ALU: 3973 RG_ALU:   8 SP: 3972 ZF: 0 |	load   var
  READ MEM[ALU]
  TICK: 913 PC:  50 ADDR:   0 MEM_OUT: 8 ACC: 1 LG_ALU: 3973 RG_ALU:   8 SP: 3972 ZF: 0 |	load   var
  MEM[ALU] -> ALU_RG
  TICK: 914 PC:  50 ADDR:   0 MEM_OUT: 8 ACC: 1 LG_ALU: 3973 RG_ALU:   8 SP: 3972 ZF: 0 |	load   var
  ALU_RES = ALU_RG
  TICK: 915 PC:  50 ADDR:   0 MEM_OUT: 8 ACC: 1 LG_ALU: 3973 RG_ALU:   8 SP: 3972 ZF: 0 |	load   var
  ALU_RES -> ACC
  TICK: 916 PC:  50 ADDR:   0 MEM_OUT: 8 ACC: 8 LG_ALU: 3973 RG_ALU:   8 SP: 3972 ZF: 0 |	load   var
  ADDR -> ALU_RG
  TICK: 917 PC:  51 ADDR:   0 MEM_OUT: 8 ACC: 8 LG_ALU: 3973 RG_ALU:   5 SP: 3972 ZF: 0 |	store   var
  ALU_RES = ALU_RG
  TICK: 918 PC:  51 ADDR:   0 MEM_OUT: 8 ACC: 8 LG_ALU: 3973 RG_ALU:   5 SP: 3972 ZF: 0 |	store   var
  WRITE ACC -> MEM[ALU]
  TICK: 919 PC:  51 ADDR:   0 MEM_OUT: 8 ACC: 8 LG_ALU: 3973 RG_ALU:   5 SP: 3972 ZF: 0 |	store   var
  NUM -> ALU_RG
  TICK: 920 PC:  52 ADDR:   0 MEM_OUT: 8 ACC: 8 LG_ALU: 3973 RG_ALU:   1 SP: 3972 ZF: 0 |	load   var
  ALU_RES = ALU_RG
  TICK: 921 PC:  52 ADDR:   0 MEM_OUT: 8 ACC: 8 LG_ALU: 3973 RG_ALU:   1 SP: 3972 ZF: 0 |	load   var
  ALU_RES -> ACC
  TICK: 922 PC:  52 ADDR:   0 MEM_OUT: 8 ACC: 1 LG_ALU: 3973 RG_ALU:   1 SP: 3972 ZF: 0 |	load   var
  SP -> ALU_LG
  TICK: 923 PC:  53 ADDR:   0 MEM_OUT: 8 ACC: 1 LG_ALU: 3972 RG_ALU:   1 SP: 3972 ZF: 0 |	push   var
  ALU_RES = SP - 1
  TICK: 924 PC:  53 ADDR:   0 MEM_OUT: 8 ACC: 1 LG_ALU: 3972 RG_ALU:   1 SP: 3972 ZF: 0 |	push   var
  ALU_RES -> SP
  TICK: 925 PC:  53 ADDR:   0 MEM_OUT: 8 ACC: 1 LG_ALU: 3972 RG_ALU:   1 SP: 3971 ZF: 0 |	push   var
  WRITE ACC -> MEM[ALU]
  TICK: 925 PC:  53 ADDR:   0 MEM_OUT: 8 ACC: 1 LG_ALU: 3972 RG_ALU:   1 SP: 3971 ZF: 0 |	push   var
  ADDR -> ALU_RG
  TICK: 926 PC:  54 ADDR:   0 MEM_OUT: 8 ACC: 1 LG_ALU: 3972 RG_ALU:   6 SP: 3971 ZF: 0 |	load   <
  ALU_RES = ALU_RG
  TICK: 927 PC:  54 ADDR:   0 MEM_OUT: 8 ACC: 1 LG_ALU: 3972 RG_ALU:   6 SP: 3971 ZF: 0 |	load   <
  READ MEM[ALU]
  TICK: 928 PC:  54 ADDR:   0 MEM_OUT: 13 ACC: 1 LG_ALU: 3972 RG_ALU:   6 SP: 3971 ZF: 0 |	load   <
  MEM[ALU] -> ALU_RG
  TICK: 929 PC:  54 ADDR:   0 MEM_OUT: 13 ACC: 1 LG_ALU: 3972 RG_ALU:  13 SP: 3971 ZF: 0 |	load   <
  ALU_RES = ALU_RG
  TICK: 930 PC:  54 ADDR:   0 MEM_OUT: 13 ACC: 1 LG_ALU: 3972 RG_ALU:  13 SP: 3971 ZF: 0 |	load   <
  ALU_RES -> ACC
  TICK: 931 PC:  54 ADDR:   0 MEM_OUT: 13 ACC: 13 LG_ALU: 3972 RG_ALU:  13 SP: 3971 ZF: 0 |	load   <
  ADDR -> ALU_RG
  TICK: 932 PC:  55 ADDR:   0 MEM_OUT: 13 ACC: 13 LG_ALU: 3972 RG_ALU:   7 SP: 3971 ZF: 0 |	sub   <
  ALU_RES = ALU_RG
  TICK: 933 PC:  55 ADDR:   0 MEM_OUT: 13 ACC: 13 LG_ALU: 3972 RG_ALU:   7 SP: 3971 ZF: 0 |	sub   <
  READ MEM[ALU]
  TICK: 934 PC:  55 ADDR:   0 MEM_OUT: 400000 ACC: 13 LG_ALU: 3972 RG_ALU:   7 SP: 3971 ZF: 0 |	sub   <
  MEM[ALU] -> ALU_RG
  TICK: 935 PC:  55 ADDR:   0 MEM_OUT: 400000 ACC: 13 LG_ALU: 3972 RG_ALU: 400000 SP: 3971 ZF: 0 |	sub   <
  ACC -> ALU_LG
  TICK: 935 PC:  55 ADDR:   0 MEM_OUT: 400000 ACC: 13 LG_ALU:  13 RG_ALU: 400000 SP: 3971 ZF: 0 |	sub   <
  ALU_RES = ALU_LG + ALU_RG
  TICK: 936 PC:  55 ADDR:   0 MEM_OUT: 400000 ACC: 13 LG_ALU:  13 RG_ALU: 400000 SP: 3971 ZF: 0 |	sub   <
  ALU_RES -> ACC
  TICK: 937 PC:  55 ADDR:   0 MEM_OUT: 400000 ACC: -399987 LG_ALU:  13 RG_ALU: 400000 SP: 3971 ZF: 0 |	sub   <
  PC + 1 -> PC
  NUM -> ALU_RG
  TICK: 938 PC:  57 ADDR:   0 MEM_OUT: 400000 ACC: -399987 LG_ALU:  13 RG_ALU:   1 SP: 3971 ZF: 0 |	load   <
  ALU_RES = ALU_RG
  TICK: 939 PC:  57 ADDR:   0 MEM_OUT: 400000 ACC: -399987 LG_ALU:  13 RG_ALU:   1 SP: 3971 ZF: 0 |	load   <
  ALU_RES -> ACC
  TICK: 940 PC:  57 ADDR:   0 MEM_OUT: 400000 ACC: 1 LG_ALU:  13 RG_ALU:   1 SP: 3971 ZF: 0 |	load   <
  ADDR -> PC
  SP -> ALU_LG
  TICK: 942 PC:  60 ADDR:   0 MEM_OUT: 400000 ACC: 1 LG_ALU: 3971 RG_ALU:   1 SP: 3971 ZF: 0 |	push   <
  ALU_RES = SP - 1
  TICK: 943 PC:  60 ADDR:   0 MEM_OUT: 400000 ACC: 1 LG_ALU: 3971 RG_ALU:   1 SP: 3971 ZF: 0 |	push   <
  ALU_RES -> SP
  TICK: 944 PC:  60 ADDR:   0 MEM_OUT: 400000 ACC: 1 LG_ALU: 3971 RG_ALU:   1 SP: 3970 ZF: 0 |	push   <
  WRITE ACC -> MEM[ALU]
  TICK: 944 PC:  60 ADDR:   0 MEM_OUT: 400000 ACC: 1 LG_ALU: 3971 RG_ALU:   1 SP: 3970 ZF: 0 |	push   <
  SP -> ALU_LG
  TICK: 945 PC:  61 ADDR:   0 MEM_OUT: 400000 ACC: 1 LG_ALU: 3970 RG_ALU:   1 SP: 3970 ZF: 0 |	pop
  ALU_RES = ALU_LG
  TICK: 946 PC:  61 ADDR:   0 MEM_OUT: 400000 ACC: 1 LG_ALU: 3970 RG_ALU:   1 SP: 3970 ZF: 0 |	pop
  READ MEM[ALU]
  TICK: 947 PC:  61 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3970 RG_ALU:   1 SP: 3970 ZF: 0 |	pop
  ALU_RES = SP + 1
  TICK: 948 PC:  61 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3970 RG_ALU:   1 SP: 3970 ZF: 0 |	pop
  ALU_RES -> SP
  TICK: 949 PC:  61 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3970 RG_ALU:   1 SP: 3971 ZF: 0 |	pop
  MEM[ALU] -> ALU_RG
  TICK: 949 PC:  61 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3970 RG_ALU:   1 SP: 3971 ZF: 0 |	pop
  ALU_RES = ALU_RG
  TICK: 950 PC:  61 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3970 RG_ALU:   1 SP: 3971 ZF: 0 |	pop
  ALU_RES -> ACC
  TICK: 951 PC:  61 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3970 RG_ALU:   1 SP: 3971 ZF: 0 |	pop
  ADDR -> PC
  ADDR -> PC
  ADDR -> ALU_RG
  TICK: 954 PC:  24 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3970 RG_ALU:   6 SP: 3971 ZF: 0 |	load
  ALU_RES = ALU_RG
  TICK: 955 PC:  24 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3970 RG_ALU:   6 SP: 3971 ZF: 0 |	load
  READ MEM[ALU]
  TICK: 956 PC:  24 ADDR:   0 MEM_OUT: 13 ACC: 1 LG_ALU: 3970 RG_ALU:   6 SP: 3971 ZF: 0 |	load
  MEM[ALU] -> ALU_RG
  TICK: 957 PC:  24 ADDR:   0 MEM_OUT: 13 ACC: 1 LG_ALU: 3970 RG_ALU:  13 SP: 3971 ZF: 0 |	load
  ALU_RES = ALU_RG
  TICK: 958 PC:  24 ADDR:   0 MEM_OUT: 13 ACC: 1 LG_ALU: 3970 RG_ALU:  13 SP: 3971 ZF: 0 |	load
  ALU_RES -> ACC
  TICK: 959 PC:  24 ADDR:   0 MEM_OUT: 13 ACC: 13 LG_ALU: 3970 RG_ALU:  13 SP: 3971 ZF: 0 |	load
  NUM -> ALU_RG
  TICK: 960 PC:  25 ADDR:   0 MEM_OUT: 13 ACC: 13 LG_ALU: 3970 RG_ALU:   2 SP: 3971 ZF: 0 |	mod
  ACC -> ALU_LG
  TICK: 960 PC:  25 ADDR:   0 MEM_OUT: 13 ACC: 13 LG_ALU:  13 RG_ALU:   2 SP: 3971 ZF: 0 |	mod
  ALU_RES = ALU_LG % ALU_RG
  TICK: 961 PC:  25 ADDR:   0 MEM_OUT: 13 ACC: 13 LG_ALU:  13 RG_ALU:   2 SP: 3971 ZF: 0 |	mod
  ALU_RES -> ACC
  TICK: 962 PC:  25 ADDR:   0 MEM_OUT: 13 ACC: 1 LG_ALU:  13 RG_ALU:   2 SP: 3971 ZF: 0 |	mod
  SP -> ALU_LG
  TICK: 963 PC:  26 ADDR:   0 MEM_OUT: 13 ACC: 1 LG_ALU: 3971 RG_ALU:   2 SP: 3971 ZF: 0 |	push
  ALU_RES = SP - 1
  TICK: 964 PC:  26 ADDR:   0 MEM_OUT: 13 ACC: 1 LG_ALU: 3971 RG_ALU:   2 SP: 3971 ZF: 0 |	push
  ALU_RES -> SP
  TICK: 965 PC:  26 ADDR:   0 MEM_OUT: 13 ACC: 1 LG_ALU: 3971 RG_ALU:   2 SP: 3970 ZF: 0 |	push
  WRITE ACC -> MEM[ALU]
  TICK: 965 PC:  26 ADDR:   0 MEM_OUT: 13 ACC: 1 LG_ALU: 3971 RG_ALU:   2 SP: 3970 ZF: 0 |	push
  NUM -> ALU_RG
  TICK: 966 PC:  27 ADDR:   0 MEM_OUT: 13 ACC: 1 LG_ALU: 3971 RG_ALU:   0 SP: 3970 ZF: 0 |	load   =
  ALU_RES = ALU_RG
  TICK: 967 PC:  27 ADDR:   0 MEM_OUT: 13 ACC: 1 LG_ALU: 3971 RG_ALU:   0 SP: 3970 ZF: 1 |	load   =
  ALU_RES -> ACC
  TICK: 968 PC:  27 ADDR:   0 MEM_OUT: 13 ACC: 0 LG_ALU: 3971 RG_ALU:   0 SP: 3970 ZF: 1 |	load   =
  SP -> ALU_LG
  TICK: 969 PC:  28 ADDR:   0 MEM_OUT: 13 ACC: 0 LG_ALU: 3970 RG_ALU:   0 SP: 3970 ZF: 1 |	sub   =
  ALU_RES = ALU_LG
  TICK: 970 PC:  28 ADDR:   0 MEM_OUT: 13 ACC: 0 LG_ALU: 3970 RG_ALU:   0 SP: 3970 ZF: 0 |	sub   =
  READ MEM[ALU]
  TICK: 971 PC:  28 ADDR:   0 MEM_OUT: 1 ACC: 0 LG_ALU: 3970 RG_ALU:   0 SP: 3970 ZF: 0 |	sub   =
  MEM[ALU] -> ALU_RG
  TICK: 972 PC:  28 ADDR:   0 MEM_OUT: 1 ACC: 0 LG_ALU: 3970 RG_ALU:   1 SP: 3970 ZF: 0 |	sub   =
  ALU_RES = SP + 1
  TICK: 973 PC:  28 ADDR:   0 MEM_OUT: 1 ACC: 0 LG_ALU: 3970 RG_ALU:   1 SP: 3970 ZF: 0 |	sub   =
  ALU_RES -> SP
  TICK: 974 PC:  28 ADDR:   0 MEM_OUT: 1 ACC: 0 LG_ALU: 3970 RG_ALU:   1 SP: 3971 ZF: 0 |	sub   =
  ACC -> ALU_LG
  TICK: 974 PC:  28 ADDR:   0 MEM_OUT: 1 ACC: 0 LG_ALU:   0 RG_ALU:   1 SP: 3971 ZF: 0 |	sub   =
  ALU_RES = ALU_LG + ALU_RG
  TICK: 975 PC:  28 ADDR:   0 MEM_OUT: 1 ACC: 0 LG_ALU:   0 RG_ALU:   1 SP: 3971 ZF: 0 |	sub   =
  ALU_RES -> ACC
  TICK: 976 PC:  28 ADDR:   0 MEM_OUT: 1 ACC: -1 LG_ALU:   0 RG_ALU:   1 SP: 3971 ZF: 0 |	sub   =
  ADDR -> PC
  NUM -> ALU_RG
  TICK: 978 PC:  32 ADDR:   0 MEM_OUT: 1 ACC: -1 LG_ALU:   0 RG_ALU:   0 SP: 3971 ZF: 0 |	load   =
  ALU_RES = ALU_RG
  TICK: 979 PC:  32 ADDR:   0 MEM_OUT: 1 ACC: -1 LG_ALU:   0 RG_ALU:   0 SP: 3971 ZF: 1 |	load   =
  ALU_RES -> ACC
  TICK: 980 PC:  32 ADDR:   0 MEM_OUT: 1 ACC: 0 LG_ALU:   0 RG_ALU:   0 SP: 3971 ZF: 1 |	load   =
  SP -> ALU_LG
  TICK: 981 PC:  33 ADDR:   0 MEM_OUT: 1 ACC: 0 LG_ALU: 3971 RG_ALU:   0 SP: 3971 ZF: 1 |	push   =
  ALU_RES = SP - 1
  TICK: 982 PC:  33 ADDR:   0 MEM_OUT: 1 ACC: 0 LG_ALU: 3971 RG_ALU:   0 SP: 3971 ZF: 0 |	push   =
  ALU_RES -> SP
  TICK: 983 PC:  33 ADDR:   0 MEM_OUT: 1 ACC: 0 LG_ALU: 3971 RG_ALU:   0 SP: 3970 ZF: 0 |	push   =
  WRITE ACC -> MEM[ALU]
  TICK: 983 PC:  33 ADDR:   0 MEM_OUT: 1 ACC: 0 LG_ALU: 3971 RG_ALU:   0 SP: 3970 ZF: 0 |	push   =
  SP -> ALU_LG
  TICK: 984 PC:  34 ADDR:   0 MEM_OUT: 1 ACC: 0 LG_ALU: 3970 RG_ALU:   0 SP: 3970 ZF: 0 |	pop   if
  ALU_RES = ALU_LG
  TICK: 985 PC:  34 ADDR:   0 MEM_OUT: 1 ACC: 0 LG_ALU: 3970 RG_ALU:   0 SP: 3970 ZF: 0 |	pop   if
  READ MEM[ALU]
  TICK: 986 PC:  34 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3970 RG_ALU:   0 SP: 3970 ZF: 0 |	pop   if
  ALU_RES = SP + 1
  TICK: 987 PC:  34 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3970 RG_ALU:   0 SP: 3970 ZF: 0 |	pop   if
  ALU_RES -> SP
  TICK: 988 PC:  34 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3970 RG_ALU:   0 SP: 3971 ZF: 0 |	pop   if
  MEM[ALU] -> ALU_RG
  TICK: 988 PC:  34 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3970 RG_ALU:   0 SP: 3971 ZF: 0 |	pop   if
  ALU_RES = ALU_RG
  TICK: 989 PC:  34 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3970 RG_ALU:   0 SP: 3971 ZF: 1 |	pop   if
  ALU_RES -> ACC
  TICK: 990 PC:  34 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3970 RG_ALU:   0 SP: 3971 ZF: 1 |	pop   if
  PC + 1 -> PC
  ADDR -> PC
  NUM -> ALU_RG
  TICK: 992 PC:  20 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3970 RG_ALU:   0 SP: 3971 ZF: 1 |	load   +
  ALU_RES = ALU_RG
  TICK: 993 PC:  20 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3970 RG_ALU:   0 SP: 3971 ZF: 1 |	load   +
  ALU_RES -> ACC
  TICK: 994 PC:  20 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3970 RG_ALU:   0 SP: 3971 ZF: 1 |	load   +
  NUM -> ALU_RG
  TICK: 995 PC:  21 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3970 RG_ALU:   0 SP: 3971 ZF: 1 |	add   +
  ACC -> ALU_LG
  TICK: 995 PC:  21 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU:   0 RG_ALU:   0 SP: 3971 ZF: 1 |	add   +
  ALU_RES = ALU_LG + ALU_RG
  TICK: 996 PC:  21 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU:   0 RG_ALU:   0 SP: 3971 ZF: 1 |	add   +
  ALU_RES -> ACC
  TICK: 997 PC:  21 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU:   0 RG_ALU:   0 SP: 3971 ZF: 1 |	add   +
  SP -> ALU_LG
  TICK: 998 PC:  22 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3971 RG_ALU:   0 SP: 3971 ZF: 1 |	push   +
  ALU_RES = SP - 1
  TICK: 999 PC:  22 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3971 RG_ALU:   0 SP: 3971 ZF: 0 |	push   +
  ALU_RES -> SP
  TICK: 1000 PC:  22 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3971 RG_ALU:   0 SP: 3970 ZF: 0 |	push   +
  WRITE ACC -> MEM[ALU]
  TICK: 1000 PC:  22 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3971 RG_ALU:   0 SP: 3970 ZF: 0 |	push   +
  ADDR -> PC
  SP -> ALU_LG
  TICK: 1002 PC:  37 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3970 RG_ALU:   0 SP: 3970 ZF: 0 |	pop   if
  ALU_RES = ALU_LG
  TICK: 1003 PC:  37 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3970 RG_ALU:   0 SP: 3970 ZF: 0 |	pop   if
  READ MEM[ALU]
  TICK: 1004 PC:  37 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3970 RG_ALU:   0 SP: 3970 ZF: 0 |	pop   if
  ALU_RES = SP + 1
  TICK: 1005 PC:  37 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3970 RG_ALU:   0 SP: 3970 ZF: 0 |	pop   if
  ALU_RES -> SP
  TICK: 1006 PC:  37 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3970 RG_ALU:   0 SP: 3971 ZF: 0 |	pop   if
  MEM[ALU] -> ALU_RG
  TICK: 1006 PC:  37 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3970 RG_ALU:   0 SP: 3971 ZF: 0 |	pop   if
  ALU_RES = ALU_RG
  TICK: 1007 PC:  37 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3970 RG_ALU:   0 SP: 3971 ZF: 1 |	pop   if
  ALU_RES -> ACC
  TICK: 1008 PC:  37 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3970 RG_ALU:   0 SP: 3971 ZF: 1 |	pop   if
  SP -> ALU_LG
  TICK: 1009 PC:  38 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3971 RG_ALU:   0 SP: 3971 ZF: 1 |	push   if
  ALU_RES = SP - 1
  TICK: 1010 PC:  38 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3971 RG_ALU:   0 SP: 3971 ZF: 0 |	push   if
  ALU_RES -> SP
  TICK: 1011 PC:  38 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3971 RG_ALU:   0 SP: 3970 ZF: 0 |	push   if
  WRITE ACC -> MEM[ALU]
  TICK: 1011 PC:  38 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3971 RG_ALU:   0 SP: 3970 ZF: 0 |	push   if
  ADDR -> ALU_RG
  TICK: 1012 PC:  39 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3971 RG_ALU:   6 SP: 3970 ZF: 0 |	load   var
  ALU_RES = ALU_RG
  TICK: 1013 PC:  39 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3971 RG_ALU:   6 SP: 3970 ZF: 0 |	load   var
  READ MEM[ALU]
  TICK: 1014 PC:  39 ADDR:   0 MEM_OUT: 13 ACC: 0 LG_ALU: 3971 RG_ALU:   6 SP: 3970 ZF: 0 |	load   var
  MEM[ALU] -> ALU_RG
  TICK: 1015 PC:  39 ADDR:   0 MEM_OUT: 13 ACC: 0 LG_ALU: 3971 RG_ALU:  13 SP: 3970 ZF: 0 |	load   var
  ALU_RES = ALU_RG
  TICK: 1016 PC:  39 ADDR:   0 MEM_OUT: 13 ACC: 0 LG_ALU: 3971 RG_ALU:  13 SP: 3970 ZF: 0 |	load   var
  ALU_RES -> ACC
  TICK: 1017 PC:  39 ADDR:   0 MEM_OUT: 13 ACC: 13 LG_ALU: 3971 RG_ALU:  13 SP: 3970 ZF: 0 |	load   var
  ADDR -> ALU_RG
  TICK: 1018 PC:  40 ADDR:   0 MEM_OUT: 13 ACC: 13 LG_ALU: 3971 RG_ALU:   8 SP: 3970 ZF: 0 |	store   var
  ALU_RES = ALU_RG
  TICK: 1019 PC:  40 ADDR:   0 MEM_OUT: 13 ACC: 13 LG_ALU: 3971 RG_ALU:   8 SP: 3970 ZF: 0 |	store   var
  WRITE ACC -> MEM[ALU]
  TICK: 1020 PC:  40 ADDR:   0 MEM_OUT: 13 ACC: 13 LG_ALU: 3971 RG_ALU:   8 SP: 3970 ZF: 0 |	store   var
  NUM -> ALU_RG
  TICK: 1021 PC:  41 ADDR:   0 MEM_OUT: 13 ACC: 13 LG_ALU: 3971 RG_ALU:   1 SP: 3970 ZF: 0 |	load   var
  ALU_RES = ALU_RG
  TICK: 1022 PC:  41 ADDR:   0 MEM_OUT: 13 ACC: 13 LG_ALU: 3971 RG_ALU:   1 SP: 3970 ZF: 0 |	load   var
  ALU_RES -> ACC
  TICK: 1023 PC:  41 ADDR:   0 MEM_OUT: 13 ACC: 1 LG_ALU: 3971 RG_ALU:   1 SP: 3970 ZF: 0 |	load   var
  SP -> ALU_LG
  TICK: 1024 PC:  42 ADDR:   0 MEM_OUT: 13 ACC: 1 LG_ALU: 3970 RG_ALU:   1 SP: 3970 ZF: 0 |	push   var
  ALU_RES = SP - 1
  TICK: 1025 PC:  42 ADDR:   0 MEM_OUT: 13 ACC: 1 LG_ALU: 3970 RG_ALU:   1 SP: 3970 ZF: 0 |	push   var
  ALU_RES -> SP
  TICK: 1026 PC:  42 ADDR:   0 MEM_OUT: 13 ACC: 1 LG_ALU: 3970 RG_ALU:   1 SP: 3969 ZF: 0 |	push   var
  WRITE ACC -> MEM[ALU]
  TICK: 1026 PC:  42 ADDR:   0 MEM_OUT: 13 ACC: 1 LG_ALU: 3970 RG_ALU:   1 SP: 3969 ZF: 0 |	push   var
  ADDR -> ALU_RG
  TICK: 1027 PC:  43 ADDR:   0 MEM_OUT: 13 ACC: 1 LG_ALU: 3970 RG_ALU:   5 SP: 3969 ZF: 0 |	load   +
  ALU_RES = ALU_RG
  TICK: 1028 PC:  43 ADDR:   0 MEM_OUT: 13 ACC: 1 LG_ALU: 3970 RG_ALU:   5 SP: 3969 ZF: 0 |	load   +
  READ MEM[ALU]
  TICK: 1029 PC:  43 ADDR:   0 MEM_OUT: 8 ACC: 1 LG_ALU: 3970 RG_ALU:   5 SP: 3969 ZF: 0 |	load   +
  MEM[ALU] -> ALU_RG
  TICK: 1030 PC:  43 ADDR:   0 MEM_OUT: 8 ACC: 1 LG_ALU: 3970 RG_ALU:   8 SP: 3969 ZF: 0 |	load   +
  ALU_RES = ALU_RG
  TICK: 1031 PC:  43 ADDR:   0 MEM_OUT: 8 ACC: 1 LG_ALU: 3970 RG_ALU:   8 SP: 3969 ZF: 0 |	load   +
  ALU_RES -> ACC
  TICK: 1032 PC:  43 ADDR:   0 MEM_OUT: 8 ACC: 8 LG_ALU: 3970 RG_ALU:   8 SP: 3969 ZF: 0 |	load   +
  ADDR -> ALU_RG
  TICK: 1033 PC:  44 ADDR:   0 MEM_OUT: 8 ACC: 8 LG_ALU: 3970 RG_ALU:   6 SP: 3969 ZF: 0 |	add   +
  ALU_RES = ALU_RG
  TICK: 1034 PC:  44 ADDR:   0 MEM_OUT: 8 ACC: 8 LG_ALU: 3970 RG_ALU:   6 SP: 3969 ZF: 0 |	add   +
  READ MEM[ALU]
  TICK: 1035 PC:  44 ADDR:   0 MEM_OUT: 13 ACC: 8 LG_ALU: 3970 RG_ALU:   6 SP: 3969 ZF: 0 |	add   +
  MEM[ALU] -> ALU_RG
  TICK: 1036 PC:  44 ADDR:   0 MEM_OUT: 13 ACC: 8 LG_ALU: 3970 RG_ALU:  13 SP: 3969 ZF: 0 |	add   +
  ACC -> ALU_LG
  TICK: 1036 PC:  44 ADDR:   0 MEM_OUT: 13 ACC: 8 LG_ALU:   8 RG_ALU:  13 SP: 3969 ZF: 0 |	add   +
  ALU_RES = ALU_LG + ALU_RG
  TICK: 1037 PC:  44 ADDR:   0 MEM_OUT: 13 ACC: 8 LG_ALU:   8 RG_ALU:  13 SP: 3969 ZF: 0 |	add   +
  ALU_RES -> ACC
  TICK: 1038 PC:  44 ADDR:   0 MEM_OUT: 13 ACC: 21 LG_ALU:   8 RG_ALU:  13 SP: 3969 ZF: 0 |	add   +
  SP -> ALU_LG
  TICK: 1039 PC:  45 ADDR:   0 MEM_OUT: 13 ACC: 21 LG_ALU: 3969 RG_ALU:  13 SP: 3969 ZF: 0 |	push   +
  ALU_RES = SP - 1
  TICK: 1040 PC:  45 ADDR:   0 MEM_OUT: 13 ACC: 21 LG_ALU: 3969 RG_ALU:  13 SP: 3969 ZF: 0 |	push   +
  ALU_RES -> SP
  TICK: 1041 PC:  45 ADDR:   0 MEM_OUT: 13 ACC: 21 LG_ALU: 3969 RG_ALU:  13 SP: 3968 ZF: 0 |	push   +
  WRITE ACC -> MEM[ALU]
  TICK: 1041 PC:  45 ADDR:   0 MEM_OUT: 13 ACC: 21 LG_ALU: 3969 RG_ALU:  13 SP: 3968 ZF: 0 |	push   +
  SP -> ALU_LG
  TICK: 1042 PC:  46 ADDR:   0 MEM_OUT: 13 ACC: 21 LG_ALU: 3968 RG_ALU:  13 SP: 3968 ZF: 0 |	pop   var
  ALU_RES = ALU_LG
  TICK: 1043 PC:  46 ADDR:   0 MEM_OUT: 13 ACC: 21 LG_ALU: 3968 RG_ALU:  13 SP: 3968 ZF: 0 |	pop   var
  READ MEM[ALU]
  TICK: 1044 PC:  46 ADDR:   0 MEM_OUT: 21 ACC: 21 LG_ALU: 3968 RG_ALU:  13 SP: 3968 ZF: 0 |	pop   var
  ALU_RES = SP + 1
  TICK: 1045 PC:  46 ADDR:   0 MEM_OUT: 21 ACC: 21 LG_ALU: 3968 RG_ALU:  13 SP: 3968 ZF: 0 |	pop   var
  ALU_RES -> SP
  TICK: 1046 PC:  46 ADDR:   0 MEM_OUT: 21 ACC: 21 LG_ALU: 3968 RG_ALU:  13 SP: 3969 ZF: 0 |	pop   var
  MEM[ALU] -> ALU_RG
  TICK: 1046 PC:  46 ADDR:   0 MEM_OUT: 21 ACC: 21 LG_ALU: 3968 RG_ALU:  21 SP: 3969 ZF: 0 |	pop   var
  ALU_RES = ALU_RG
  TICK: 1047 PC:  46 ADDR:   0 MEM_OUT: 21 ACC: 21 LG_ALU: 3968 RG_ALU:  21 SP: 3969 ZF: 0 |	pop   var
  ALU_RES -> ACC
  TICK: 1048 PC:  46 ADDR:   0 MEM_OUT: 21 ACC: 21 LG_ALU: 3968 RG_ALU:  21 SP: 3969 ZF: 0 |	pop   var
  ADDR -> ALU_RG
  TICK: 1049 PC:  47 ADDR:   0 MEM_OUT: 21 ACC: 21 LG_ALU: 3968 RG_ALU:   6 SP: 3969 ZF: 0 |	store   var
  ALU_RES = ALU_RG
  TICK: 1050 PC:  47 ADDR:   0 MEM_OUT: 21 ACC: 21 LG_ALU: 3968 RG_ALU:   6 SP: 3969 ZF: 0 |	store   var
  WRITE ACC -> MEM[ALU]
  TICK: 1051 PC:  47 ADDR:   0 MEM_OUT: 21 ACC: 21 LG_ALU: 3968 RG_ALU:   6 SP: 3969 ZF: 0 |	store   var
  NUM -> ALU_RG
  TICK: 1052 PC:  48 ADDR:   0 MEM_OUT: 21 ACC: 21 LG_ALU: 3968 RG_ALU:   1 SP: 3969 ZF: 0 |	load   var
  ALU_RES = ALU_RG
  TICK: 1053 PC:  48 ADDR:   0 MEM_OUT: 21 ACC: 21 LG_ALU: 3968 RG_ALU:   1 SP: 3969 ZF: 0 |	load   var
  ALU_RES -> ACC
  TICK: 1054 PC:  48 ADDR:   0 MEM_OUT: 21 ACC: 1 LG_ALU: 3968 RG_ALU:   1 SP: 3969 ZF: 0 |	load   var
  SP -> ALU_LG
  TICK: 1055 PC:  49 ADDR:   0 MEM_OUT: 21 ACC: 1 LG_ALU: 3969 RG_ALU:   1 SP: 3969 ZF: 0 |	push   var
  ALU_RES = SP - 1
  TICK: 1056 PC:  49 ADDR:   0 MEM_OUT: 21 ACC: 1 LG_ALU: 3969 RG_ALU:   1 SP: 3969 ZF: 0 |	push   var
  ALU_RES -> SP
  TICK: 1057 PC:  49 ADDR:   0 MEM_OUT: 21 ACC: 1 LG_ALU: 3969 RG_ALU:   1 SP: 3968 ZF: 0 |	push   var
  WRITE ACC -> MEM[ALU]
  TICK: 1057 PC:  49 ADDR:   0 MEM_OUT: 21 ACC: 1 LG_ALU: 3969 RG_ALU:   1 SP: 3968 ZF: 0 |	push   var
  ADDR -> ALU_RG
  TICK: 1058 PC:  50 ADDR:   0 MEM_OUT: 21 ACC: 1 LG_ALU: 3969 RG_ALU:   8 SP: 3968 ZF: 0 |	load   var
  ALU_RES = ALU_RG
  TICK: 1059 PC:  50 ADDR:   0 MEM_OUT: 21 ACC: 1 LG_ALU: 3969 RG_ALU:   8 SP: 3968 ZF: 0 |	load   var
  READ MEM[ALU]
  TICK: 1060 PC:  50 ADDR:   0 MEM_OUT: 13 ACC: 1 LG_ALU: 3969 RG_ALU:   8 SP: 3968 ZF: 0 |	load   var
  MEM[ALU] -> ALU_RG
  TICK: 1061 PC:  50 ADDR:   0 MEM_OUT: 13 ACC: 1 LG_ALU: 3969 RG_ALU:  13 SP: 3968 ZF: 0 |	load   var
  ALU_RES = ALU_RG
  TICK: 1062 PC:  50 ADDR:   0 MEM_OUT: 13 ACC: 1 LG_ALU: 3969 RG_ALU:  13 SP: 3968 ZF: 0 |	load   var
  ALU_RES -> ACC
  TICK: 1063 PC:  50 ADDR:   0 MEM_OUT: 13 ACC: 13 LG_ALU: 3969 RG_ALU:  13 SP: 3968 ZF: 0 |	load   var
  ADDR -> ALU_RG
  TICK: 1064 PC:  51 ADDR:   0 MEM_OUT: 13 ACC: 13 LG_ALU: 3969 RG_ALU:   5 SP: 3968 ZF: 0 |	store   var
  ALU_RES = ALU_RG
  TICK: 1065 PC:  51 ADDR:   0 MEM_OUT: 13 ACC: 13 LG_ALU: 3969 RG_ALU:   5 SP: 3968 ZF: 0 |	store   var
  WRITE ACC -> MEM[ALU]
  TICK: 1066 PC:  51 ADDR:   0 MEM_OUT: 13 ACC: 13 LG_ALU: 3969 RG_ALU:   5 SP: 3968 ZF: 0 |	store   var
  NUM -> ALU_RG
  TICK: 1067 PC:  52 ADDR:   0 MEM_OUT: 13 ACC: 13 LG_ALU: 3969 RG_ALU:   1 SP: 3968 ZF: 0 |	load   var
  ALU_RES = ALU_RG
  TICK: 1068 PC:  52 ADDR:   0 MEM_OUT: 13 ACC: 13 LG_ALU: 3969 RG_ALU:   1 SP: 3968 ZF: 0 |	load   var
  ALU_RES -> ACC
  TICK: 1069 PC:  52 ADDR:   0 MEM_OUT: 13 ACC: 1 LG_ALU: 3969 RG_ALU:   1 SP: 3968 ZF: 0 |	load   var
  SP -> ALU_LG
  TICK: 1070 PC:  53 ADDR:   0 MEM_OUT: 13 ACC: 1 LG_ALU: 3968 RG_ALU:   1 SP: 3968 ZF: 0 |	push   var
  ALU_RES = SP - 1
  TICK: 1071 PC:  53 ADDR:   0 MEM_OUT: 13 ACC: 1 LG_ALU: 3968 RG_ALU:   1 SP: 3968 ZF: 0 |	push   var
  ALU_RES -> SP
  TICK: 1072 PC:  53 ADDR:   0 MEM_OUT: 13 ACC: 1 LG_ALU: 3968 RG_ALU:   1 SP: 3967 ZF: 0 |	push   var
  WRITE ACC -> MEM[ALU]
  TICK: 1072 PC:  53 ADDR:   0 MEM_OUT: 13 ACC: 1 LG_ALU: 3968 RG_ALU:   1 SP: 3967 ZF: 0 |	push   var
  ADDR -> ALU_RG
  TICK: 1073 PC:  54 ADDR:   0 MEM_OUT: 13 ACC: 1 LG_ALU: 3968 RG_ALU:   6 SP: 3967 ZF: 0 |	load   <
  ALU_RES = ALU_RG
  TICK: 1074 PC:  54 ADDR:   0 MEM_OUT: 13 ACC: 1 LG_ALU: 3968 RG_ALU:   6 SP: 3967 ZF: 0 |	load   <
  READ MEM[ALU]
  TICK: 1075 PC:  54 ADDR:   0 MEM_OUT: 21 ACC: 1 LG_ALU: 3968 RG_ALU:   6 SP: 3967 ZF: 0 |	load   <
  MEM[ALU] -> ALU_RG
  TICK: 1076 PC:  54 ADDR:   0 MEM_OUT: 21 ACC: 1 LG_ALU: 3968 RG_ALU:  21 SP: 3967 ZF: 0 |	load   <
  ALU_RES = ALU_RG
  TICK: 1077 PC:  54 ADDR:   0 MEM_OUT: 21 ACC: 1 LG_ALU: 3968 RG_ALU:  21 SP: 3967 ZF: 0 |	load   <
  ALU_RES -> ACC
  TICK: 1078 PC:  54 ADDR:   0 MEM_OUT: 21 ACC: 21 LG_ALU: 3968 RG_ALU:  21 SP: 3967 ZF: 0 |	load   <
  ADDR -> ALU_RG
  TICK: 1079 PC:  55 ADDR:   0 MEM_OUT: 21 ACC: 21 LG_ALU: 3968 RG_ALU:   7 SP: 3967 ZF: 0 |	sub   <
  ALU_RES = ALU_RG
  TICK: 1080 PC:  55 ADDR:   0 MEM_OUT: 21 ACC: 21 LG_ALU: 3968 RG_ALU:   7 SP: 3967 ZF: 0 |	sub   <
  READ MEM[ALU]
  TICK: 1081 PC:  55 ADDR:   0 MEM_OUT: 400000 ACC: 21 LG_ALU: 3968 RG_ALU:   7 SP: 3967 ZF: 0 |	sub   <
  MEM[ALU] -> ALU_RG
  TICK: 1082 PC:  55 ADDR:   0 MEM_OUT: 400000 ACC: 21 LG_ALU: 3968 RG_ALU: 400000 SP: 3967 ZF: 0 |	sub   <
  ACC -> ALU_LG
  TICK: 1082 PC:  55 ADDR:   0 MEM_OUT: 400000 ACC: 21 LG_ALU:  21 RG_ALU: 400000 SP: 3967 ZF: 0 |	sub   <
  ALU_RES = ALU_LG + ALU_RG
  TICK: 1083 PC:  55 ADDR:   0 MEM_OUT: 400000 ACC: 21 LG_ALU:  21 RG_ALU: 400000 SP: 3967 ZF: 0 |	sub   <
  ALU_RES -> ACC
  TICK: 1084 PC:  55 ADDR:   0 MEM_OUT: 400000 ACC: -399979 LG_ALU:  21 RG_ALU: 400000 SP: 3967 ZF: 0 |	sub   <
  PC + 1 -> PC
  NUM -> ALU_RG
  TICK: 1085 PC:  57 ADDR:   0 MEM_OUT: 400000 ACC: -399979 LG_ALU:  21 RG_ALU:   1 SP: 3967 ZF: 0 |	load   <
  ALU_RES = ALU_RG
  TICK: 1086 PC:  57 ADDR:   0 MEM_OUT: 400000 ACC: -399979 LG_ALU:  21 RG_ALU:   1 SP: 3967 ZF: 0 |	load   <
  ALU_RES -> ACC
  TICK: 1087 PC:  57 ADDR:   0 MEM_OUT: 400000 ACC: 1 LG_ALU:  21 RG_ALU:   1 SP: 3967 ZF: 0 |	load   <
  ADDR -> PC
  SP -> ALU_LG
  TICK: 1089 PC:  60 ADDR:   0 MEM_OUT: 400000 ACC: 1 LG_ALU: 3967 RG_ALU:   1 SP: 3967 ZF: 0 |	push   <
  ALU_RES = SP - 1
  TICK: 1090 PC:  60 ADDR:   0 MEM_OUT: 400000 ACC: 1 LG_ALU: 3967 RG_ALU:   1 SP: 3967 ZF: 0 |	push   <
  ALU_RES -> SP
  TICK: 1091 PC:  60 ADDR:   0 MEM_OUT: 400000 ACC: 1 LG_ALU: 3967 RG_ALU:   1 SP: 3966 ZF: 0 |	push   <
  WRITE ACC -> MEM[ALU]
  TICK: 1091 PC:  60 ADDR:   0 MEM_OUT: 400000 ACC: 1 LG_ALU: 3967 RG_ALU:   1 SP: 3966 ZF: 0 |	push   <
  SP -> ALU_LG
  TICK: 1092 PC:  61 ADDR:   0 MEM_OUT: 400000 ACC: 1 LG_ALU: 3966 RG_ALU:   1 SP: 3966 ZF: 0 |	pop
  ALU_RES = ALU_LG
  TICK: 1093 PC:  61 ADDR:   0 MEM_OUT: 400000 ACC: 1 LG_ALU: 3966 RG_ALU:   1 SP: 3966 ZF: 0 |	pop
  READ MEM[ALU]
  TICK: 1094 PC:  61 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3966 RG_ALU:   1 SP: 3966 ZF: 0 |	pop
  ALU_RES = SP + 1
  TICK: 1095 PC:  61 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3966 RG_ALU:   1 SP: 3966 ZF: 0 |	pop
  ALU_RES -> SP
  TICK: 1096 PC:  61 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3966 RG_ALU:   1 SP: 3967 ZF: 0 |	pop
  MEM[ALU] -> ALU_RG
  TICK: 1096 PC:  61 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3966 RG_ALU:   1 SP: 3967 ZF: 0 |	pop
  ALU_RES = ALU_RG
  TICK: 1097 PC:  61 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3966 RG_ALU:   1 SP: 3967 ZF: 0 |	pop
  ALU_RES -> ACC
  TICK: 1098 PC:  61 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3966 RG_ALU:   1 SP: 3967 ZF: 0 |	pop
  ADDR -> PC
  ADDR -> PC
  ADDR -> ALU_RG
  TICK: 1101 PC:  24 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3966 RG_ALU:   6 SP: 3967 ZF: 0 |	load
  ALU_RES = ALU_RG
  TICK: 1102 PC:  24 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3966 RG_ALU:   6 SP: 3967 ZF: 0 |	load
  READ MEM[ALU]
  TICK: 1103 PC:  24 ADDR:   0 MEM_OUT: 21 ACC: 1 LG_ALU: 3966 RG_ALU:   6 SP: 3967 ZF: 0 |	load
  MEM[ALU] -> ALU_RG
  TICK: 1104 PC:  24 ADDR:   0 MEM_OUT: 21 ACC: 1 LG_ALU: 3966 RG_ALU:  21 SP: 3967 ZF: 0 |	load
  ALU_RES = ALU_RG
  TICK: 1105 PC:  24 ADDR:   0 MEM_OUT: 21 ACC: 1 LG_ALU: 3966 RG_ALU:  21 SP: 3967 ZF: 0 |	load
  ALU_RES -> ACC
  TICK: 1106 PC:  24 ADDR:   0 MEM_OUT: 21 ACC: 21 LG_ALU: 3966 RG_ALU:  21 SP: 3967 ZF: 0 |	load
  NUM -> ALU_RG
  TICK: 1107 PC:  25 ADDR:   0 MEM_OUT: 21 ACC: 21 LG_ALU: 3966 RG_ALU:   2 SP: 3967 ZF: 0 |	mod
  ACC -> ALU_LG
  TICK: 1107 PC:  25 ADDR:   0 MEM_OUT: 21 ACC: 21 LG_ALU:  21 RG_ALU:   2 SP: 3967 ZF: 0 |	mod
  ALU_RES = ALU_LG % ALU_RG
  TICK: 1108 PC:  25 ADDR:   0 MEM_OUT: 21 ACC: 21 LG_ALU:  21 RG_ALU:   2 SP: 3967 ZF: 0 |	mod
  ALU_RES -> ACC
  TICK: 1109 PC:  25 ADDR:   0 MEM_OUT: 21 ACC: 1 LG_ALU:  21 RG_ALU:   2 SP: 3967 ZF: 0 |	mod
  SP -> ALU_LG
  TICK: 1110 PC:  26 ADDR:   0 MEM_OUT: 21 ACC: 1 LG_ALU: 3967 RG_ALU:   2 SP: 3967 ZF: 0 |	push
  ALU_RES = SP - 1
  TICK: 1111 PC:  26 ADDR:   0 MEM_OUT: 21 ACC: 1 LG_ALU: 3967 RG_ALU:   2 SP: 3967 ZF: 0 |	push
  ALU_RES -> SP
  TICK: 1112 PC:  26 ADDR:   0 MEM_OUT: 21 ACC: 1 LG_ALU: 3967 RG_ALU:   2 SP: 3966 ZF: 0 |	push
  WRITE ACC -> MEM[ALU]
  TICK: 1112 PC:  26 ADDR:   0 MEM_OUT: 21 ACC: 1 LG_ALU: 3967 RG_ALU:   2 SP: 3966 ZF: 0 |	push
  NUM -> ALU_RG
  TICK: 1113 PC:  27 ADDR:   0 MEM_OUT: 21 ACC: 1 LG_ALU: 3967 RG_ALU:   0 SP: 3966 ZF: 0 |	load   =
  ALU_RES = ALU_RG
  TICK: 1114 PC:  27 ADDR:   0 MEM_OUT: 21 ACC: 1 LG_ALU: 3967 RG_ALU:   0 SP: 3966 ZF: 1 |	load   =
  ALU_RES -> ACC
  TICK: 1115 PC:  27 ADDR:   0 MEM_OUT: 21 ACC: 0 LG_ALU: 3967 RG_ALU:   0 SP: 3966 ZF: 1 |	load   =
  SP -> ALU_LG
  TICK: 1116 PC:  28 ADDR:   0 MEM_OUT: 21 ACC: 0 LG_ALU: 3966 RG_ALU:   0 SP: 3966 ZF: 1 |	sub   =
  ALU_RES = ALU_LG
  TICK: 1117 PC:  28 ADDR:   0 MEM_OUT: 21 ACC: 0 LG_ALU: 3966 RG_ALU:   0 SP: 3966 ZF: 0 |	sub   =
  READ MEM[ALU]
  TICK: 1118 PC:  28 ADDR:   0 MEM_OUT: 1 ACC: 0 LG_ALU: 3966 RG_ALU:   0 SP: 3966 ZF: 0 |	sub   =
  MEM[ALU] -> ALU_RG
  TICK: 1119 PC:  28 ADDR:   0 MEM_OUT: 1 ACC: 0 LG_ALU: 3966 RG_ALU:   1 SP: 3966 ZF: 0 |	sub   =
  ALU_RES = SP + 1
  TICK: 1120 PC:  28 ADDR:   0 MEM_OUT: 1 ACC: 0 LG_ALU: 3966 RG_ALU:   1 SP: 3966 ZF: 0 |	sub   =
  ALU_RES -> SP
  TICK: 1121 PC:  28 ADDR:   0 MEM_OUT: 1 ACC: 0 LG_ALU: 3966 RG_ALU:   1 SP: 3967 ZF: 0 |	sub   =
  ACC -> ALU_LG
  TICK: 1121 PC:  28 ADDR:   0 MEM_OUT: 1 ACC: 0 LG_ALU:   0 RG_ALU:   1 SP: 3967 ZF: 0 |	sub   =
  ALU_RES = ALU_LG + ALU_RG
  TICK: 1122 PC:  28 ADDR:   0 MEM_OUT: 1 ACC: 0 LG_ALU:   0 RG_ALU:   1 SP: 3967 ZF: 0 |	sub   =
  ALU_RES -> ACC
  TICK: 1123 PC:  28 ADDR:   0 MEM_OUT: 1 ACC: -1 LG_ALU:   0 RG_ALU:   1 SP: 3967 ZF: 0 |	sub   =
  ADDR -> PC
  NUM -> ALU_RG
  TICK: 1125 PC:  32 ADDR:   0 MEM_OUT: 1 ACC: -1 LG_ALU:   0 RG_ALU:   0 SP: 3967 ZF: 0 |	load   =
  ALU_RES = ALU_RG
  TICK: 1126 PC:  32 ADDR:   0 MEM_OUT: 1 ACC: -1 LG_ALU:   0 RG_ALU:   0 SP: 3967 ZF: 1 |	load   =
  ALU_RES -> ACC
  TICK: 1127 PC:  32 ADDR:   0 MEM_OUT: 1 ACC: 0 LG_ALU:   0 RG_ALU:   0 SP: 3967 ZF: 1 |	load   =
  SP -> ALU_LG
  TICK: 1128 PC:  33 ADDR:   0 MEM_OUT: 1 ACC: 0 LG_ALU: 3967 RG_ALU:   0 SP: 3967 ZF: 1 |	push   =
  ALU_RES = SP - 1
  TICK: 1129 PC:  33 ADDR:   0 MEM_OUT: 1 ACC: 0 LG_ALU: 3967 RG_ALU:   0 SP: 3967 ZF: 0 |	push   =
  ALU_RES -> SP
  TICK: 1130 PC:  33 ADDR:   0 MEM_OUT: 1 ACC: 0 LG_ALU: 3967 RG_ALU:   0 SP: 3966 ZF: 0 |	push   =
  WRITE ACC -> MEM[ALU]
  TICK: 1130 PC:  33 ADDR:   0 MEM_OUT: 1 ACC: 0 LG_ALU: 3967 RG_ALU:   0 SP: 3966 ZF: 0 |	push   =
  SP -> ALU_LG
  TICK: 1131 PC:  34 ADDR:   0 MEM_OUT: 1 ACC: 0 LG_ALU: 3966 RG_ALU:   0 SP: 3966 ZF: 0 |	pop   if
  ALU_RES = ALU_LG
  TICK: 1132 PC:  34 ADDR:   0 MEM_OUT: 1 ACC: 0 LG_ALU: 3966 RG_ALU:   0 SP: 3966 ZF: 0 |	pop   if
  READ MEM[ALU]
  TICK: 1133 PC:  34 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3966 RG_ALU:   0 SP: 3966 ZF: 0 |	pop   if
  ALU_RES = SP + 1
  TICK: 1134 PC:  34 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3966 RG_ALU:   0 SP: 3966 ZF: 0 |	pop   if
  ALU_RES -> SP
  TICK: 1135 PC:  34 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3966 RG_ALU:   0 SP: 3967 ZF: 0 |	pop   if
  MEM[ALU] -> ALU_RG
  TICK: 1135 PC:  34 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3966 RG_ALU:   0 SP: 3967 ZF: 0 |	pop   if
  ALU_RES = ALU_RG
  TICK: 1136 PC:  34 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3966 RG_ALU:   0 SP: 3967 ZF: 1 |	pop   if
  ALU_RES -> ACC
  TICK: 1137 PC:  34 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3966 RG_ALU:   0 SP: 3967 ZF: 1 |	pop   if
  PC + 1 -> PC
  ADDR -> PC
  NUM -> ALU_RG
  TICK: 1139 PC:  20 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3966 RG_ALU:   0 SP: 3967 ZF: 1 |	load   +
  ALU_RES = ALU_RG
  TICK: 1140 PC:  20 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3966 RG_ALU:   0 SP: 3967 ZF: 1 |	load   +
  ALU_RES -> ACC
  TICK: 1141 PC:  20 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3966 RG_ALU:   0 SP: 3967 ZF: 1 |	load   +
  NUM -> ALU_RG
  TICK: 1142 PC:  21 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3966 RG_ALU:   0 SP: 3967 ZF: 1 |	add   +
  ACC -> ALU_LG
  TICK: 1142 PC:  21 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU:   0 RG_ALU:   0 SP: 3967 ZF: 1 |	add   +
  ALU_RES = ALU_LG + ALU_RG
  TICK: 1143 PC:  21 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU:   0 RG_ALU:   0 SP: 3967 ZF: 1 |	add   +
  ALU_RES -> ACC
  TICK: 1144 PC:  21 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU:   0 RG_ALU:   0 SP: 3967 ZF: 1 |	add   +
  SP -> ALU_LG
  TICK: 1145 PC:  22 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3967 RG_ALU:   0 SP: 3967 ZF: 1 |	push   +
  ALU_RES = SP - 1
  TICK: 1146 PC:  22 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3967 RG_ALU:   0 SP: 3967 ZF: 0 |	push   +
  ALU_RES -> SP
  TICK: 1147 PC:  22 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3967 RG_ALU:   0 SP: 3966 ZF: 0 |	push   +
  WRITE ACC -> MEM[ALU]
  TICK: 1147 PC:  22 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3967 RG_ALU:   0 SP: 3966 ZF: 0 |	push   +
  ADDR -> PC
  SP -> ALU_LG
  TICK: 1149 PC:  37 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3966 RG_ALU:   0 SP: 3966 ZF: 0 |	pop   if
  ALU_RES = ALU_LG
  TICK: 1150 PC:  37 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3966 RG_ALU:   0 SP: 3966 ZF: 0 |	pop   if
  READ MEM[ALU]
  TICK: 1151 PC:  37 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3966 RG_ALU:   0 SP: 3966 ZF: 0 |	pop   if
  ALU_RES = SP + 1
  TICK: 1152 PC:  37 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3966 RG_ALU:   0 SP: 3966 ZF: 0 |	pop   if
  ALU_RES -> SP
  TICK: 1153 PC:  37 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3966 RG_ALU:   0 SP: 3967 ZF: 0 |	pop   if
  MEM[ALU] -> ALU_RG
  TICK: 1153 PC:  37 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3966 RG_ALU:   0 SP: 3967 ZF: 0 |	pop   if
  ALU_RES = ALU_RG
  TICK: 1154 PC:  37 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3966 RG_ALU:   0 SP: 3967 ZF: 1 |	pop   if
  ALU_RES -> ACC
  TICK: 1155 PC:  37 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3966 RG_ALU:   0 SP: 3967 ZF: 1 |	pop   if
  SP -> ALU_LG
  TICK: 1156 PC:  38 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3967 RG_ALU:   0 SP: 3967 ZF: 1 |	push   if
  ALU_RES = SP - 1
  TICK: 1157 PC:  38 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3967 RG_ALU:   0 SP: 3967 ZF: 0 |	push   if
  ALU_RES -> SP
  TICK: 1158 PC:  38 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3967 RG_ALU:   0 SP: 3966 ZF: 0 |	push   if
  WRITE ACC -> MEM[ALU]
  TICK: 1158 PC:  38 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3967 RG_ALU:   0 SP: 3966 ZF: 0 |	push   if
  ADDR -> ALU_RG
  TICK: 1159 PC:  39 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3967 RG_ALU:   6 SP: 3966 ZF: 0 |	load   var
  ALU_RES = ALU_RG
  TICK: 1160 PC:  39 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3967 RG_ALU:   6 SP: 3966 ZF: 0 |	load   var
  READ MEM[ALU]
  TICK: 1161 PC:  39 ADDR:   0 MEM_OUT: 21 ACC: 0 LG_ALU: 3967 RG_ALU:   6 SP: 3966 ZF: 0 |	load   var
  MEM[ALU] -> ALU_RG
  TICK: 1162 PC:  39 ADDR:   0 MEM_OUT: 21 ACC: 0 LG_ALU: 3967 RG_ALU:  21 SP: 3966 ZF: 0 |	load   var
  ALU_RES = ALU_RG
  TICK: 1163 PC:  39 ADDR:   0 MEM_OUT: 21 ACC: 0 LG_ALU: 3967 RG_ALU:  21 SP: 3966 ZF: 0 |	load   var
  ALU_RES -> ACC
  TICK: 1164 PC:  39 ADDR:   0 MEM_OUT: 21 ACC: 21 LG_ALU: 3967 RG_ALU:  21 SP: 3966 ZF: 0 |	load   var
  ADDR -> ALU_RG
  TICK: 1165 PC:  40 ADDR:   0 MEM_OUT: 21 ACC: 21 LG_ALU: 3967 RG_ALU:   8 SP: 3966 ZF: 0 |	store   var
  ALU_RES = ALU_RG
  TICK: 1166 PC:  40 ADDR:   0 MEM_OUT: 21 ACC: 21 LG_ALU: 3967 RG_ALU:   8 SP: 3966 ZF: 0 |	store   var
  WRITE ACC -> MEM[ALU]
  TICK: 1167 PC:  40 ADDR:   0 MEM_OUT: 21 ACC: 21 LG_ALU: 3967 RG_ALU:   8 SP: 3966 ZF: 0 |	store   var
  NUM -> ALU_RG
  TICK: 1168 PC:  41 ADDR:   0 MEM_OUT: 21 ACC: 21 LG_ALU: 3967 RG_ALU:   1 SP: 3966 ZF: 0 |	load   var
  ALU_RES = ALU_RG
  TICK: 1169 PC:  41 ADDR:   0 MEM_OUT: 21 ACC: 21 LG_ALU: 3967 RG_ALU:   1 SP: 3966 ZF: 0 |	load   var
  ALU_RES -> ACC
  TICK: 1170 PC:  41 ADDR:   0 MEM_OUT: 21 ACC: 1 LG_ALU: 3967 RG_ALU:   1 SP: 3966 ZF: 0 |	load   var
  SP -> ALU_LG
  TICK: 1171 PC:  42 ADDR:   0 MEM_OUT: 21 ACC: 1 LG_ALU: 3966 RG_ALU:   1 SP: 3966 ZF: 0 |	push   var
  ALU_RES = SP - 1
  TICK: 1172 PC:  42 ADDR:   0 MEM_OUT: 21 ACC: 1 LG_ALU: 3966 RG_ALU:   1 SP: 3966 ZF: 0 |	push   var
  ALU_RES -> SP
  TICK: 1173 PC:  42 ADDR:   0 MEM_OUT: 21 ACC: 1 LG_ALU: 3966 RG_ALU:   1 SP: 3965 ZF: 0 |	push   var
  WRITE ACC -> MEM[ALU]
  TICK: 1173 PC:  42 ADDR:   0 MEM_OUT: 21 ACC: 1 LG_ALU: 3966 RG_ALU:   1 SP: 3965 ZF: 0 |	push   var
  ADDR -> ALU_RG
  TICK: 1174 PC:  43 ADDR:   0 MEM_OUT: 21 ACC: 1 LG_ALU: 3966 RG_ALU:   5 SP: 3965 ZF: 0 |	load   +
  ALU_RES = ALU_RG
  TICK: 1175 PC:  43 ADDR:   0 MEM_OUT: 21 ACC: 1 LG_ALU: 3966 RG_ALU:   5 SP: 3965 ZF: 0 |	load   +
  READ MEM[ALU]
  TICK: 1176 PC:  43 ADDR:   0 MEM_OUT: 13 ACC: 1 LG_ALU: 3966 RG_ALU:   5 SP: 3965 ZF: 0 |	load   +
  MEM[ALU] -> ALU_RG
  TICK: 1177 PC:  43 ADDR:   0 MEM_OUT: 13 ACC: 1 LG_ALU: 3966 RG_ALU:  13 SP: 3965 ZF: 0 |	load   +
  ALU_RES = ALU_RG
  TICK: 1178 PC:  43 ADDR:   0 MEM_OUT: 13 ACC: 1 LG_ALU: 3966 RG_ALU:  13 SP: 3965 ZF: 0 |	load   +
  ALU_RES -> ACC
  TICK: 1179 PC:  43 ADDR:   0 MEM_OUT: 13 ACC: 13 LG_ALU: 3966 RG_ALU:  13 SP: 3965 ZF: 0 |	load   +
  ADDR -> ALU_RG
  TICK: 1180 PC:  44 ADDR:   0 MEM_OUT: 13 ACC: 13 LG_ALU: 3966 RG_ALU:   6 SP: 3965 ZF: 0 |	add   +
  ALU_RES = ALU_RG
  TICK: 1181 PC:  44 ADDR:   0 MEM_OUT: 13 ACC: 13 LG_ALU: 3966 RG_ALU:   6 SP: 3965 ZF: 0 |	add   +
  READ MEM[ALU]
  TICK: 1182 PC:  44 ADDR:   0 MEM_OUT: 21 ACC: 13 LG_ALU: 3966 RG_ALU:   6 SP: 3965 ZF: 0 |	add   +
  MEM[ALU] -> ALU_RG
  TICK: 1183 PC:  44 ADDR:   0 MEM_OUT: 21 ACC: 13 LG_ALU: 3966 RG_ALU:  21 SP: 3965 ZF: 0 |	add   +
  ACC -> ALU_LG
  TICK: 1183 PC:  44 ADDR:   0 MEM_OUT: 21 ACC: 13 LG_ALU:  13 RG_ALU:  21 SP: 3965 ZF: 0 |	add   +
  ALU_RES = ALU_LG + ALU_RG
  TICK: 1184 PC:  44 ADDR:   0 MEM_OUT: 21 ACC: 13 LG_ALU:  13 RG_ALU:  21 SP: 3965 ZF: 0 |	add   +
  ALU_RES -> ACC
  TICK: 1185 PC:  44 ADDR:   0 MEM_OUT: 21 ACC: 34 LG_ALU:  13 RG_ALU:  21 SP: 3965 ZF: 0 |	add   +
  SP -> ALU_LG
  TICK: 1186 PC:  45 ADDR:   0 MEM_OUT: 21 ACC: 34 LG_ALU: 3965 RG_ALU:  21 SP: 3965 ZF: 0 |	push   +
  ALU_RES = SP - 1
  TICK: 1187 PC:  45 ADDR:   0 MEM_OUT: 21 ACC: 34 LG_ALU: 3965 RG_ALU:  21 SP: 3965 ZF: 0 |	push   +
  ALU_RES -> SP
  TICK: 1188 PC:  45 ADDR:   0 MEM_OUT: 21 ACC: 34 LG_ALU: 3965 RG_ALU:  21 SP: 3964 ZF: 0 |	push   +
  WRITE ACC -> MEM[ALU]
  TICK: 1188 PC:  45 ADDR:   0 MEM_OUT: 21 ACC: 34 LG_ALU: 3965 RG_ALU:  21 SP: 3964 ZF: 0 |	push   +
  SP -> ALU_LG
  TICK: 1189 PC:  46 ADDR:   0 MEM_OUT: 21 ACC: 34 LG_ALU: 3964 RG_ALU:  21 SP: 3964 ZF: 0 |	pop   var
  ALU_RES = ALU_LG
  TICK: 1190 PC:  46 ADDR:   0 MEM_OUT: 21 ACC: 34 LG_ALU: 3964 RG_ALU:  21 SP: 3964 ZF: 0 |	pop   var
  READ MEM[ALU]
  TICK: 1191 PC:  46 ADDR:   0 MEM_OUT: 34 ACC: 34 LG_ALU: 3964 RG_ALU:  21 SP: 3964 ZF: 0 |	pop   var
  ALU_RES = SP + 1
  TICK: 1192 PC:  46 ADDR:   0 MEM_OUT: 34 ACC: 34 LG_ALU: 3964 RG_ALU:  21 SP: 3964 ZF: 0 |	pop   var
  ALU_RES -> SP
  TICK: 1193 PC:  46 ADDR:   0 MEM_OUT: 34 ACC: 34 LG_ALU: 3964 RG_ALU:  21 SP: 3965 ZF: 0 |	pop   var
  MEM[ALU] -> ALU_RG
  TICK: 1193 PC:  46 ADDR:   0 MEM_OUT: 34 ACC: 34 LG_ALU: 3964 RG_ALU:  34 SP: 3965 ZF: 0 |	pop   var
  ALU_RES = ALU_RG
  TICK: 1194 PC:  46 ADDR:   0 MEM_OUT: 34 ACC: 34 LG_ALU: 3964 RG_ALU:  34 SP: 3965 ZF: 0 |	pop   var
  ALU_RES -> ACC
  TICK: 1195 PC:  46 ADDR:   0 MEM_OUT: 34 ACC: 34 LG_ALU: 3964 RG_ALU:  34 SP: 3965 ZF: 0 |	pop   var
  ADDR -> ALU_RG
  TICK: 1196 PC:  47 ADDR:   0 MEM_OUT: 34 ACC: 34 LG_ALU: 3964 RG_ALU:   6 SP: 3965 ZF: 0 |	store   var
  ALU_RES = ALU_RG
  TICK: 1197 PC:  47 ADDR:   0 MEM_OUT: 34 ACC: 34 LG_ALU: 3964 RG_ALU:   6 SP: 3965 ZF: 0 |	store   var
  WRITE ACC -> MEM[ALU]
  TICK: 1198 PC:  47 ADDR:   0 MEM_OUT: 34 ACC: 34 LG_ALU: 3964 RG_ALU:   6 SP: 3965 ZF: 0 |	store   var
  NUM -> ALU_RG
  TICK: 1199 PC:  48 ADDR:   0 MEM_OUT: 34 ACC: 34 LG_ALU: 3964 RG_ALU:   1 SP: 3965 ZF: 0 |	load   var
  ALU_RES = ALU_RG
  TICK: 1200 PC:  48 ADDR:   0 MEM_OUT: 34 ACC: 34 LG_ALU: 3964 RG_ALU:   1 SP: 3965 ZF: 0 |	load   var
  ALU_RES -> ACC
  TICK: 1201 PC:  48 ADDR:   0 MEM_OUT: 34 ACC: 1 LG_ALU: 3964 RG_ALU:   1 SP: 3965 ZF: 0 |	load   var
  SP -> ALU_LG
  TICK: 1202 PC:  49 ADDR:   0 MEM_OUT: 34 ACC: 1 LG_ALU: 3965 RG_ALU:   1 SP: 3965 ZF: 0 |	push   var
  ALU_RES = SP - 1
  TICK: 1203 PC:  49 ADDR:   0 MEM_OUT: 34 ACC: 1 LG_ALU: 3965 RG_ALU:   1 SP: 3965 ZF: 0 |	push   var
  ALU_RES -> SP
  TICK: 1204 PC:  49 ADDR:   0 MEM_OUT: 34 ACC: 1 LG_ALU: 3965 RG_ALU:   1 SP: 3964 ZF: 0 |	push   var
  WRITE ACC -> MEM[ALU]
  TICK: 1204 PC:  49 ADDR:   0 MEM_OUT: 34 ACC: 1 LG_ALU: 3965 RG_ALU:   1 SP: 3964 ZF: 0 |	push   var
  ADDR -> ALU_RG
  TICK: 1205 PC:  50 ADDR:   0 MEM_OUT: 34 ACC: 1 LG_ALU: 3965 RG_ALU:   8 SP: 3964 ZF: 0 |	load   var
  ALU_RES = ALU_RG
  TICK: 1206 PC:  50 ADDR:   0 MEM_OUT: 34 ACC: 1 LG_ALU: 3965 RG_ALU:   8 SP: 3964 ZF: 0 |	load   var
  READ MEM[ALU]
  TICK: 1207 PC:  50 ADDR:   0 MEM_OUT: 21 ACC: 1 LG_ALU: 3965 RG_ALU:   8 SP: 3964 ZF: 0 |	load   var
  MEM[ALU] -> ALU_RG
  TICK: 1208 PC:  50 ADDR:   0 MEM_OUT: 21 ACC: 1 LG_ALU: 3965 RG_ALU:  21 SP: 3964 ZF: 0 |	load   var
  ALU_RES = ALU_RG
  TICK: 1209 PC:  50 ADDR:   0 MEM_OUT: 21 ACC: 1 LG_ALU: 3965 RG_ALU:  21 SP: 3964 ZF: 0 |	load   var
  ALU_RES -> ACC
  TICK: 1210 PC:  50 ADDR:   0 MEM_OUT: 21 ACC: 21 LG_ALU: 3965 RG_ALU:  21 SP: 3964 ZF: 0 |	load   var
  ADDR -> ALU_RG
  TICK: 1211 PC:  51 ADDR:   0 MEM_OUT: 21 ACC: 21 LG_ALU: 3965 RG_ALU:   5 SP: 3964 ZF: 0 |	store   var
  ALU_RES = ALU_RG
  TICK: 1212 PC:  51 ADDR:   0 MEM_OUT: 21 ACC: 21 LG_ALU: 3965 RG_ALU:   5 SP: 3964 ZF: 0 |	store   var
  WRITE ACC -> MEM[ALU]
  TICK: 1213 PC:  51 ADDR:   0 MEM_OUT: 21 ACC: 21 LG_ALU: 3965 RG_ALU:   5 SP: 3964 ZF: 0 |	store   var
  NUM -> ALU_RG
  TICK: 1214 PC:  52 ADDR:   0 MEM_OUT: 21 ACC: 21 LG_ALU: 3965 RG_ALU:   1 SP: 3964 ZF: 0 |	load   var
  ALU_RES = ALU_RG
  TICK: 1215 PC:  52 ADDR:   0 MEM_OUT: 21 ACC: 21 LG_ALU: 3965 RG_ALU:   1 SP: 3964 ZF: 0 |	load   var
  ALU_RES -> ACC
  TICK: 1216 PC:  52 ADDR:   0 MEM_OUT: 21 ACC: 1 LG_ALU: 3965 RG_ALU:   1 SP: 3964 ZF: 0 |	load   var
  SP -> ALU_LG
  TICK: 1217 PC:  53 ADDR:   0 MEM_OUT: 21 ACC: 1 LG_ALU: 3964 RG_ALU:   1 SP: 3964 ZF: 0 |	push   var
  ALU_RES = SP - 1
  TICK: 1218 PC:  53 ADDR:   0 MEM_OUT: 21 ACC: 1 LG_ALU: 3964 RG_ALU:   1 SP: 3964 ZF: 0 |	push   var
  ALU_RES -> SP
  TICK: 1219 PC:  53 ADDR:   0 MEM_OUT: 21 ACC: 1 LG_ALU: 3964 RG_ALU:   1 SP: 3963 ZF: 0 |	push   var
  WRITE ACC -> MEM[ALU]
  TICK: 1219 PC:  53 ADDR:   0 MEM_OUT: 21 ACC: 1 LG_ALU: 3964 RG_ALU:   1 SP: 3963 ZF: 0 |	push   var
  ADDR -> ALU_RG
  TICK: 1220 PC:  54 ADDR:   0 MEM_OUT: 21 ACC: 1 LG_ALU: 3964 RG_ALU:   6 SP: 3963 ZF: 0 |	load   <
  ALU_RES = ALU_RG
  TICK: 1221 PC:  54 ADDR:   0 MEM_OUT: 21 ACC: 1 LG_ALU: 3964 RG_ALU:   6 SP: 3963 ZF: 0 |	load   <
  READ MEM[ALU]
  TICK: 1222 PC:  54 ADDR:   0 MEM_OUT: 34 ACC: 1 LG_ALU: 3964 RG_ALU:   6 SP: 3963 ZF: 0 |	load   <
  MEM[ALU] -> ALU_RG
  TICK: 1223 PC:  54 ADDR:   0 MEM_OUT: 34 ACC: 1 LG_ALU: 3964 RG_ALU:  34 SP: 3963 ZF: 0 |	load   <
  ALU_RES = ALU_RG
  TICK: 1224 PC:  54 ADDR:   0 MEM_OUT: 34 ACC: 1 LG_ALU: 3964 RG_ALU:  34 SP: 3963 ZF: 0 |	load   <
  ALU_RES -> ACC
  TICK: 1225 PC:  54 ADDR:   0 MEM_OUT: 34 ACC: 34 LG_ALU: 3964 RG_ALU:  34 SP: 3963 ZF: 0 |	load   <
  ADDR -> ALU_RG
  TICK: 1226 PC:  55 ADDR:   0 MEM_OUT: 34 ACC: 34 LG_ALU: 3964 RG_ALU:   7 SP: 3963 ZF: 0 |	sub   <
  ALU_RES = ALU_RG
  TICK: 1227 PC:  55 ADDR:   0 MEM_OUT: 34 ACC: 34 LG_ALU: 3964 RG_ALU:   7 SP: 3963 ZF: 0 |	sub   <
  READ MEM[ALU]
  TICK: 1228 PC:  55 ADDR:   0 MEM_OUT: 400000 ACC: 34 LG_ALU: 3964 RG_ALU:   7 SP: 3963 ZF: 0 |	sub   <
  MEM[ALU] -> ALU_RG
  TICK: 1229 PC:  55 ADDR:   0 MEM_OUT: 400000 ACC: 34 LG_ALU: 3964 RG_ALU: 400000 SP: 3963 ZF: 0 |	sub   <
  ACC -> ALU_LG
  TICK: 1229 PC:  55 ADDR:   0 MEM_OUT: 400000 ACC: 34 LG_ALU:  34 RG_ALU: 400000 SP: 3963 ZF: 0 |	sub   <
  ALU_RES = ALU_LG + ALU_RG
  TICK: 1230 PC:  55 ADDR:   0 MEM_OUT: 400000 ACC: 34 LG_ALU:  34 RG_ALU: 400000 SP: 3963 ZF: 0 |	sub   <
  ALU_RES -> ACC
  TICK: 1231 PC:  55 ADDR:   0 MEM_OUT: 400000 ACC: -399966 LG_ALU:  34 RG_ALU: 400000 SP: 3963 ZF: 0 |	sub   <
  PC + 1 -> PC
  NUM -> ALU_RG
  TICK: 1232 PC:  57 ADDR:   0 MEM_OUT: 400000 ACC: -399966 LG_ALU:  34 RG_ALU:   1 SP: 3963 ZF: 0 |	load   <
  ALU_RES = ALU_RG
  TICK: 1233 PC:  57 ADDR:   0 MEM_OUT: 400000 ACC: -399966 LG_ALU:  34 RG_ALU:   1 SP: 3963 ZF: 0 |	load   <
  ALU_RES -> ACC
  TICK: 1234 PC:  57 ADDR:   0 MEM_OUT: 400000 ACC: 1 LG_ALU:  34 RG_ALU:   1 SP: 3963 ZF: 0 |	load   <
  ADDR -> PC
  SP -> ALU_LG
  TICK: 1236 PC:  60 ADDR:   0 MEM_OUT: 400000 ACC: 1 LG_ALU: 3963 RG_ALU:   1 SP: 3963 ZF: 0 |	push   <
  ALU_RES = SP - 1
  TICK: 1237 PC:  60 ADDR:   0 MEM_OUT: 400000 ACC: 1 LG_ALU: 3963 RG_ALU:   1 SP: 3963 ZF: 0 |	push   <
  ALU_RES -> SP
  TICK: 1238 PC:  60 ADDR:   0 MEM_OUT: 400000 ACC: 1 LG_ALU: 3963 RG_ALU:   1 SP: 3962 ZF: 0 |	push   <
  WRITE ACC -> MEM[ALU]
  TICK: 1238 PC:  60 ADDR:   0 MEM_OUT: 400000 ACC: 1 LG_ALU: 3963 RG_ALU:   1 SP: 3962 ZF: 0 |	push   <
  SP -> ALU_LG
  TICK: 1239 PC:  61 ADDR:   0 MEM_OUT: 400000 ACC: 1 LG_ALU: 3962 RG_ALU:   1 SP: 3962 ZF: 0 |	pop
  ALU_RES = ALU_LG
  TICK: 1240 PC:  61 ADDR:   0 MEM_OUT: 400000 ACC: 1 LG_ALU: 3962 RG_ALU:   1 SP: 3962 ZF: 0 |	pop
  READ MEM[ALU]
  TICK: 1241 PC:  61 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3962 RG_ALU:   1 SP: 3962 ZF: 0 |	pop
  ALU_RES = SP + 1
  TICK: 1242 PC:  61 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3962 RG_ALU:   1 SP: 3962 ZF: 0 |	pop
  ALU_RES -> SP
  TICK: 1243 PC:  61 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3962 RG_ALU:   1 SP: 3963 ZF: 0 |	pop
  MEM[ALU] -> ALU_RG
  TICK: 1243 PC:  61 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3962 RG_ALU:   1 SP: 3963 ZF: 0 |	pop
  ALU_RES = ALU_RG
  TICK: 1244 PC:  61 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3962 RG_ALU:   1 SP: 3963 ZF: 0 |	pop
  ALU_RES -> ACC
  TICK: 1245 PC:  61 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3962 RG_ALU:   1 SP: 3963 ZF: 0 |	pop
  ADDR -> PC
  ADDR -> PC
  ADDR -> ALU_RG
  TICK: 1248 PC:  24 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3962 RG_ALU:   6 SP: 3963 ZF: 0 |	load
  ALU_RES = ALU_RG
  TICK: 1249 PC:  24 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3962 RG_ALU:   6 SP: 3963 ZF: 0 |	load
  READ MEM[ALU]
  TICK: 1250 PC:  24 ADDR:   0 MEM_OUT: 34 ACC: 1 LG_ALU: 3962 RG_ALU:   6 SP: 3963 ZF: 0 |	load
  MEM[ALU] -> ALU_RG
  TICK: 1251 PC:  24 ADDR:   0 MEM_OUT: 34 ACC: 1 LG_ALU: 3962 RG_ALU:  34 SP: 3963 ZF: 0 |	load
  ALU_RES = ALU_RG
  TICK: 1252 PC:  24 ADDR:   0 MEM_OUT: 34 ACC: 1 LG_ALU: 3962 RG_ALU:  34 SP: 3963 ZF: 0 |	load
  ALU_RES -> ACC
  TICK: 1253 PC:  24 ADDR:   0 MEM_OUT: 34 ACC: 34 LG_ALU: 3962 RG_ALU:  34 SP: 3963 ZF: 0 |	load
  NUM -> ALU_RG
  TICK: 1254 PC:  25 ADDR:   0 MEM_OUT: 34 ACC: 34 LG_ALU: 3962 RG_ALU:   2 SP: 3963 ZF: 0 |	mod
  ACC -> ALU_LG
  TICK: 1254 PC:  25 ADDR:   0 MEM_OUT: 34 ACC: 34 LG_ALU:  34 RG_ALU:   2 SP: 3963 ZF: 0 |	mod
  ALU_RES = ALU_LG % ALU_RG
  TICK: 1255 PC:  25 ADDR:   0 MEM_OUT: 34 ACC: 34 LG_ALU:  34 RG_ALU:   2 SP: 3963 ZF: 1 |	mod
  ALU_RES -> ACC
  TICK: 1256 PC:  25 ADDR:   0 MEM_OUT: 34 ACC: 0 LG_ALU:  34 RG_ALU:   2 SP: 3963 ZF: 1 |	mod
  SP -> ALU_LG
  TICK: 1257 PC:  26 ADDR:   0 MEM_OUT: 34 ACC: 0 LG_ALU: 3963 RG_ALU:   2 SP: 3963 ZF: 1 |	push
  ALU_RES = SP - 1
  TICK: 1258 PC:  26 ADDR:   0 MEM_OUT: 34 ACC: 0 LG_ALU: 3963 RG_ALU:   2 SP: 3963 ZF: 0 |	push
  ALU_RES -> SP
  TICK: 1259 PC:  26 ADDR:   0 MEM_OUT: 34 ACC: 0 LG_ALU: 3963 RG_ALU:   2 SP: 3962 ZF: 0 |	push
  WRITE ACC -> MEM[ALU]
  TICK: 1259 PC:  26 ADDR:   0 MEM_OUT: 34 ACC: 0 LG_ALU: 3963 RG_ALU:   2 SP: 3962 ZF: 0 |	push
  NUM -> ALU_RG
  TICK: 1260 PC:  27 ADDR:   0 MEM_OUT: 34 ACC: 0 LG_ALU: 3963 RG_ALU:   0 SP: 3962 ZF: 0 |	load   =
  ALU_RES = ALU_RG
  TICK: 1261 PC:  27 ADDR:   0 MEM_OUT: 34 ACC: 0 LG_ALU: 3963 RG_ALU:   0 SP: 3962 ZF: 1 |	load   =
  ALU_RES -> ACC
  TICK: 1262 PC:  27 ADDR:   0 MEM_OUT: 34 ACC: 0 LG_ALU: 3963 RG_ALU:   0 SP: 3962 ZF: 1 |	load   =
  SP -> ALU_LG
  TICK: 1263 PC:  28 ADDR:   0 MEM_OUT: 34 ACC: 0 LG_ALU: 3962 RG_ALU:   0 SP: 3962 ZF: 1 |	sub   =
  ALU_RES = ALU_LG
  TICK: 1264 PC:  28 ADDR:   0 MEM_OUT: 34 ACC: 0 LG_ALU: 3962 RG_ALU:   0 SP: 3962 ZF: 0 |	sub   =
  READ MEM[ALU]
  TICK: 1265 PC:  28 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3962 RG_ALU:   0 SP: 3962 ZF: 0 |	sub   =
  MEM[ALU] -> ALU_RG
  TICK: 1266 PC:  28 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3962 RG_ALU:   0 SP: 3962 ZF: 0 |	sub   =
  ALU_RES = SP + 1
  TICK: 1267 PC:  28 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3962 RG_ALU:   0 SP: 3962 ZF: 0 |	sub   =
  ALU_RES -> SP
  TICK: 1268 PC:  28 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3962 RG_ALU:   0 SP: 3963 ZF: 0 |	sub   =
  ACC -> ALU_LG
  TICK: 1268 PC:  28 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU:   0 RG_ALU:   0 SP: 3963 ZF: 0 |	sub   =
  ALU_RES = ALU_LG + ALU_RG
  TICK: 1269 PC:  28 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU:   0 RG_ALU:   0 SP: 3963 ZF: 1 |	sub   =
  ALU_RES -> ACC
  TICK: 1270 PC:  28 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU:   0 RG_ALU:   0 SP: 3963 ZF: 1 |	sub   =
  PC + 1 -> PC
  NUM -> ALU_RG
  TICK: 1271 PC:  30 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU:   0 RG_ALU:   1 SP: 3963 ZF: 1 |	load   =
  ALU_RES = ALU_RG
  TICK: 1272 PC:  30 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU:   0 RG_ALU:   1 SP: 3963 ZF: 0 |	load   =
  ALU_RES -> ACC
  TICK: 1273 PC:  30 ADDR:   0 MEM_OUT: 0 ACC: 1 LG_ALU:   0 RG_ALU:   1 SP: 3963 ZF: 0 |	load   =
  ADDR -> PC
  SP -> ALU_LG
  TICK: 1275 PC:  33 ADDR:   0 MEM_OUT: 0 ACC: 1 LG_ALU: 3963 RG_ALU:   1 SP: 3963 ZF: 0 |	push   =
  ALU_RES = SP - 1
  TICK: 1276 PC:  33 ADDR:   0 MEM_OUT: 0 ACC: 1 LG_ALU: 3963 RG_ALU:   1 SP: 3963 ZF: 0 |	push   =
  ALU_RES -> SP
  TICK: 1277 PC:  33 ADDR:   0 MEM_OUT: 0 ACC: 1 LG_ALU: 3963 RG_ALU:   1 SP: 3962 ZF: 0 |	push   =
  WRITE ACC -> MEM[ALU]
  TICK: 1277 PC:  33 ADDR:   0 MEM_OUT: 0 ACC: 1 LG_ALU: 3963 RG_ALU:   1 SP: 3962 ZF: 0 |	push   =
  SP -> ALU_LG
  TICK: 1278 PC:  34 ADDR:   0 MEM_OUT: 0 ACC: 1 LG_ALU: 3962 RG_ALU:   1 SP: 3962 ZF: 0 |	pop   if
  ALU_RES = ALU_LG
  TICK: 1279 PC:  34 ADDR:   0 MEM_OUT: 0 ACC: 1 LG_ALU: 3962 RG_ALU:   1 SP: 3962 ZF: 0 |	pop   if
  READ MEM[ALU]
  TICK: 1280 PC:  34 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3962 RG_ALU:   1 SP: 3962 ZF: 0 |	pop   if
  ALU_RES = SP + 1
  TICK: 1281 PC:  34 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3962 RG_ALU:   1 SP: 3962 ZF: 0 |	pop   if
  ALU_RES -> SP
  TICK: 1282 PC:  34 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3962 RG_ALU:   1 SP: 3963 ZF: 0 |	pop   if
  MEM[ALU] -> ALU_RG
  TICK: 1282 PC:  34 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3962 RG_ALU:   1 SP: 3963 ZF: 0 |	pop   if
  ALU_RES = ALU_RG
  TICK: 1283 PC:  34 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3962 RG_ALU:   1 SP: 3963 ZF: 0 |	pop   if
  ALU_RES -> ACC
  TICK: 1284 PC:  34 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3962 RG_ALU:   1 SP: 3963 ZF: 0 |	pop   if
  ADDR -> PC
  ADDR -> ALU_RG
  TICK: 1286 PC:   7 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3962 RG_ALU:   6 SP: 3963 ZF: 0 |	load   print
  ALU_RES = ALU_RG
  TICK: 1287 PC:   7 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3962 RG_ALU:   6 SP: 3963 ZF: 0 |	load   print
  READ MEM[ALU]
  TICK: 1288 PC:   7 ADDR:   0 MEM_OUT: 34 ACC: 1 LG_ALU: 3962 RG_ALU:   6 SP: 3963 ZF: 0 |	load   print
  MEM[ALU] -> ALU_RG
  TICK: 1289 PC:   7 ADDR:   0 MEM_OUT: 34 ACC: 1 LG_ALU: 3962 RG_ALU:  34 SP: 3963 ZF: 0 |	load   print
  ALU_RES = ALU_RG
  TICK: 1290 PC:   7 ADDR:   0 MEM_OUT: 34 ACC: 1 LG_ALU: 3962 RG_ALU:  34 SP: 3963 ZF: 0 |	load   print
  ALU_RES -> ACC
  TICK: 1291 PC:   7 ADDR:   0 MEM_OUT: 34 ACC: 34 LG_ALU: 3962 RG_ALU:  34 SP: 3963 ZF: 0 |	load   print
  get IO module port
  TICK: 1292 PC:   8 ADDR:   0 MEM_OUT: 34 ACC: 34 LG_ALU: 3962 RG_ALU:  34 SP: 3963 ZF: 0 |	output   print
  ACC -> OUTPUT 
  TICK: 1293 PC:   8 ADDR:   0 MEM_OUT: 34 ACC: 34 LG_ALU: 3962 RG_ALU:  34 SP: 3963 ZF: 0 |	output   print
  NUM -> ALU_RG
  TICK: 1294 PC:   9 ADDR:   0 MEM_OUT: 34 ACC: 34 LG_ALU: 3962 RG_ALU:   1 SP: 3963 ZF: 0 |	load   print
  ALU_RES = ALU_RG
  TICK: 1295 PC:   9 ADDR:   0 MEM_OUT: 34 ACC: 34 LG_ALU: 3962 RG_ALU:   1 SP: 3963 ZF: 0 |	load   print
  ALU_RES -> ACC
  TICK: 1296 PC:   9 ADDR:   0 MEM_OUT: 34 ACC: 1 LG_ALU: 3962 RG_ALU:   1 SP: 3963 ZF: 0 |	load   print
  SP -> ALU_LG
  TICK: 1297 PC:  10 ADDR:   0 MEM_OUT: 34 ACC: 1 LG_ALU: 3963 RG_ALU:   1 SP: 3963 ZF: 0 |	push   print
  ALU_RES = SP - 1
  TICK: 1298 PC:  10 ADDR:   0 MEM_OUT: 34 ACC: 1 LG_ALU: 3963 RG_ALU:   1 SP: 3963 ZF: 0 |	push   print
  ALU_RES -> SP
  TICK: 1299 PC:  10 ADDR:   0 MEM_OUT: 34 ACC: 1 LG_ALU: 3963 RG_ALU:   1 SP: 3962 ZF: 0 |	push   print
  WRITE ACC -> MEM[ALU]
  TICK: 1299 PC:  10 ADDR:   0 MEM_OUT: 34 ACC: 1 LG_ALU: 3963 RG_ALU:   1 SP: 3962 ZF: 0 |	push   print
  NUM -> ALU_RG
  TICK: 1300 PC:  11 ADDR:   0 MEM_OUT: 34 ACC: 1 LG_ALU: 3963 RG_ALU:  95 SP: 3962 ZF: 0 |	load   print
  ALU_RES = ALU_RG
  TICK: 1301 PC:  11 ADDR:   0 MEM_OUT: 34 ACC: 1 LG_ALU: 3963 RG_ALU:  95 SP: 3962 ZF: 0 |	load   print
  ALU_RES -> ACC
  TICK: 1302 PC:  11 ADDR:   0 MEM_OUT: 34 ACC: 95 LG_ALU: 3963 RG_ALU:  95 SP: 3962 ZF: 0 |	load   print
  get IO module port
  TICK: 1303 PC:  12 ADDR:   0 MEM_OUT: 34 ACC: 95 LG_ALU: 3963 RG_ALU:  95 SP: 3962 ZF: 0 |	output   print
  ACC -> OUTPUT 
  TICK: 1304 PC:  12 ADDR:   0 MEM_OUT: 34 ACC: 95 LG_ALU: 3963 RG_ALU:  95 SP: 3962 ZF: 0 |	output   print
  NUM -> ALU_RG
  TICK: 1305 PC:  13 ADDR:   0 MEM_OUT: 34 ACC: 95 LG_ALU: 3963 RG_ALU:   0 SP: 3962 ZF: 0 |	load   print
  ALU_RES = ALU_RG
  TICK: 1306 PC:  13 ADDR:   0 MEM_OUT: 34 ACC: 95 LG_ALU: 3963 RG_ALU:   0 SP: 3962 ZF: 1 |	load   print
  ALU_RES -> ACC
  TICK: 1307 PC:  13 ADDR:   0 MEM_OUT: 34 ACC: 0 LG_ALU: 3963 RG_ALU:   0 SP: 3962 ZF: 1 |	load   print
  get IO module port
  TICK: 1308 PC:  14 ADDR:   0 MEM_OUT: 34 ACC: 0 LG_ALU: 3963 RG_ALU:   0 SP: 3962 ZF: 1 |	output   print
  ACC -> OUTPUT 
  TICK: 1309 PC:  14 ADDR:   0 MEM_OUT: 34 ACC: 0 LG_ALU: 3963 RG_ALU:   0 SP: 3962 ZF: 1 |	output   print
  NUM -> ALU_RG
  TICK: 1310 PC:  15 ADDR:   0 MEM_OUT: 34 ACC: 0 LG_ALU: 3963 RG_ALU:   0 SP: 3962 ZF: 1 |	load   print
  ALU_RES = ALU_RG
  TICK: 1311 PC:  15 ADDR:   0 MEM_OUT: 34 ACC: 0 LG_ALU: 3963 RG_ALU:   0 SP: 3962 ZF: 1 |	load   print
  ALU_RES -> ACC
  TICK: 1312 PC:  15 ADDR:   0 MEM_OUT: 34 ACC: 0 LG_ALU: 3963 RG_ALU:   0 SP: 3962 ZF: 1 |	load   print
  get IO module port
  TICK: 1313 PC:  16 ADDR:   0 MEM_OUT: 34 ACC: 0 LG_ALU: 3963 RG_ALU:   0 SP: 3962 ZF: 1 |	output   print
  ACC -> OUTPUT 
  TICK: 1314 PC:  16 ADDR:   0 MEM_OUT: 34 ACC: 0 LG_ALU: 3963 RG_ALU:   0 SP: 3962 ZF: 1 |	output   print
  NUM -> ALU_RG
  TICK: 1315 PC:  17 ADDR:   0 MEM_OUT: 34 ACC: 0 LG_ALU: 3963 RG_ALU:   1 SP: 3962 ZF: 1 |	load   print
  ALU_RES = ALU_RG
  TICK: 1316 PC:  17 ADDR:   0 MEM_OUT: 34 ACC: 0 LG_ALU: 3963 RG_ALU:   1 SP: 3962 ZF: 0 |	load   print
  ALU_RES -> ACC
  TICK: 1317 PC:  17 ADDR:   0 MEM_OUT: 34 ACC: 1 LG_ALU: 3963 RG_ALU:   1 SP: 3962 ZF: 0 |	load   print
  SP -> ALU_LG
  TICK: 1318 PC:  18 ADDR:   0 MEM_OUT: 34 ACC: 1 LG_ALU: 3962 RG_ALU:   1 SP: 3962 ZF: 0 |	push   print
  ALU_RES = SP - 1
  TICK: 1319 PC:  18 ADDR:   0 MEM_OUT: 34 ACC: 1 LG_ALU: 3962 RG_ALU:   1 SP: 3962 ZF: 0 |	push   print
  ALU_RES -> SP
  TICK: 1320 PC:  18 ADDR:   0 MEM_OUT: 34 ACC: 1 LG_ALU: 3962 RG_ALU:   1 SP: 3961 ZF: 0 |	push   print
  WRITE ACC -> MEM[ALU]
  TICK: 1320 PC:  18 ADDR:   0 MEM_OUT: 34 ACC: 1 LG_ALU: 3962 RG_ALU:   1 SP: 3961 ZF: 0 |	push   print
  ADDR -> PC
  SP -> ALU_LG
  TICK: 1322 PC:  37 ADDR:   0 MEM_OUT: 34 ACC: 1 LG_ALU: 3961 RG_ALU:   1 SP: 3961 ZF: 0 |	pop   if
  ALU_RES = ALU_LG
  TICK: 1323 PC:  37 ADDR:   0 MEM_OUT: 34 ACC: 1 LG_ALU: 3961 RG_ALU:   1 SP: 3961 ZF: 0 |	pop   if
  READ MEM[ALU]
  TICK: 1324 PC:  37 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3961 RG_ALU:   1 SP: 3961 ZF: 0 |	pop   if
  ALU_RES = SP + 1
  TICK: 1325 PC:  37 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3961 RG_ALU:   1 SP: 3961 ZF: 0 |	pop   if
  ALU_RES -> SP
  TICK: 1326 PC:  37 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3961 RG_ALU:   1 SP: 3962 ZF: 0 |	pop   if
  MEM[ALU] -> ALU_RG
  TICK: 1326 PC:  37 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3961 RG_ALU:   1 SP: 3962 ZF: 0 |	pop   if
  ALU_RES = ALU_RG
  TICK: 1327 PC:  37 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3961 RG_ALU:   1 SP: 3962 ZF: 0 |	pop   if
  ALU_RES -> ACC
  TICK: 1328 PC:  37 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3961 RG_ALU:   1 SP: 3962 ZF: 0 |	pop   if
  SP -> ALU_LG
  TICK: 1329 PC:  38 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3962 RG_ALU:   1 SP: 3962 ZF: 0 |	push   if
  ALU_RES = SP - 1
  TICK: 1330 PC:  38 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3962 RG_ALU:   1 SP: 3962 ZF: 0 |	push   if
  ALU_RES -> SP
  TICK: 1331 PC:  38 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3962 RG_ALU:   1 SP: 3961 ZF: 0 |	push   if
  WRITE ACC -> MEM[ALU]
  TICK: 1331 PC:  38 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3962 RG_ALU:   1 SP: 3961 ZF: 0 |	push   if
  ADDR -> ALU_RG
  TICK: 1332 PC:  39 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3962 RG_ALU:   6 SP: 3961 ZF: 0 |	load   var
  ALU_RES = ALU_RG
  TICK: 1333 PC:  39 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3962 RG_ALU:   6 SP: 3961 ZF: 0 |	load   var
  READ MEM[ALU]
  TICK: 1334 PC:  39 ADDR:   0 MEM_OUT: 34 ACC: 1 LG_ALU: 3962 RG_ALU:   6 SP: 3961 ZF: 0 |	load   var
  MEM[ALU] -> ALU_RG
  TICK: 1335 PC:  39 ADDR:   0 MEM_OUT: 34 ACC: 1 LG_ALU: 3962 RG_ALU:  34 SP: 3961 ZF: 0 |	load   var
  ALU_RES = ALU_RG
  TICK: 1336 PC:  39 ADDR:   0 MEM_OUT: 34 ACC: 1 LG_ALU: 3962 RG_ALU:  34 SP: 3961 ZF: 0 |	load   var
  ALU_RES -> ACC
  TICK: 1337 PC:  39 ADDR:   0 MEM_OUT: 34 ACC: 34 LG_ALU: 3962 RG_ALU:  34 SP: 3961 ZF: 0 |	load   var
  ADDR -> ALU_RG
  TICK: 1338 PC:  40 ADDR:   0 MEM_OUT: 34 ACC: 34 LG_ALU: 3962 RG_ALU:   8 SP: 3961 ZF: 0 |	store   var
  ALU_RES = ALU_RG
  TICK: 1339 PC:  40 ADDR:   0 MEM_OUT: 34 ACC: 34 LG_ALU: 3962 RG_ALU:   8 SP: 3961 ZF: 0 |	store   var
  WRITE ACC -> MEM[ALU]
  TICK: 1340 PC:  40 ADDR:   0 MEM_OUT: 34 ACC: 34 LG_ALU: 3962 RG_ALU:   8 SP: 3961 ZF: 0 |	store   var
  NUM -> ALU_RG
  TICK: 1341 PC:  41 ADDR:   0 MEM_OUT: 34 ACC: 34 LG_ALU: 3962 RG_ALU:   1 SP: 3961 ZF: 0 |	load   var
  ALU_RES = ALU_RG
  TICK: 1342 PC:  41 ADDR:   0 MEM_OUT: 34 ACC: 34 LG_ALU: 3962 RG_ALU:   1 SP: 3961 ZF: 0 |	load   var
  ALU_RES -> ACC
  TICK: 1343 PC:  41 ADDR:   0 MEM_OUT: 34 ACC: 1 LG_ALU: 3962 RG_ALU:   1 SP: 3961 ZF: 0 |	load   var
  SP -> ALU_LG
  TICK: 1344 PC:  42 ADDR:   0 MEM_OUT: 34 ACC: 1 LG_ALU: 3961 RG_ALU:   1 SP: 3961 ZF: 0 |	push   var
  ALU_RES = SP - 1
  TICK: 1345 PC:  42 ADDR:   0 MEM_OUT: 34 ACC: 1 LG_ALU: 3961 RG_ALU:   1 SP: 3961 ZF: 0 |	push   var
  ALU_RES -> SP
  TICK: 1346 PC:  42 ADDR:   0 MEM_OUT: 34 ACC: 1 LG_ALU: 3961 RG_ALU:   1 SP: 3960 ZF: 0 |	push   var
  WRITE ACC -> MEM[ALU]
  TICK: 1346 PC:  42 ADDR:   0 MEM_OUT: 34 ACC: 1 LG_ALU: 3961 RG_ALU:   1 SP: 3960 ZF: 0 |	push   var
  ADDR -> ALU_RG
  TICK: 1347 PC:  43 ADDR:   0 MEM_OUT: 34 ACC: 1 LG_ALU: 3961 RG_ALU:   5 SP: 3960 ZF: 0 |	load   +
  ALU_RES = ALU_RG
  TICK: 1348 PC:  43 ADDR:   0 MEM_OUT: 34 ACC: 1 LG_ALU: 3961 RG_ALU:   5 SP: 3960 ZF: 0 |	load   +
  READ MEM[ALU]
  TICK: 1349 PC:  43 ADDR:   0 MEM_OUT: 21 ACC: 1 LG_ALU: 3961 RG_ALU:   5 SP: 3960 ZF: 0 |	load   +
  MEM[ALU] -> ALU_RG
  TICK: 1350 PC:  43 ADDR:   0 MEM_OUT: 21 ACC: 1 LG_ALU: 3961 RG_ALU:  21 SP: 3960 ZF: 0 |	load   +
  ALU_RES = ALU_RG
  TICK: 1351 PC:  43 ADDR:   0 MEM_OUT: 21 ACC: 1 LG_ALU: 3961 RG_ALU:  21 SP: 3960 ZF: 0 |	load   +
  ALU_RES -> ACC
  TICK: 1352 PC:  43 ADDR:   0 MEM_OUT: 21 ACC: 21 LG_ALU: 3961 RG_ALU:  21 SP: 3960 ZF: 0 |	load   +
  ADDR -> ALU_RG
  TICK: 1353 PC:  44 ADDR:   0 MEM_OUT: 21 ACC: 21 LG_ALU: 3961 RG_ALU:   6 SP: 3960 ZF: 0 |	add   +
  ALU_RES = ALU_RG
  TICK: 1354 PC:  44 ADDR:   0 MEM_OUT: 21 ACC: 21 LG_ALU: 3961 RG_ALU:   6 SP: 3960 ZF: 0 |	add   +
  READ MEM[ALU]
  TICK: 1355 PC:  44 ADDR:   0 MEM_OUT: 34 ACC: 21 LG_ALU: 3961 RG_ALU:   6 SP: 3960 ZF: 0 |	add   +
  MEM[ALU] -> ALU_RG
  TICK: 1356 PC:  44 ADDR:   0 MEM_OUT: 34 ACC: 21 LG_ALU: 3961 RG_ALU:  34 SP: 3960 ZF: 0 |	add   +
  ACC -> ALU_LG
  TICK: 1356 PC:  44 ADDR:   0 MEM_OUT: 34 ACC: 21 LG_ALU:  21 RG_ALU:  34 SP: 3960 ZF: 0 |	add   +
  ALU_RES = ALU_LG + ALU_RG
  TICK: 1357 PC:  44 ADDR:   0 MEM_OUT: 34 ACC: 21 LG_ALU:  21 RG_ALU:  34 SP: 3960 ZF: 0 |	add   +
  ALU_RES -> ACC
  TICK: 1358 PC:  44 ADDR:   0 MEM_OUT: 34 ACC: 55 LG_ALU:  21 RG_ALU:  34 SP: 3960 ZF: 0 |	add   +
  SP -> ALU_LG
  TICK: 1359 PC:  45 ADDR:   0 MEM_OUT: 34 ACC: 55 LG_ALU: 3960 RG_ALU:  34 SP: 3960 ZF: 0 |	push   +
  ALU_RES = SP - 1
  TICK: 1360 PC:  45 ADDR:   0 MEM_OUT: 34 ACC: 55 LG_ALU: 3960 RG_ALU:  34 SP: 3960 ZF: 0 |	push   +
  ALU_RES -> SP
  TICK: 1361 PC:  45 ADDR:   0 MEM_OUT: 34 ACC: 55 LG_ALU: 3960 RG_ALU:  34 SP: 3959 ZF: 0 |	push   +
  WRITE ACC -> MEM[ALU]
  TICK: 1361 PC:  45 ADDR:   0 MEM_OUT: 34 ACC: 55 LG_ALU: 3960 RG_ALU:  34 SP: 3959 ZF: 0 |	push   +
  SP -> ALU_LG
  TICK: 1362 PC:  46 ADDR:   0 MEM_OUT: 34 ACC: 55 LG_ALU: 3959 RG_ALU:  34 SP: 3959 ZF: 0 |	pop   var
  ALU_RES = ALU_LG
  TICK: 1363 PC:  46 ADDR:   0 MEM_OUT: 34 ACC: 55 LG_ALU: 3959 RG_ALU:  34 SP: 3959 ZF: 0 |	pop   var
  READ MEM[ALU]
  TICK: 1364 PC:  46 ADDR:   0 MEM_OUT: 55 ACC: 55 LG_ALU: 3959 RG_ALU:  34 SP: 3959 ZF: 0 |	pop   var
  ALU_RES = SP + 1
  TICK: 1365 PC:  46 ADDR:   0 MEM_OUT: 55 ACC: 55 LG_ALU: 3959 RG_ALU:  34 SP: 3959 ZF: 0 |	pop   var
  ALU_RES -> SP
  TICK: 1366 PC:  46 ADDR:   0 MEM_OUT: 55 ACC: 55 LG_ALU: 3959 RG_ALU:  34 SP: 3960 ZF: 0 |	pop   var
  MEM[ALU] -> ALU_RG
  TICK: 1366 PC:  46 ADDR:   0 MEM_OUT: 55 ACC: 55 LG_ALU: 3959 RG_ALU:  55 SP: 3960 ZF: 0 |	pop   var
  ALU_RES = ALU_RG
  TICK: 1367 PC:  46 ADDR:   0 MEM_OUT: 55 ACC: 55 LG_ALU: 3959 RG_ALU:  55 SP: 3960 ZF: 0 |	pop   var
  ALU_RES -> ACC
  TICK: 1368 PC:  46 ADDR:   0 MEM_OUT: 55 ACC: 55 LG_ALU: 3959 RG_ALU:  55 SP: 3960 ZF: 0 |	pop   var
  ADDR -> ALU_RG
  TICK: 1369 PC:  47 ADDR:   0 MEM_OUT: 55 ACC: 55 LG_ALU: 3959 RG_ALU:   6 SP: 3960 ZF: 0 |	store   var
  ALU_RES = ALU_RG
  TICK: 1370 PC:  47 ADDR:   0 MEM_OUT: 55 ACC: 55 LG_ALU: 3959 RG_ALU:   6 SP: 3960 ZF: 0 |	store   var
  WRITE ACC -> MEM[ALU]
  TICK: 1371 PC:  47 ADDR:   0 MEM_OUT: 55 ACC: 55 LG_ALU: 3959 RG_ALU:   6 SP: 3960 ZF: 0 |	store   var
  NUM -> ALU_RG
  TICK: 1372 PC:  48 ADDR:   0 MEM_OUT: 55 ACC: 55 LG_ALU: 3959 RG_ALU:   1 SP: 3960 ZF: 0 |	load   var
  ALU_RES = ALU_RG
  TICK: 1373 PC:  48 ADDR:   0 MEM_OUT: 55 ACC: 55 LG_ALU: 3959 RG_ALU:   1 SP: 3960 ZF: 0 |	load   var
  ALU_RES -> ACC
  TICK: 1374 PC:  48 ADDR:   0 MEM_OUT: 55 ACC: 1 LG_ALU: 3959 RG_ALU:   1 SP: 3960 ZF: 0 |	load   var
  SP -> ALU_LG
  TICK: 1375 PC:  49 ADDR:   0 MEM_OUT: 55 ACC: 1 LG_ALU: 3960 RG_ALU:   1 SP: 3960 ZF: 0 |	push   var
  ALU_RES = SP - 1
  TICK: 1376 PC:  49 ADDR:   0 MEM_OUT: 55 ACC: 1 LG_ALU: 3960 RG_ALU:   1 SP: 3960 ZF: 0 |	push   var
  ALU_RES -> SP
  TICK: 1377 PC:  49 ADDR:   0 MEM_OUT: 55 ACC: 1 LG_ALU: 3960 RG_ALU:   1 SP: 3959 ZF: 0 |	push   var
  WRITE ACC -> MEM[ALU]
  TICK: 1377 PC:  49 ADDR:   0 MEM_OUT: 55 ACC: 1 LG_ALU: 3960 RG_ALU:   1 SP: 3959 ZF: 0 |	push   var
  ADDR -> ALU_RG
  TICK: 1378 PC:  50 ADDR:   0 MEM_OUT: 55 ACC: 1 LG_ALU: 3960 RG_ALU:   8 SP: 3959 ZF: 0 |	load   var
  ALU_RES = ALU_RG
  TICK: 1379 PC:  50 ADDR:   0 MEM_OUT: 55 ACC: 1 LG_ALU: 3960 RG_ALU:   8 SP: 3959 ZF: 0 |	load   var
  READ MEM[ALU]
  TICK: 1380 PC:  50 ADDR:   0 MEM_OUT: 34 ACC: 1 LG_ALU: 3960 RG_ALU:   8 SP: 3959 ZF: 0 |	load   var
  MEM[ALU] -> ALU_RG
  TICK: 1381 PC:  50 ADDR:   0 MEM_OUT: 34 ACC: 1 LG_ALU: 3960 RG_ALU:  34 SP: 3959 ZF: 0 |	load   var
  ALU_RES = ALU_RG
  TICK: 1382 PC:  50 ADDR:   0 MEM_OUT: 34 ACC: 1 LG_ALU: 3960 RG_ALU:  34 SP: 3959 ZF: 0 |	load   var
  ALU_RES -> ACC
  TICK: 1383 PC:  50 ADDR:   0 MEM_OUT: 34 ACC: 34 LG_ALU: 3960 RG_ALU:  34 SP: 3959 ZF: 0 |	load   var
  ADDR -> ALU_RG
  TICK: 1384 PC:  51 ADDR:   0 MEM_OUT: 34 ACC: 34 LG_ALU: 3960 RG_ALU:   5 SP: 3959 ZF: 0 |	store   var
  ALU_RES = ALU_RG
  TICK: 1385 PC:  51 ADDR:   0 MEM_OUT: 34 ACC: 34 LG_ALU: 3960 RG_ALU:   5 SP: 3959 ZF: 0 |	store   var
  WRITE ACC -> MEM[ALU]
  TICK: 1386 PC:  51 ADDR:   0 MEM_OUT: 34 ACC: 34 LG_ALU: 3960 RG_ALU:   5 SP: 3959 ZF: 0 |	store   var
  NUM -> ALU_RG
  TICK: 1387 PC:  52 ADDR:   0 MEM_OUT: 34 ACC: 34 LG_ALU: 3960 RG_ALU:   1 SP: 3959 ZF: 0 |	load   var
  ALU_RES = ALU_RG
  TICK: 1388 PC:  52 ADDR:   0 MEM_OUT: 34 ACC: 34 LG_ALU: 3960 RG_ALU:   1 SP: 3959 ZF: 0 |	load   var
  ALU_RES -> ACC
  TICK: 1389 PC:  52 ADDR:   0 MEM_OUT: 34 ACC: 1 LG_ALU: 3960 RG_ALU:   1 SP: 3959 ZF: 0 |	load   var
  SP -> ALU_LG
  TICK: 1390 PC:  53 ADDR:   0 MEM_OUT: 34 ACC: 1 LG_ALU: 3959 RG_ALU:   1 SP: 3959 ZF: 0 |	push   var
  ALU_RES = SP - 1
  TICK: 1391 PC:  53 ADDR:   0 MEM_OUT: 34 ACC: 1 LG_ALU: 3959 RG_ALU:   1 SP: 3959 ZF: 0 |	push   var
  ALU_RES -> SP
  TICK: 1392 PC:  53 ADDR:   0 MEM_OUT: 34 ACC: 1 LG_ALU: 3959 RG_ALU:   1 SP: 3958 ZF: 0 |	push   var
  WRITE ACC -> MEM[ALU]
  TICK: 1392 PC:  53 ADDR:   0 MEM_OUT: 34 ACC: 1 LG_ALU: 3959 RG_ALU:   1 SP: 3958 ZF: 0 |	push   var
  ADDR -> ALU_RG
  TICK: 1393 PC:  54 ADDR:   0 MEM_OUT: 34 ACC: 1 LG_ALU: 3959 RG_ALU:   6 SP: 3958 ZF: 0 |	load   <
  ALU_RES = ALU_RG
  TICK: 1394 PC:  54 ADDR:   0 MEM_OUT: 34 ACC: 1 LG_ALU: 3959 RG_ALU:   6 SP: 3958 ZF: 0 |	load   <
  READ MEM[ALU]
  TICK: 1395 PC:  54 ADDR:   0 MEM_OUT: 55 ACC: 1 LG_ALU: 3959 RG_ALU:   6 SP: 3958 ZF: 0 |	load   <
  MEM[ALU] -> ALU_RG
  TICK: 1396 PC:  54 ADDR:   0 MEM_OUT: 55 ACC: 1 LG_ALU: 3959 RG_ALU:  55 SP: 3958 ZF: 0 |	load   <
  ALU_RES = ALU_RG
  TICK: 1397 PC:  54 ADDR:   0 MEM_OUT: 55 ACC: 1 LG_ALU: 3959 RG_ALU:  55 SP: 3958 ZF: 0 |	load   <
  ALU_RES -> ACC
  TICK: 1398 PC:  54 ADDR:   0 MEM_OUT: 55 ACC: 55 LG_ALU: 3959 RG_ALU:  55 SP: 3958 ZF: 0 |	load   <
  ADDR -> ALU_RG
  TICK: 1399 PC:  55 ADDR:   0 MEM_OUT: 55 ACC: 55 LG_ALU: 3959 RG_ALU:   7 SP: 3958 ZF: 0 |	sub   <
  ALU_RES = ALU_RG
  TICK: 1400 PC:  55 ADDR:   0 MEM_OUT: 55 ACC: 55 LG_ALU: 3959 RG_ALU:   7 SP: 3958 ZF: 0 |	sub   <
  READ MEM[ALU]
  TICK: 1401 PC:  55 ADDR:   0 MEM_OUT: 400000 ACC: 55 LG_ALU: 3959 RG_ALU:   7 SP: 3958 ZF: 0 |	sub   <
  MEM[ALU] -> ALU_RG
  TICK: 1402 PC:  55 ADDR:   0 MEM_OUT: 400000 ACC: 55 LG_ALU: 3959 RG_ALU: 400000 SP: 3958 ZF: 0 |	sub   <
  ACC -> ALU_LG
  TICK: 1402 PC:  55 ADDR:   0 MEM_OUT: 400000 ACC: 55 LG_ALU:  55 RG_ALU: 400000 SP: 3958 ZF: 0 |	sub   <
  ALU_RES = ALU_LG + ALU_RG
  TICK: 1403 PC:  55 ADDR:   0 MEM_OUT: 400000 ACC: 55 LG_ALU:  55 RG_ALU: 400000 SP: 3958 ZF: 0 |	sub   <
  ALU_RES -> ACC
  TICK: 1404 PC:  55 ADDR:   0 MEM_OUT: 400000 ACC: -399945 LG_ALU:  55 RG_ALU: 400000 SP: 3958 ZF: 0 |	sub   <
  PC + 1 -> PC
  NUM -> ALU_RG
  TICK: 1405 PC:  57 ADDR:   0 MEM_OUT: 400000 ACC: -399945 LG_ALU:  55 RG_ALU:   1 SP: 3958 ZF: 0 |	load   <
  ALU_RES = ALU_RG
  TICK: 1406 PC:  57 ADDR:   0 MEM_OUT: 400000 ACC: -399945 LG_ALU:  55 RG_ALU:   1 SP: 3958 ZF: 0 |	load   <
  ALU_RES -> ACC
  TICK: 1407 PC:  57 ADDR:   0 MEM_OUT: 400000 ACC: 1 LG_ALU:  55 RG_ALU:   1 SP: 3958 ZF: 0 |	load   <
  ADDR -> PC
  SP -> ALU_LG
  TICK: 1409 PC:  60 ADDR:   0 MEM_OUT: 400000 ACC: 1 LG_ALU: 3958 RG_ALU:   1 SP: 3958 ZF: 0 |	push   <
  ALU_RES = SP - 1
  TICK: 1410 PC:  60 ADDR:   0 MEM_OUT: 400000 ACC: 1 LG_ALU: 3958 RG_ALU:   1 SP: 3958 ZF: 0 |	push   <
  ALU_RES -> SP
  TICK: 1411 PC:  60 ADDR:   0 MEM_OUT: 400000 ACC: 1 LG_ALU: 3958 RG_ALU:   1 SP: 3957 ZF: 0 |	push   <
  WRITE ACC -> MEM[ALU]
  TICK: 1411 PC:  60 ADDR:   0 MEM_OUT: 400000 ACC: 1 LG_ALU: 3958 RG_ALU:   1 SP: 3957 ZF: 0 |	push   <
  SP -> ALU_LG
  TICK: 1412 PC:  61 ADDR:   0 MEM_OUT: 400000 ACC: 1 LG_ALU: 3957 RG_ALU:   1 SP: 3957 ZF: 0 |	pop
  ALU_RES = ALU_LG
  TICK: 1413 PC:  61 ADDR:   0 MEM_OUT: 400000 ACC: 1 LG_ALU: 3957 RG_ALU:   1 SP: 3957 ZF: 0 |	pop
  READ MEM[ALU]
  TICK: 1414 PC:  61 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3957 RG_ALU:   1 SP: 3957 ZF: 0 |	pop
  ALU_RES = SP + 1
  TICK: 1415 PC:  61 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3957 RG_ALU:   1 SP: 3957 ZF: 0 |	pop
  ALU_RES -> SP
  TICK: 1416 PC:  61 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3957 RG_ALU:   1 SP: 3958 ZF: 0 |	pop
  MEM[ALU] -> ALU_RG
  TICK: 1416 PC:  61 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3957 RG_ALU:   1 SP: 3958 ZF: 0 |	pop
  ALU_RES = ALU_RG
  TICK: 1417 PC:  61 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3957 RG_ALU:   1 SP: 3958 ZF: 0 |	pop
  ALU_RES -> ACC
  TICK: 1418 PC:  61 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3957 RG_ALU:   1 SP: 3958 ZF: 0 |	pop
  ADDR -> PC
  ADDR -> PC
  ADDR -> ALU_RG
  TICK: 1421 PC:  24 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3957 RG_ALU:   6 SP: 3958 ZF: 0 |	load
  ALU_RES = ALU_RG
  TICK: 1422 PC:  24 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3957 RG_ALU:   6 SP: 3958 ZF: 0 |	load
  READ MEM[ALU]
  TICK: 1423 PC:  24 ADDR:   0 MEM_OUT: 55 ACC: 1 LG_ALU: 3957 RG_ALU:   6 SP: 3958 ZF: 0 |	load
  MEM[ALU] -> ALU_RG
  TICK: 1424 PC:  24 ADDR:   0 MEM_OUT: 55 ACC: 1 LG_ALU: 3957 RG_ALU:  55 SP: 3958 ZF: 0 |	load
  ALU_RES = ALU_RG
  TICK: 1425 PC:  24 ADDR:   0 MEM_OUT: 55 ACC: 1 LG_ALU: 3957 RG_ALU:  55 SP: 3958 ZF: 0 |	load
  ALU_RES -> ACC
  TICK: 1426 PC:  24 ADDR:   0 MEM_OUT: 55 ACC: 55 LG_ALU: 3957 RG_ALU:  55 SP: 3958 ZF: 0 |	load
  NUM -> ALU_RG
  TICK: 1427 PC:  25 ADDR:   0 MEM_OUT: 55 ACC: 55 LG_ALU: 3957 RG_ALU:   2 SP: 3958 ZF: 0 |	mod
  ACC -> ALU_LG
  TICK: 1427 PC:  25 ADDR:   0 MEM_OUT: 55 ACC: 55 LG_ALU:  55 RG_ALU:   2 SP: 3958 ZF: 0 |	mod
  ALU_RES = ALU_LG % ALU_RG
  TICK: 1428 PC:  25 ADDR:   0 MEM_OUT: 55 ACC: 55 LG_ALU:  55 RG_ALU:   2 SP: 3958 ZF: 0 |	mod
  ALU_RES -> ACC
  TICK: 1429 PC:  25 ADDR:   0 MEM_OUT: 55 ACC: 1 LG_ALU:  55 RG_ALU:   2 SP: 3958 ZF: 0 |	mod
  SP -> ALU_LG
  TICK: 1430 PC:  26 ADDR:   0 MEM_OUT: 55 ACC: 1 LG_ALU: 3958 RG_ALU:   2 SP: 3958 ZF: 0 |	push
  ALU_RES = SP - 1
  TICK: 1431 PC:  26 ADDR:   0 MEM_OUT: 55 ACC: 1 LG_ALU: 3958 RG_ALU:   2 SP: 3958 ZF: 0 |	push
  ALU_RES -> SP
  TICK: 1432 PC:  26 ADDR:   0 MEM_OUT: 55 ACC: 1 LG_ALU: 3958 RG_ALU:   2 SP: 3957 ZF: 0 |	push
  WRITE ACC -> MEM[ALU]
  TICK: 1432 PC:  26 ADDR:   0 MEM_OUT: 55 ACC: 1 LG_ALU: 3958 RG_ALU:   2 SP: 3957 ZF: 0 |	push
  NUM -> ALU_RG
  TICK: 1433 PC:  27 ADDR:   0 MEM_OUT: 55 ACC: 1 LG_ALU: 3958 RG_ALU:   0 SP: 3957 ZF: 0 |	load   =
  ALU_RES = ALU_RG
  TICK: 1434 PC:  27 ADDR:   0 MEM_OUT: 55 ACC: 1 LG_ALU: 3958 RG_ALU:   0 SP: 3957 ZF: 1 |	load   =
  ALU_RES -> ACC
  TICK: 1435 PC:  27 ADDR:   0 MEM_OUT: 55 ACC: 0 LG_ALU: 3958 RG_ALU:   0 SP: 3957 ZF: 1 |	load   =
  SP -> ALU_LG
  TICK: 1436 PC:  28 ADDR:   0 MEM_OUT: 55 ACC: 0 LG_ALU: 3957 RG_ALU:   0 SP: 3957 ZF: 1 |	sub   =
  ALU_RES = ALU_LG
  TICK: 1437 PC:  28 ADDR:   0 MEM_OUT: 55 ACC: 0 LG_ALU: 3957 RG_ALU:   0 SP: 3957 ZF: 0 |	sub   =
  READ MEM[ALU]
  TICK: 1438 PC:  28 ADDR:   0 MEM_OUT: 1 ACC: 0 LG_ALU: 3957 RG_ALU:   0 SP: 3957 ZF: 0 |	sub   =
  MEM[ALU] -> ALU_RG
  TICK: 1439 PC:  28 ADDR:   0 MEM_OUT: 1 ACC: 0 LG_ALU: 3957 RG_ALU:   1 SP: 3957 ZF: 0 |	sub   =
  ALU_RES = SP + 1
  TICK: 1440 PC:  28 ADDR:   0 MEM_OUT: 1 ACC: 0 LG_ALU: 3957 RG_ALU:   1 SP: 3957 ZF: 0 |	sub   =
  ALU_RES -> SP
  TICK: 1441 PC:  28 ADDR:   0 MEM_OUT: 1 ACC: 0 LG_ALU: 3957 RG_ALU:   1 SP: 3958 ZF: 0 |	sub   =
  ACC -> ALU_LG
  TICK: 1441 PC:  28 ADDR:   0 MEM_OUT: 1 ACC: 0 LG_ALU:   0 RG_ALU:   1 SP: 3958 ZF: 0 |	sub   =
  ALU_RES = ALU_LG + ALU_RG
  TICK: 1442 PC:  28 ADDR:   0 MEM_OUT: 1 ACC: 0 LG_ALU:   0 RG_ALU:   1 SP: 3958 ZF: 0 |	sub   =
  ALU_RES -> ACC
  TICK: 1443 PC:  28 ADDR:   0 MEM_OUT: 1 ACC: -1 LG_ALU:   0 RG_ALU:   1 SP: 3958 ZF: 0 |	sub   =
  ADDR -> PC
  NUM -> ALU_RG
  TICK: 1445 PC:  32 ADDR:   0 MEM_OUT: 1 ACC: -1 LG_ALU:   0 RG_ALU:   0 SP: 3958 ZF: 0 |	load   =
  ALU_RES = ALU_RG
  TICK: 1446 PC:  32 ADDR:   0 MEM_OUT: 1 ACC: -1 LG_ALU:   0 RG_ALU:   0 SP: 3958 ZF: 1 |	load   =
  ALU_RES -> ACC
  TICK: 1447 PC:  32 ADDR:   0 MEM_OUT: 1 ACC: 0 LG_ALU:   0 RG_ALU:   0 SP: 3958 ZF: 1 |	load   =
  SP -> ALU_LG
  TICK: 1448 PC:  33 ADDR:   0 MEM_OUT: 1 ACC: 0 LG_ALU: 3958 RG_ALU:   0 SP: 3958 ZF: 1 |	push   =
  ALU_RES = SP - 1
  TICK: 1449 PC:  33 ADDR:   0 MEM_OUT: 1 ACC: 0 LG_ALU: 3958 RG_ALU:   0 SP: 3958 ZF: 0 |	push   =
  ALU_RES -> SP
  TICK: 1450 PC:  33 ADDR:   0 MEM_OUT: 1 ACC: 0 LG_ALU: 3958 RG_ALU:   0 SP: 3957 ZF: 0 |	push   =
  WRITE ACC -> MEM[ALU]
  TICK: 1450 PC:  33 ADDR:   0 MEM_OUT: 1 ACC: 0 LG_ALU: 3958 RG_ALU:   0 SP: 3957 ZF: 0 |	push   =
  SP -> ALU_LG
  TICK: 1451 PC:  34 ADDR:   0 MEM_OUT: 1 ACC: 0 LG_ALU: 3957 RG_ALU:   0 SP: 3957 ZF: 0 |	pop   if
  ALU_RES = ALU_LG
  TICK: 1452 PC:  34 ADDR:   0 MEM_OUT: 1 ACC: 0 LG_ALU: 3957 RG_ALU:   0 SP: 3957 ZF: 0 |	pop   if
  READ MEM[ALU]
  TICK: 1453 PC:  34 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3957 RG_ALU:   0 SP: 3957 ZF: 0 |	pop   if
  ALU_RES = SP + 1
  TICK: 1454 PC:  34 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3957 RG_ALU:   0 SP: 3957 ZF: 0 |	pop   if
  ALU_RES -> SP
  TICK: 1455 PC:  34 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3957 RG_ALU:   0 SP: 3958 ZF: 0 |	pop   if
  MEM[ALU] -> ALU_RG
  TICK: 1455 PC:  34 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3957 RG_ALU:   0 SP: 3958 ZF: 0 |	pop   if
  ALU_RES = ALU_RG
  TICK: 1456 PC:  34 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3957 RG_ALU:   0 SP: 3958 ZF: 1 |	pop   if
  ALU_RES -> ACC
  TICK: 1457 PC:  34 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3957 RG_ALU:   0 SP: 3958 ZF: 1 |	pop   if
  PC + 1 -> PC
  ADDR -> PC
  NUM -> ALU_RG
  TICK: 1459 PC:  20 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3957 RG_ALU:   0 SP: 3958 ZF: 1 |	load   +
  ALU_RES = ALU_RG
  TICK: 1460 PC:  20 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3957 RG_ALU:   0 SP: 3958 ZF: 1 |	load   +
  ALU_RES -> ACC
  TICK: 1461 PC:  20 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3957 RG_ALU:   0 SP: 3958 ZF: 1 |	load   +
  NUM -> ALU_RG
  TICK: 1462 PC:  21 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3957 RG_ALU:   0 SP: 3958 ZF: 1 |	add   +
  ACC -> ALU_LG
  TICK: 1462 PC:  21 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU:   0 RG_ALU:   0 SP: 3958 ZF: 1 |	add   +
  ALU_RES = ALU_LG + ALU_RG
  TICK: 1463 PC:  21 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU:   0 RG_ALU:   0 SP: 3958 ZF: 1 |	add   +
  ALU_RES -> ACC
  TICK: 1464 PC:  21 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU:   0 RG_ALU:   0 SP: 3958 ZF: 1 |	add   +
  SP -> ALU_LG
  TICK: 1465 PC:  22 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3958 RG_ALU:   0 SP: 3958 ZF: 1 |	push   +
  ALU_RES = SP - 1
  TICK: 1466 PC:  22 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3958 RG_ALU:   0 SP: 3958 ZF: 0 |	push   +
  ALU_RES -> SP
  TICK: 1467 PC:  22 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3958 RG_ALU:   0 SP: 3957 ZF: 0 |	push   +
  WRITE ACC -> MEM[ALU]
  TICK: 1467 PC:  22 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3958 RG_ALU:   0 SP: 3957 ZF: 0 |	push   +
  ADDR -> PC
  SP -> ALU_LG
  TICK: 1469 PC:  37 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3957 RG_ALU:   0 SP: 3957 ZF: 0 |	pop   if
  ALU_RES = ALU_LG
  TICK: 1470 PC:  37 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3957 RG_ALU:   0 SP: 3957 ZF: 0 |	pop   if
  READ MEM[ALU]
  TICK: 1471 PC:  37 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3957 RG_ALU:   0 SP: 3957 ZF: 0 |	pop   if
  ALU_RES = SP + 1
  TICK: 1472 PC:  37 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3957 RG_ALU:   0 SP: 3957 ZF: 0 |	pop   if
  ALU_RES -> SP
  TICK: 1473 PC:  37 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3957 RG_ALU:   0 SP: 3958 ZF: 0 |	pop   if
  MEM[ALU] -> ALU_RG
  TICK: 1473 PC:  37 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3957 RG_ALU:   0 SP: 3958 ZF: 0 |	pop   if
  ALU_RES = ALU_RG
  TICK: 1474 PC:  37 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3957 RG_ALU:   0 SP: 3958 ZF: 1 |	pop   if
  ALU_RES -> ACC
  TICK: 1475 PC:  37 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3957 RG_ALU:   0 SP: 3958 ZF: 1 |	pop   if
  SP -> ALU_LG
  TICK: 1476 PC:  38 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3958 RG_ALU:   0 SP: 3958 ZF: 1 |	push   if
  ALU_RES = SP - 1
  TICK: 1477 PC:  38 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3958 RG_ALU:   0 SP: 3958 ZF: 0 |	push   if
  ALU_RES -> SP
  TICK: 1478 PC:  38 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3958 RG_ALU:   0 SP: 3957 ZF: 0 |	push   if
  WRITE ACC -> MEM[ALU]
  TICK: 1478 PC:  38 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3958 RG_ALU:   0 SP: 3957 ZF: 0 |	push   if
  ADDR -> ALU_RG
  TICK: 1479 PC:  39 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3958 RG_ALU:   6 SP: 3957 ZF: 0 |	load   var
  ALU_RES = ALU_RG
  TICK: 1480 PC:  39 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3958 RG_ALU:   6 SP: 3957 ZF: 0 |	load   var
  READ MEM[ALU]
  TICK: 1481 PC:  39 ADDR:   0 MEM_OUT: 55 ACC: 0 LG_ALU: 3958 RG_ALU:   6 SP: 3957 ZF: 0 |	load   var
  MEM[ALU] -> ALU_RG
  TICK: 1482 PC:  39 ADDR:   0 MEM_OUT: 55 ACC: 0 LG_ALU: 3958 RG_ALU:  55 SP: 3957 ZF: 0 |	load   var
  ALU_RES = ALU_RG
  TICK: 1483 PC:  39 ADDR:   0 MEM_OUT: 55 ACC: 0 LG_ALU: 3958 RG_ALU:  55 SP: 3957 ZF: 0 |	load   var
  ALU_RES -> ACC
  TICK: 1484 PC:  39 ADDR:   0 MEM_OUT: 55 ACC: 55 LG_ALU: 3958 RG_ALU:  55 SP: 3957 ZF: 0 |	load   var
  ADDR -> ALU_RG
  TICK: 1485 PC:  40 ADDR:   0 MEM_OUT: 55 ACC: 55 LG_ALU: 3958 RG_ALU:   8 SP: 3957 ZF: 0 |	store   var
  ALU_RES = ALU_RG
  TICK: 1486 PC:  40 ADDR:   0 MEM_OUT: 55 ACC: 55 LG_ALU: 3958 RG_ALU:   8 SP: 3957 ZF: 0 |	store   var
  WRITE ACC -> MEM[ALU]
  TICK: 1487 PC:  40 ADDR:   0 MEM_OUT: 55 ACC: 55 LG_ALU: 3958 RG_ALU:   8 SP: 3957 ZF: 0 |	store   var
  NUM -> ALU_RG
  TICK: 1488 PC:  41 ADDR:   0 MEM_OUT: 55 ACC: 55 LG_ALU: 3958 RG_ALU:   1 SP: 3957 ZF: 0 |	load   var
  ALU_RES = ALU_RG
  TICK: 1489 PC:  41 ADDR:   0 MEM_OUT: 55 ACC: 55 LG_ALU: 3958 RG_ALU:   1 SP: 3957 ZF: 0 |	load   var
  ALU_RES -> ACC
  TICK: 1490 PC:  41 ADDR:   0 MEM_OUT: 55 ACC: 1 LG_ALU: 3958 RG_ALU:   1 SP: 3957 ZF: 0 |	load   var
  SP -> ALU_LG
  TICK: 1491 PC:  42 ADDR:   0 MEM_OUT: 55 ACC: 1 LG_ALU: 3957 RG_ALU:   1 SP: 3957 ZF: 0 |	push   var
  ALU_RES = SP - 1
  TICK: 1492 PC:  42 ADDR:   0 MEM_OUT: 55 ACC: 1 LG_ALU: 3957 RG_ALU:   1 SP: 3957 ZF: 0 |	push   var
  ALU_RES -> SP
  TICK: 1493 PC:  42 ADDR:   0 MEM_OUT: 55 ACC: 1 LG_ALU: 3957 RG_ALU:   1 SP: 3956 ZF: 0 |	push   var
  WRITE ACC -> MEM[ALU]
  TICK: 1493 PC:  42 ADDR:   0 MEM_OUT: 55 ACC: 1 LG_ALU: 3957 RG_ALU:   1 SP: 3956 ZF: 0 |	push   var
  ADDR -> ALU_RG
  TICK: 1494 PC:  43 ADDR:   0 MEM_OUT: 55 ACC: 1 LG_ALU: 3957 RG_ALU:   5 SP: 3956 ZF: 0 |	load   +
  ALU_RES = ALU_RG
  TICK: 1495 PC:  43 ADDR:   0 MEM_OUT: 55 ACC: 1 LG_ALU: 3957 RG_ALU:   5 SP: 3956 ZF: 0 |	load   +
  READ MEM[ALU]
  TICK: 1496 PC:  43 ADDR:   0 MEM_OUT: 34 ACC: 1 LG_ALU: 3957 RG_ALU:   5 SP: 3956 ZF: 0 |	load   +
  MEM[ALU] -> ALU_RG
  TICK: 1497 PC:  43 ADDR:   0 MEM_OUT: 34 ACC: 1 LG_ALU: 3957 RG_ALU:  34 SP: 3956 ZF: 0 |	load   +
  ALU_RES = ALU_RG
  TICK: 1498 PC:  43 ADDR:   0 MEM_OUT: 34 ACC: 1 LG_ALU: 3957 RG_ALU:  34 SP: 3956 ZF: 0 |	load   +
  ALU_RES -> ACC
  TICK: 1499 PC:  43 ADDR:   0 MEM_OUT: 34 ACC: 34 LG_ALU: 3957 RG_ALU:  34 SP: 3956 ZF: 0 |	load   +
  ADDR -> ALU_RG
  TICK: 1500 PC:  44 ADDR:   0 MEM_OUT: 34 ACC: 34 LG_ALU: 3957 RG_ALU:   6 SP: 3956 ZF: 0 |	add   +
  ALU_RES = ALU_RG
  TICK: 1501 PC:  44 ADDR:   0 MEM_OUT: 34 ACC: 34 LG_ALU: 3957 RG_ALU:   6 SP: 3956 ZF: 0 |	add   +
  READ MEM[ALU]
  TICK: 1502 PC:  44 ADDR:   0 MEM_OUT: 55 ACC: 34 LG_ALU: 3957 RG_ALU:   6 SP: 3956 ZF: 0 |	add   +
  MEM[ALU] -> ALU_RG
  TICK: 1503 PC:  44 ADDR:   0 MEM_OUT: 55 ACC: 34 LG_ALU: 3957 RG_ALU:  55 SP: 3956 ZF: 0 |	add   +
  ACC -> ALU_LG
  TICK: 1503 PC:  44 ADDR:   0 MEM_OUT: 55 ACC: 34 LG_ALU:  34 RG_ALU:  55 SP: 3956 ZF: 0 |	add   +
  ALU_RES = ALU_LG + ALU_RG
  TICK: 1504 PC:  44 ADDR:   0 MEM_OUT: 55 ACC: 34 LG_ALU:  34 RG_ALU:  55 SP: 3956 ZF: 0 |	add   +
  ALU_RES -> ACC
  TICK: 1505 PC:  44 ADDR:   0 MEM_OUT: 55 ACC: 89 LG_ALU:  34 RG_ALU:  55 SP: 3956 ZF: 0 |	add   +
  SP -> ALU_LG
  TICK: 1506 PC:  45 ADDR:   0 MEM_OUT: 55 ACC: 89 LG_ALU: 3956 RG_ALU:  55 SP: 3956 ZF: 0 |	push   +
  ALU_RES = SP - 1
  TICK: 1507 PC:  45 ADDR:   0 MEM_OUT: 55 ACC: 89 LG_ALU: 3956 RG_ALU:  55 SP: 3956 ZF: 0 |	push   +
  ALU_RES -> SP
  TICK: 1508 PC:  45 ADDR:   0 MEM_OUT: 55 ACC: 89 LG_ALU: 3956 RG_ALU:  55 SP: 3955 ZF: 0 |	push   +
  WRITE ACC -> MEM[ALU]
  TICK: 1508 PC:  45 ADDR:   0 MEM_OUT: 55 ACC: 89 LG_ALU: 3956 RG_ALU:  55 SP: 3955 ZF: 0 |	push   +
  SP -> ALU_LG
  TICK: 1509 PC:  46 ADDR:   0 MEM_OUT: 55 ACC: 89 LG_ALU: 3955 RG_ALU:  55 SP: 3955 ZF: 0 |	pop   var
  ALU_RES = ALU_LG
  TICK: 1510 PC:  46 ADDR:   0 MEM_OUT: 55 ACC: 89 LG_ALU: 3955 RG_ALU:  55 SP: 3955 ZF: 0 |	pop   var
  READ MEM[ALU]
  TICK: 1511 PC:  46 ADDR:   0 MEM_OUT: 89 ACC: 89 LG_ALU: 3955 RG_ALU:  55 SP: 3955 ZF: 0 |	pop   var
  ALU_RES = SP + 1
  TICK: 1512 PC:  46 ADDR:   0 MEM_OUT: 89 ACC: 89 LG_ALU: 3955 RG_ALU:  55 SP: 3955 ZF: 0 |	pop   var
  ALU_RES -> SP
  TICK: 1513 PC:  46 ADDR:   0 MEM_OUT: 89 ACC: 89 LG_ALU: 3955 RG_ALU:  55 SP: 3956 ZF: 0 |	pop   var
  MEM[ALU] -> ALU_RG
  TICK: 1513 PC:  46 ADDR:   0 MEM_OUT: 89 ACC: 89 LG_ALU: 3955 RG_ALU:  89 SP: 3956 ZF: 0 |	pop   var
  ALU_RES = ALU_RG
  TICK: 1514 PC:  46 ADDR:   0 MEM_OUT: 89 ACC: 89 LG_ALU: 3955 RG_ALU:  89 SP: 3956 ZF: 0 |	pop   var
  ALU_RES -> ACC
  TICK: 1515 PC:  46 ADDR:   0 MEM_OUT: 89 ACC: 89 LG_ALU: 3955 RG_ALU:  89 SP: 3956 ZF: 0 |	pop   var
  ADDR -> ALU_RG
  TICK: 1516 PC:  47 ADDR:   0 MEM_OUT: 89 ACC: 89 LG_ALU: 3955 RG_ALU:   6 SP: 3956 ZF: 0 |	store   var
  ALU_RES = ALU_RG
  TICK: 1517 PC:  47 ADDR:   0 MEM_OUT: 89 ACC: 89 LG_ALU: 3955 RG_ALU:   6 SP: 3956 ZF: 0 |	store   var
  WRITE ACC -> MEM[ALU]
  TICK: 1518 PC:  47 ADDR:   0 MEM_OUT: 89 ACC: 89 LG_ALU: 3955 RG_ALU:   6 SP: 3956 ZF: 0 |	store   var
  NUM -> ALU_RG
  TICK: 1519 PC:  48 ADDR:   0 MEM_OUT: 89 ACC: 89 LG_ALU: 3955 RG_ALU:   1 SP: 3956 ZF: 0 |	load   var
  ALU_RES = ALU_RG
  TICK: 1520 PC:  48 ADDR:   0 MEM_OUT: 89 ACC: 89 LG_ALU: 3955 RG_ALU:   1 SP: 3956 ZF: 0 |	load   var
  ALU_RES -> ACC
  TICK: 1521 PC:  48 ADDR:   0 MEM_OUT: 89 ACC: 1 LG_ALU: 3955 RG_ALU:   1 SP: 3956 ZF: 0 |	load   var
  SP -> ALU_LG
  TICK: 1522 PC:  49 ADDR:   0 MEM_OUT: 89 ACC: 1 LG_ALU: 3956 RG_ALU:   1 SP: 3956 ZF: 0 |	push   var
  ALU_RES = SP - 1
  TICK: 1523 PC:  49 ADDR:   0 MEM_OUT: 89 ACC: 1 LG_ALU: 3956 RG_ALU:   1 SP: 3956 ZF: 0 |	push   var
  ALU_RES -> SP
  TICK: 1524 PC:  49 ADDR:   0 MEM_OUT: 89 ACC: 1 LG_ALU: 3956 RG_ALU:   1 SP: 3955 ZF: 0 |	push   var
  WRITE ACC -> MEM[ALU]
  TICK: 1524 PC:  49 ADDR:   0 MEM_OUT: 89 ACC: 1 LG_ALU: 3956 RG_ALU:   1 SP: 3955 ZF: 0 |	push   var
  ADDR -> ALU_RG
  TICK: 1525 PC:  50 ADDR:   0 MEM_OUT: 89 ACC: 1 LG_ALU: 3956 RG_ALU:   8 SP: 3955 ZF: 0 |	load   var
  ALU_RES = ALU_RG
  TICK: 1526 PC:  50 ADDR:   0 MEM_OUT: 89 ACC: 1 LG_ALU: 3956 RG_ALU:   8 SP: 3955 ZF: 0 |	load   var
  READ MEM[ALU]
  TICK: 1527 PC:  50 ADDR:   0 MEM_OUT: 55 ACC: 1 LG_ALU: 3956 RG_ALU:   8 SP: 3955 ZF: 0 |	load   var
  MEM[ALU] -> ALU_RG
  TICK: 1528 PC:  50 ADDR:   0 MEM_OUT: 55 ACC: 1 LG_ALU: 3956 RG_ALU:  55 SP: 3955 ZF: 0 |	load   var
  ALU_RES = ALU_RG
  TICK: 1529 PC:  50 ADDR:   0 MEM_OUT: 55 ACC: 1 LG_ALU: 3956 RG_ALU:  55 SP: 3955 ZF: 0 |	load   var
  ALU_RES -> ACC
  TICK: 1530 PC:  50 ADDR:   0 MEM_OUT: 55 ACC: 55 LG_ALU: 3956 RG_ALU:  55 SP: 3955 ZF: 0 |	load   var
  ADDR -> ALU_RG
  TICK: 1531 PC:  51 ADDR:   0 MEM_OUT: 55 ACC: 55 LG_ALU: 3956 RG_ALU:   5 SP: 3955 ZF: 0 |	store   var
  ALU_RES = ALU_RG
  TICK: 1532 PC:  51 ADDR:   0 MEM_OUT: 55 ACC: 55 LG_ALU: 3956 RG_ALU:   5 SP: 3955 ZF: 0 |	store   var
  WRITE ACC -> MEM[ALU]
  TICK: 1533 PC:  51 ADDR:   0 MEM_OUT: 55 ACC: 55 LG_ALU: 3956 RG_ALU:   5 SP: 3955 ZF: 0 |	store   var
  NUM -> ALU_RG
  TICK: 1534 PC:  52 ADDR:   0 MEM_OUT: 55 ACC: 55 LG_ALU: 3956 RG_ALU:   1 SP: 3955 ZF: 0 |	load   var
  ALU_RES = ALU_RG
  TICK: 1535 PC:  52 ADDR:   0 MEM_OUT: 55 ACC: 55 LG_ALU: 3956 RG_ALU:   1 SP: 3955 ZF: 0 |	load   var
  ALU_RES -> ACC
  TICK: 1536 PC:  52 ADDR:   0 MEM_OUT: 55 ACC: 1 LG_ALU: 3956 RG_ALU:   1 SP: 3955 ZF: 0 |	load   var
  SP -> ALU_LG
  TICK: 1537 PC:  53 ADDR:   0 MEM_OUT: 55 ACC: 1 LG_ALU: 3955 RG_ALU:   1 SP: 3955 ZF: 0 |	push   var
  ALU_RES = SP - 1
  TICK: 1538 PC:  53 ADDR:   0 MEM_OUT: 55 ACC: 1 LG_ALU: 3955 RG_ALU:   1 SP: 3955 ZF: 0 |	push   var
  ALU_RES -> SP
  TICK: 1539 PC:  53 ADDR:   0 MEM_OUT: 55 ACC: 1 LG_ALU: 3955 RG_ALU:   1 SP: 3954 ZF: 0 |	push   var
  WRITE ACC -> MEM[ALU]
  TICK: 1539 PC:  53 ADDR:   0 MEM_OUT: 55 ACC: 1 LG_ALU: 3955 RG_ALU:   1 SP: 3954 ZF: 0 |	push   var
  ADDR -> ALU_RG
  TICK: 1540 PC:  54 ADDR:   0 MEM_OUT: 55 ACC: 1 LG_ALU: 3955 RG_ALU:   6 SP: 3954 ZF: 0 |	load   <
  ALU_RES = ALU_RG
  TICK: 1541 PC:  54 ADDR:   0 MEM_OUT: 55 ACC: 1 LG_ALU: 3955 RG_ALU:   6 SP: 3954 ZF: 0 |	load   <
  READ MEM[ALU]
  TICK: 1542 PC:  54 ADDR:   0 MEM_OUT: 89 ACC: 1 LG_ALU: 3955 RG_ALU:   6 SP: 3954 ZF: 0 |	load   <
  MEM[ALU] -> ALU_RG
  TICK: 1543 PC:  54 ADDR:   0 MEM_OUT: 89 ACC: 1 LG_ALU: 3955 RG_ALU:  89 SP: 3954 ZF: 0 |	load   <
  ALU_RES = ALU_RG
  TICK: 1544 PC:  54 ADDR:   0 MEM_OUT: 89 ACC: 1 LG_ALU: 3955 RG_ALU:  89 SP: 3954 ZF: 0 |	load   <
  ALU_RES -> ACC
  TICK: 1545 PC:  54 ADDR:   0 MEM_OUT: 89 ACC: 89 LG_ALU: 3955 RG_ALU:  89 SP: 3954 ZF: 0 |	load   <
  ADDR -> ALU_RG
  TICK: 1546 PC:  55 ADDR:   0 MEM_OUT: 89 ACC: 89 LG_ALU: 3955 RG_ALU:   7 SP: 3954 ZF: 0 |	sub   <
  ALU_RES = ALU_RG
  TICK: 1547 PC:  55 ADDR:   0 MEM_OUT: 89 ACC: 89 LG_ALU: 3955 RG_ALU:   7 SP: 3954 ZF: 0 |	sub   <
  READ MEM[ALU]
  TICK: 1548 PC:  55 ADDR:   0 MEM_OUT: 400000 ACC: 89 LG_ALU: 3955 RG_ALU:   7 SP: 3954 ZF: 0 |	sub   <
  MEM[ALU] -> ALU_RG
  TICK: 1549 PC:  55 ADDR:   0 MEM_OUT: 400000 ACC: 89 LG_ALU: 3955 RG_ALU: 400000 SP: 3954 ZF: 0 |	sub   <
  ACC -> ALU_LG
  TICK: 1549 PC:  55 ADDR:   0 MEM_OUT: 400000 ACC: 89 LG_ALU:  89 RG_ALU: 400000 SP: 3954 ZF: 0 |	sub   <
  ALU_RES = ALU_LG + ALU_RG
  TICK: 1550 PC:  55 ADDR:   0 MEM_OUT: 400000 ACC: 89 LG_ALU:  89 RG_ALU: 400000 SP: 3954 ZF: 0 |	sub   <
  ALU_RES -> ACC
  TICK: 1551 PC:  55 ADDR:   0 MEM_OUT: 400000 ACC: -399911 LG_ALU:  89 RG_ALU: 400000 SP: 3954 ZF: 0 |	sub   <
  PC + 1 -> PC
  NUM -> ALU_RG
  TICK: 1552 PC:  57 ADDR:   0 MEM_OUT: 400000 ACC: -399911 LG_ALU:  89 RG_ALU:   1 SP: 3954 ZF: 0 |	load   <
  ALU_RES = ALU_RG
  TICK: 1553 PC:  57 ADDR:   0 MEM_OUT: 400000 ACC: -399911 LG_ALU:  89 RG_ALU:   1 SP: 3954 ZF: 0 |	load   <
  ALU_RES -> ACC
  TICK: 1554 PC:  57 ADDR:   0 MEM_OUT: 400000 ACC: 1 LG_ALU:  89 RG_ALU:   1 SP: 3954 ZF: 0 |	load   <
  ADDR -> PC
  SP -> ALU_LG
  TICK: 1556 PC:  60 ADDR:   0 MEM_OUT: 400000 ACC: 1 LG_ALU: 3954 RG_ALU:   1 SP: 3954 ZF: 0 |	push   <
  ALU_RES = SP - 1
  TICK: 1557 PC:  60 ADDR:   0 MEM_OUT: 400000 ACC: 1 LG_ALU: 3954 RG_ALU:   1 SP: 3954 ZF: 0 |	push   <
  ALU_RES -> SP
  TICK: 1558 PC:  60 ADDR:   0 MEM_OUT: 400000 ACC: 1 LG_ALU: 3954 RG_ALU:   1 SP: 3953 ZF: 0 |	push   <
  WRITE ACC -> MEM[ALU]
  TICK: 1558 PC:  60 ADDR:   0 MEM_OUT: 400000 ACC: 1 LG_ALU: 3954 RG_ALU:   1 SP: 3953 ZF: 0 |	push   <
  SP -> ALU_LG
  TICK: 1559 PC:  61 ADDR:   0 MEM_OUT: 400000 ACC: 1 LG_ALU: 3953 RG_ALU:   1 SP: 3953 ZF: 0 |	pop
  ALU_RES = ALU_LG
  TICK: 1560 PC:  61 ADDR:   0 MEM_OUT: 400000 ACC: 1 LG_ALU: 3953 RG_ALU:   1 SP: 3953 ZF: 0 |	pop
  READ MEM[ALU]
  TICK: 1561 PC:  61 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3953 RG_ALU:   1 SP: 3953 ZF: 0 |	pop
  ALU_RES = SP + 1
  TICK: 1562 PC:  61 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3953 RG_ALU:   1 SP: 3953 ZF: 0 |	pop
  ALU_RES -> SP
  TICK: 1563 PC:  61 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3953 RG_ALU:   1 SP: 3954 ZF: 0 |	pop
  MEM[ALU] -> ALU_RG
  TICK: 1563 PC:  61 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3953 RG_ALU:   1 SP: 3954 ZF: 0 |	pop
  ALU_RES = ALU_RG
  TICK: 1564 PC:  61 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3953 RG_ALU:   1 SP: 3954 ZF: 0 |	pop
  ALU_RES -> ACC
  TICK: 1565 PC:  61 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3953 RG_ALU:   1 SP: 3954 ZF: 0 |	pop
  ADDR -> PC
  ADDR -> PC
  ADDR -> ALU_RG
  TICK: 1568 PC:  24 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3953 RG_ALU:   6 SP: 3954 ZF: 0 |	load
  ALU_RES = ALU_RG
  TICK: 1569 PC:  24 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3953 RG_ALU:   6 SP: 3954 ZF: 0 |	load
  READ MEM[ALU]
  TICK: 1570 PC:  24 ADDR:   0 MEM_OUT: 89 ACC: 1 LG_ALU: 3953 RG_ALU:   6 SP: 3954 ZF: 0 |	load
  MEM[ALU] -> ALU_RG
  TICK: 1571 PC:  24 ADDR:   0 MEM_OUT: 89 ACC: 1 LG_ALU: 3953 RG_ALU:  89 SP: 3954 ZF: 0 |	load
  ALU_RES = ALU_RG
  TICK: 1572 PC:  24 ADDR:   0 MEM_OUT: 89 ACC: 1 LG_ALU: 3953 RG_ALU:  89 SP: 3954 ZF: 0 |	load
  ALU_RES -> ACC
  TICK: 1573 PC:  24 ADDR:   0 MEM_OUT: 89 ACC: 89 LG_ALU: 3953 RG_ALU:  89 SP: 3954 ZF: 0 |	load
  NUM -> ALU_RG
  TICK: 1574 PC:  25 ADDR:   0 MEM_OUT: 89 ACC: 89 LG_ALU: 3953 RG_ALU:   2 SP: 3954 ZF: 0 |	mod
  ACC -> ALU_LG
  TICK: 1574 PC:  25 ADDR:   0 MEM_OUT: 89 ACC: 89 LG_ALU:  89 RG_ALU:   2 SP: 3954 ZF: 0 |	mod
  ALU_RES = ALU_LG % ALU_RG
  TICK: 1575 PC:  25 ADDR:   0 MEM_OUT: 89 ACC: 89 LG_ALU:  89 RG_ALU:   2 SP: 3954 ZF: 0 |	mod
  ALU_RES -> ACC
  TICK: 1576 PC:  25 ADDR:   0 MEM_OUT: 89 ACC: 1 LG_ALU:  89 RG_ALU:   2 SP: 3954 ZF: 0 |	mod
  SP -> ALU_LG
  TICK: 1577 PC:  26 ADDR:   0 MEM_OUT: 89 ACC: 1 LG_ALU: 3954 RG_ALU:   2 SP: 3954 ZF: 0 |	push
  ALU_RES = SP - 1
  TICK: 1578 PC:  26 ADDR:   0 MEM_OUT: 89 ACC: 1 LG_ALU: 3954 RG_ALU:   2 SP: 3954 ZF: 0 |	push
  ALU_RES -> SP
  TICK: 1579 PC:  26 ADDR:   0 MEM_OUT: 89 ACC: 1 LG_ALU: 3954 RG_ALU:   2 SP: 3953 ZF: 0 |	push
  WRITE ACC -> MEM[ALU]
  TICK: 1579 PC:  26 ADDR:   0 MEM_OUT: 89 ACC: 1 LG_ALU: 3954 RG_ALU:   2 SP: 3953 ZF: 0 |	push
  NUM -> ALU_RG
  TICK: 1580 PC:  27 ADDR:   0 MEM_OUT: 89 ACC: 1 LG_ALU: 3954 RG_ALU:   0 SP: 3953 ZF: 0 |	load   =
  ALU_RES = ALU_RG
  TICK: 1581 PC:  27 ADDR:   0 MEM_OUT: 89 ACC: 1 LG_ALU: 3954 RG_ALU:   0 SP: 3953 ZF: 1 |	load   =
  ALU_RES -> ACC
  TICK: 1582 PC:  27 ADDR:   0 MEM_OUT: 89 ACC: 0 LG_ALU: 3954 RG_ALU:   0 SP: 3953 ZF: 1 |	load   =
  SP -> ALU_LG
  TICK: 1583 PC:  28 ADDR:   0 MEM_OUT: 89 ACC: 0 LG_ALU: 3953 RG_ALU:   0 SP: 3953 ZF: 1 |	sub   =
  ALU_RES = ALU_LG
  TICK: 1584 PC:  28 ADDR:   0 MEM_OUT: 89 ACC: 0 LG_ALU: 3953 RG_ALU:   0 SP: 3953 ZF: 0 |	sub   =
  READ MEM[ALU]
  TICK: 1585 PC:  28 ADDR:   0 MEM_OUT: 1 ACC: 0 LG_ALU: 3953 RG_ALU:   0 SP: 3953 ZF: 0 |	sub   =
  MEM[ALU] -> ALU_RG
  TICK: 1586 PC:  28 ADDR:   0 MEM_OUT: 1 ACC: 0 LG_ALU: 3953 RG_ALU:   1 SP: 3953 ZF: 0 |	sub   =
  ALU_RES = SP + 1
  TICK: 1587 PC:  28 ADDR:   0 MEM_OUT: 1 ACC: 0 LG_ALU: 3953 RG_ALU:   1 SP: 3953 ZF: 0 |	sub   =
  ALU_RES -> SP
  TICK: 1588 PC:  28 ADDR:   0 MEM_OUT: 1 ACC: 0 LG_ALU: 3953 RG_ALU:   1 SP: 3954 ZF: 0 |	sub   =
  ACC -> ALU_LG
  TICK: 1588 PC:  28 ADDR:   0 MEM_OUT: 1 ACC: 0 LG_ALU:   0 RG_ALU:   1 SP: 3954 ZF: 0 |	sub   =
  ALU_RES = ALU_LG + ALU_RG
  TICK: 1589 PC:  28 ADDR:   0 MEM_OUT: 1 ACC: 0 LG_ALU:   0 RG_ALU:   1 SP: 3954 ZF: 0 |	sub   =
  ALU_RES -> ACC
  TICK: 1590 PC:  28 ADDR:   0 MEM_OUT: 1 ACC: -1 LG_ALU:   0 RG_ALU:   1 SP: 3954 ZF: 0 |	sub   =
  ADDR -> PC
  NUM -> ALU_RG
  TICK: 1592 PC:  32 ADDR:   0 MEM_OUT: 1 ACC: -1 LG_ALU:   0 RG_ALU:   0 SP: 3954 ZF: 0 |	load   =
  ALU_RES = ALU_RG
  TICK: 1593 PC:  32 ADDR:   0 MEM_OUT: 1 ACC: -1 LG_ALU:   0 RG_ALU:   0 SP: 3954 ZF: 1 |	load   =
  ALU_RES -> ACC
  TICK: 1594 PC:  32 ADDR:   0 MEM_OUT: 1 ACC: 0 LG_ALU:   0 RG_ALU:   0 SP: 3954 ZF: 1 |	load   =
  SP -> ALU_LG
  TICK: 1595 PC:  33 ADDR:   0 MEM_OUT: 1 ACC: 0 LG_ALU: 3954 RG_ALU:   0 SP: 3954 ZF: 1 |	push   =
  ALU_RES = SP - 1
  TICK: 1596 PC:  33 ADDR:   0 MEM_OUT: 1 ACC: 0 LG_ALU: 3954 RG_ALU:   0 SP: 3954 ZF: 0 |	push   =
  ALU_RES -> SP
  TICK: 1597 PC:  33 ADDR:   0 MEM_OUT: 1 ACC: 0 LG_ALU: 3954 RG_ALU:   0 SP: 3953 ZF: 0 |	push   =
  WRITE ACC -> MEM[ALU]
  TICK: 1597 PC:  33 ADDR:   0 MEM_OUT: 1 ACC: 0 LG_ALU: 3954 RG_ALU:   0 SP: 3953 ZF: 0 |	push   =
  SP -> ALU_LG
  TICK: 1598 PC:  34 ADDR:   0 MEM_OUT: 1 ACC: 0 LG_ALU: 3953 RG_ALU:   0 SP: 3953 ZF: 0 |	pop   if
  ALU_RES = ALU_LG
  TICK: 1599 PC:  34 ADDR:   0 MEM_OUT: 1 ACC: 0 LG_ALU: 3953 RG_ALU:   0 SP: 3953 ZF: 0 |	pop   if
  READ MEM[ALU]
  TICK: 1600 PC:  34 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3953 RG_ALU:   0 SP: 3953 ZF: 0 |	pop   if
  ALU_RES = SP + 1
  TICK: 1601 PC:  34 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3953 RG_ALU:   0 SP: 3953 ZF: 0 |	pop   if
  ALU_RES -> SP
  TICK: 1602 PC:  34 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3953 RG_ALU:   0 SP: 3954 ZF: 0 |	pop   if
  MEM[ALU] -> ALU_RG
  TICK: 1602 PC:  34 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3953 RG_ALU:   0 SP: 3954 ZF: 0 |	pop   if
  ALU_RES = ALU_RG
  TICK: 1603 PC:  34 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3953 RG_ALU:   0 SP: 3954 ZF: 1 |	pop   if
  ALU_RES -> ACC
  TICK: 1604 PC:  34 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3953 RG_ALU:   0 SP: 3954 ZF: 1 |	pop   if
  PC + 1 -> PC
  ADDR -> PC
  NUM -> ALU_RG
  TICK: 1606 PC:  20 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3953 RG_ALU:   0 SP: 3954 ZF: 1 |	load   +
  ALU_RES = ALU_RG
  TICK: 1607 PC:  20 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3953 RG_ALU:   0 SP: 3954 ZF: 1 |	load   +
  ALU_RES -> ACC
  TICK: 1608 PC:  20 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3953 RG_ALU:   0 SP: 3954 ZF: 1 |	load   +
  NUM -> ALU_RG
  TICK: 1609 PC:  21 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3953 RG_ALU:   0 SP: 3954 ZF: 1 |	add   +
  ACC -> ALU_LG
  TICK: 1609 PC:  21 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU:   0 RG_ALU:   0 SP: 3954 ZF: 1 |	add   +
  ALU_RES = ALU_LG + ALU_RG
  TICK: 1610 PC:  21 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU:   0 RG_ALU:   0 SP: 3954 ZF: 1 |	add   +
  ALU_RES -> ACC
  TICK: 1611 PC:  21 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU:   0 RG_ALU:   0 SP: 3954 ZF: 1 |	add   +
  SP -> ALU_LG
  TICK: 1612 PC:  22 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3954 RG_ALU:   0 SP: 3954 ZF: 1 |	push   +
  ALU_RES = SP - 1
  TICK: 1613 PC:  22 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3954 RG_ALU:   0 SP: 3954 ZF: 0 |	push   +
  ALU_RES -> SP
  TICK: 1614 PC:  22 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3954 RG_ALU:   0 SP: 3953 ZF: 0 |	push   +
  WRITE ACC -> MEM[ALU]
  TICK: 1614 PC:  22 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3954 RG_ALU:   0 SP: 3953 ZF: 0 |	push   +
  ADDR -> PC
  SP -> ALU_LG
  TICK: 1616 PC:  37 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3953 RG_ALU:   0 SP: 3953 ZF: 0 |	pop   if
  ALU_RES = ALU_LG
  TICK: 1617 PC:  37 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3953 RG_ALU:   0 SP: 3953 ZF: 0 |	pop   if
  READ MEM[ALU]
  TICK: 1618 PC:  37 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3953 RG_ALU:   0 SP: 3953 ZF: 0 |	pop   if
  ALU_RES = SP + 1
  TICK: 1619 PC:  37 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3953 RG_ALU:   0 SP: 3953 ZF: 0 |	pop   if
  ALU_RES -> SP
  TICK: 1620 PC:  37 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3953 RG_ALU:   0 SP: 3954 ZF: 0 |	pop   if
  MEM[ALU] -> ALU_RG
  TICK: 1620 PC:  37 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3953 RG_ALU:   0 SP: 3954 ZF: 0 |	pop   if
  ALU_RES = ALU_RG
  TICK: 1621 PC:  37 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3953 RG_ALU:   0 SP: 3954 ZF: 1 |	pop   if
  ALU_RES -> ACC
  TICK: 1622 PC:  37 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3953 RG_ALU:   0 SP: 3954 ZF: 1 |	pop   if
  SP -> ALU_LG
  TICK: 1623 PC:  38 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3954 RG_ALU:   0 SP: 3954 ZF: 1 |	push   if
  ALU_RES = SP - 1
  TICK: 1624 PC:  38 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3954 RG_ALU:   0 SP: 3954 ZF: 0 |	push   if
  ALU_RES -> SP
  TICK: 1625 PC:  38 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3954 RG_ALU:   0 SP: 3953 ZF: 0 |	push   if
  WRITE ACC -> MEM[ALU]
  TICK: 1625 PC:  38 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3954 RG_ALU:   0 SP: 3953 ZF: 0 |	push   if
  ADDR -> ALU_RG
  TICK: 1626 PC:  39 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3954 RG_ALU:   6 SP: 3953 ZF: 0 |	load   var
  ALU_RES = ALU_RG
  TICK: 1627 PC:  39 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3954 RG_ALU:   6 SP: 3953 ZF: 0 |	load   var
  READ MEM[ALU]
  TICK: 1628 PC:  39 ADDR:   0 MEM_OUT: 89 ACC: 0 LG_ALU: 3954 RG_ALU:   6 SP: 3953 ZF: 0 |	load   var
  MEM[ALU] -> ALU_RG
  TICK: 1629 PC:  39 ADDR:   0 MEM_OUT: 89 ACC: 0 LG_ALU: 3954 RG_ALU:  89 SP: 3953 ZF: 0 |	load   var
  ALU_RES = ALU_RG
  TICK: 1630 PC:  39 ADDR:   0 MEM_OUT: 89 ACC: 0 LG_ALU: 3954 RG_ALU:  89 SP: 3953 ZF: 0 |	load   var
  ALU_RES -> ACC
  TICK: 1631 PC:  39 ADDR:   0 MEM_OUT: 89 ACC: 89 LG_ALU: 3954 RG_ALU:  89 SP: 3953 ZF: 0 |	load   var
  ADDR -> ALU_RG
  TICK: 1632 PC:  40 ADDR:   0 MEM_OUT: 89 ACC: 89 LG_ALU: 3954 RG_ALU:   8 SP: 3953 ZF: 0 |	store   var
  ALU_RES = ALU_RG
  TICK: 1633 PC:  40 ADDR:   0 MEM_OUT: 89 ACC: 89 LG_ALU: 3954 RG_ALU:   8 SP: 3953 ZF: 0 |	store   var
  WRITE ACC -> MEM[ALU]
  TICK: 1634 PC:  40 ADDR:   0 MEM_OUT: 89 ACC: 89 LG_ALU: 3954 RG_ALU:   8 SP: 3953 ZF: 0 |	store   var
  NUM -> ALU_RG
  TICK: 1635 PC:  41 ADDR:   0 MEM_OUT: 89 ACC: 89 LG_ALU: 3954 RG_ALU:   1 SP: 3953 ZF: 0 |	load   var
  ALU_RES = ALU_RG
  TICK: 1636 PC:  41 ADDR:   0 MEM_OUT: 89 ACC: 89 LG_ALU: 3954 RG_ALU:   1 SP: 3953 ZF: 0 |	load   var
  ALU_RES -> ACC
  TICK: 1637 PC:  41 ADDR:   0 MEM_OUT: 89 ACC: 1 LG_ALU: 3954 RG_ALU:   1 SP: 3953 ZF: 0 |	load   var
  SP -> ALU_LG
  TICK: 1638 PC:  42 ADDR:   0 MEM_OUT: 89 ACC: 1 LG_ALU: 3953 RG_ALU:   1 SP: 3953 ZF: 0 |	push   var
  ALU_RES = SP - 1
  TICK: 1639 PC:  42 ADDR:   0 MEM_OUT: 89 ACC: 1 LG_ALU: 3953 RG_ALU:   1 SP: 3953 ZF: 0 |	push   var
  ALU_RES -> SP
  TICK: 1640 PC:  42 ADDR:   0 MEM_OUT: 89 ACC: 1 LG_ALU: 3953 RG_ALU:   1 SP: 3952 ZF: 0 |	push   var
  WRITE ACC -> MEM[ALU]
  TICK: 1640 PC:  42 ADDR:   0 MEM_OUT: 89 ACC: 1 LG_ALU: 3953 RG_ALU:   1 SP: 3952 ZF: 0 |	push   var
  ADDR -> ALU_RG
  TICK: 1641 PC:  43 ADDR:   0 MEM_OUT: 89 ACC: 1 LG_ALU: 3953 RG_ALU:   5 SP: 3952 ZF: 0 |	load   +
  ALU_RES = ALU_RG
  TICK: 1642 PC:  43 ADDR:   0 MEM_OUT: 89 ACC: 1 LG_ALU: 3953 RG_ALU:   5 SP: 3952 ZF: 0 |	load   +
  READ MEM[ALU]
  TICK: 1643 PC:  43 ADDR:   0 MEM_OUT: 55 ACC: 1 LG_ALU: 3953 RG_ALU:   5 SP: 3952 ZF: 0 |	load   +
  MEM[ALU] -> ALU_RG
  TICK: 1644 PC:  43 ADDR:   0 MEM_OUT: 55 ACC: 1 LG_ALU: 3953 RG_ALU:  55 SP: 3952 ZF: 0 |	load   +
  ALU_RES = ALU_RG
  TICK: 1645 PC:  43 ADDR:   0 MEM_OUT: 55 ACC: 1 LG_ALU: 3953 RG_ALU:  55 SP: 3952 ZF: 0 |	load   +
  ALU_RES -> ACC
  TICK: 1646 PC:  43 ADDR:   0 MEM_OUT: 55 ACC: 55 LG_ALU: 3953 RG_ALU:  55 SP: 3952 ZF: 0 |	load   +
  ADDR -> ALU_RG
  TICK: 1647 PC:  44 ADDR:   0 MEM_OUT: 55 ACC: 55 LG_ALU: 3953 RG_ALU:   6 SP: 3952 ZF: 0 |	add   +
  ALU_RES = ALU_RG
  TICK: 1648 PC:  44 ADDR:   0 MEM_OUT: 55 ACC: 55 LG_ALU: 3953 RG_ALU:   6 SP: 3952 ZF: 0 |	add   +
  READ MEM[ALU]
  TICK: 1649 PC:  44 ADDR:   0 MEM_OUT: 89 ACC: 55 LG_ALU: 3953 RG_ALU:   6 SP: 3952 ZF: 0 |	add   +
  MEM[ALU] -> ALU_RG
  TICK: 1650 PC:  44 ADDR:   0 MEM_OUT: 89 ACC: 55 LG_ALU: 3953 RG_ALU:  89 SP: 3952 ZF: 0 |	add   +
  ACC -> ALU_LG
  TICK: 1650 PC:  44 ADDR:   0 MEM_OUT: 89 ACC: 55 LG_ALU:  55 RG_ALU:  89 SP: 3952 ZF: 0 |	add   +
  ALU_RES = ALU_LG + ALU_RG
  TICK: 1651 PC:  44 ADDR:   0 MEM_OUT: 89 ACC: 55 LG_ALU:  55 RG_ALU:  89 SP: 3952 ZF: 0 |	add   +
  ALU_RES -> ACC
  TICK: 1652 PC:  44 ADDR:   0 MEM_OUT: 89 ACC: 144 LG_ALU:  55 RG_ALU:  89 SP: 3952 ZF: 0 |	add   +
  SP -> ALU_LG
  TICK: 1653 PC:  45 ADDR:   0 MEM_OUT: 89 ACC: 144 LG_ALU: 3952 RG_ALU:  89 SP: 3952 ZF: 0 |	push   +
  ALU_RES = SP - 1
  TICK: 1654 PC:  45 ADDR:   0 MEM_OUT: 89 ACC: 144 LG_ALU: 3952 RG_ALU:  89 SP: 3952 ZF: 0 |	push   +
  ALU_RES -> SP
  TICK: 1655 PC:  45 ADDR:   0 MEM_OUT: 89 ACC: 144 LG_ALU: 3952 RG_ALU:  89 SP: 3951 ZF: 0 |	push   +
  WRITE ACC -> MEM[ALU]
  TICK: 1655 PC:  45 ADDR:   0 MEM_OUT: 89 ACC: 144 LG_ALU: 3952 RG_ALU:  89 SP: 3951 ZF: 0 |	push   +
  SP -> ALU_LG
  TICK: 1656 PC:  46 ADDR:   0 MEM_OUT: 89 ACC: 144 LG_ALU: 3951 RG_ALU:  89 SP: 3951 ZF: 0 |	pop   var
  ALU_RES = ALU_LG
  TICK: 1657 PC:  46 ADDR:   0 MEM_OUT: 89 ACC: 144 LG_ALU: 3951 RG_ALU:  89 SP: 3951 ZF: 0 |	pop   var
  READ MEM[ALU]
  TICK: 1658 PC:  46 ADDR:   0 MEM_OUT: 144 ACC: 144 LG_ALU: 3951 RG_ALU:  89 SP: 3951 ZF: 0 |	pop   var
  ALU_RES = SP + 1
  TICK: 1659 PC:  46 ADDR:   0 MEM_OUT: 144 ACC: 144 LG_ALU: 3951 RG_ALU:  89 SP: 3951 ZF: 0 |	pop   var
  ALU_RES -> SP
  TICK: 1660 PC:  46 ADDR:   0 MEM_OUT: 144 ACC: 144 LG_ALU: 3951 RG_ALU:  89 SP: 3952 ZF: 0 |	pop   var
  MEM[ALU] -> ALU_RG
  TICK: 1660 PC:  46 ADDR:   0 MEM_OUT: 144 ACC: 144 LG_ALU: 3951 RG_ALU: 144 SP: 3952 ZF: 0 |	pop   var
  ALU_RES = ALU_RG
  TICK: 1661 PC:  46 ADDR:   0 MEM_OUT: 144 ACC: 144 LG_ALU: 3951 RG_ALU: 144 SP: 3952 ZF: 0 |	pop   var
  ALU_RES -> ACC
  TICK: 1662 PC:  46 ADDR:   0 MEM_OUT: 144 ACC: 144 LG_ALU: 3951 RG_ALU: 144 SP: 3952 ZF: 0 |	pop   var
  ADDR -> ALU_RG
  TICK: 1663 PC:  47 ADDR:   0 MEM_OUT: 144 ACC: 144 LG_ALU: 3951 RG_ALU:   6 SP: 3952 ZF: 0 |	store   var
  ALU_RES = ALU_RG
  TICK: 1664 PC:  47 ADDR:   0 MEM_OUT: 144 ACC: 144 LG_ALU: 3951 RG_ALU:   6 SP: 3952 ZF: 0 |	store   var
  WRITE ACC -> MEM[ALU]
  TICK: 1665 PC:  47 ADDR:   0 MEM_OUT: 144 ACC: 144 LG_ALU: 3951 RG_ALU:   6 SP: 3952 ZF: 0 |	store   var
  NUM -> ALU_RG
  TICK: 1666 PC:  48 ADDR:   0 MEM_OUT: 144 ACC: 144 LG_ALU: 3951 RG_ALU:   1 SP: 3952 ZF: 0 |	load   var
  ALU_RES = ALU_RG
  TICK: 1667 PC:  48 ADDR:   0 MEM_OUT: 144 ACC: 144 LG_ALU: 3951 RG_ALU:   1 SP: 3952 ZF: 0 |	load   var
  ALU_RES -> ACC
  TICK: 1668 PC:  48 ADDR:   0 MEM_OUT: 144 ACC: 1 LG_ALU: 3951 RG_ALU:   1 SP: 3952 ZF: 0 |	load   var
  SP -> ALU_LG
  TICK: 1669 PC:  49 ADDR:   0 MEM_OUT: 144 ACC: 1 LG_ALU: 3952 RG_ALU:   1 SP: 3952 ZF: 0 |	push   var
  ALU_RES = SP - 1
  TICK: 1670 PC:  49 ADDR:   0 MEM_OUT: 144 ACC: 1 LG_ALU: 3952 RG_ALU:   1 SP: 3952 ZF: 0 |	push   var
  ALU_RES -> SP
  TICK: 1671 PC:  49 ADDR:   0 MEM_OUT: 144 ACC: 1 LG_ALU: 3952 RG_ALU:   1 SP: 3951 ZF: 0 |	push   var
  WRITE ACC -> MEM[ALU]
  TICK: 1671 PC:  49 ADDR:   0 MEM_OUT: 144 ACC: 1 LG_ALU: 3952 RG_ALU:   1 SP: 3951 ZF: 0 |	push   var
  ADDR -> ALU_RG
  TICK: 1672 PC:  50 ADDR:   0 MEM_OUT: 144 ACC: 1 LG_ALU: 3952 RG_ALU:   8 SP: 3951 ZF: 0 |	load   var
  ALU_RES = ALU_RG
  TICK: 1673 PC:  50 ADDR:   0 MEM_OUT: 144 ACC: 1 LG_ALU: 3952 RG_ALU:   8 SP: 3951 ZF: 0 |	load   var
  READ MEM[ALU]
  TICK: 1674 PC:  50 ADDR:   0 MEM_OUT: 89 ACC: 1 LG_ALU: 3952 RG_ALU:   8 SP: 3951 ZF: 0 |	load   var
  MEM[ALU] -> ALU_RG
  TICK: 1675 PC:  50 ADDR:   0 MEM_OUT: 89 ACC: 1 LG_ALU: 3952 RG_ALU:  89 SP: 3951 ZF: 0 |	load   var
  ALU_RES = ALU_RG
  TICK: 1676 PC:  50 ADDR:   0 MEM_OUT: 89 ACC: 1 LG_ALU: 3952 RG_ALU:  89 SP: 3951 ZF: 0 |	load   var
  ALU_RES -> ACC
  TICK: 1677 PC:  50 ADDR:   0 MEM_OUT: 89 ACC: 89 LG_ALU: 3952 RG_ALU:  89 SP: 3951 ZF: 0 |	load   var
  ADDR -> ALU_RG
  TICK: 1678 PC:  51 ADDR:   0 MEM_OUT: 89 ACC: 89 LG_ALU: 3952 RG_ALU:   5 SP: 3951 ZF: 0 |	store   var
  ALU_RES = ALU_RG
  TICK: 1679 PC:  51 ADDR:   0 MEM_OUT: 89 ACC: 89 LG_ALU: 3952 RG_ALU:   5 SP: 3951 ZF: 0 |	store   var
  WRITE ACC -> MEM[ALU]
  TICK: 1680 PC:  51 ADDR:   0 MEM_OUT: 89 ACC: 89 LG_ALU: 3952 RG_ALU:   5 SP: 3951 ZF: 0 |	store   var
  NUM -> ALU_RG
  TICK: 1681 PC:  52 ADDR:   0 MEM_OUT: 89 ACC: 89 LG_ALU: 3952 RG_ALU:   1 SP: 3951 ZF: 0 |	load   var
  ALU_RES = ALU_RG
  TICK: 1682 PC:  52 ADDR:   0 MEM_OUT: 89 ACC: 89 LG_ALU: 3952 RG_ALU:   1 SP: 3951 ZF: 0 |	load   var
  ALU_RES -> ACC
  TICK: 1683 PC:  52 ADDR:   0 MEM_OUT: 89 ACC: 1 LG_ALU: 3952 RG_ALU:   1 SP: 3951 ZF: 0 |	load   var
  SP -> ALU_LG
  TICK: 1684 PC:  53 ADDR:   0 MEM_OUT: 89 ACC: 1 LG_ALU: 3951 RG_ALU:   1 SP: 3951 ZF: 0 |	push   var
  ALU_RES = SP - 1
  TICK: 1685 PC:  53 ADDR:   0 MEM_OUT: 89 ACC: 1 LG_ALU: 3951 RG_ALU:   1 SP: 3951 ZF: 0 |	push   var
  ALU_RES -> SP
  TICK: 1686 PC:  53 ADDR:   0 MEM_OUT: 89 ACC: 1 LG_ALU: 3951 RG_ALU:   1 SP: 3950 ZF: 0 |	push   var
  WRITE ACC -> MEM[ALU]
  TICK: 1686 PC:  53 ADDR:   0 MEM_OUT: 89 ACC: 1 LG_ALU: 3951 RG_ALU:   1 SP: 3950 ZF: 0 |	push   var
  ADDR -> ALU_RG
  TICK: 1687 PC:  54 ADDR:   0 MEM_OUT: 89 ACC: 1 LG_ALU: 3951 RG_ALU:   6 SP: 3950 ZF: 0 |	load   <
  ALU_RES = ALU_RG
  TICK: 1688 PC:  54 ADDR:   0 MEM_OUT: 89 ACC: 1 LG_ALU: 3951 RG_ALU:   6 SP: 3950 ZF: 0 |	load   <
  READ MEM[ALU]
  TICK: 1689 PC:  54 ADDR:   0 MEM_OUT: 144 ACC: 1 LG_ALU: 3951 RG_ALU:   6 SP: 3950 ZF: 0 |	load   <
  MEM[ALU] -> ALU_RG
  TICK: 1690 PC:  54 ADDR:   0 MEM_OUT: 144 ACC: 1 LG_ALU: 3951 RG_ALU: 144 SP: 3950 ZF: 0 |	load   <
  ALU_RES = ALU_RG
  TICK: 1691 PC:  54 ADDR:   0 MEM_OUT: 144 ACC: 1 LG_ALU: 3951 RG_ALU: 144 SP: 3950 ZF: 0 |	load   <
  ALU_RES -> ACC
  TICK: 1692 PC:  54 ADDR:   0 MEM_OUT: 144 ACC: 144 LG_ALU: 3951 RG_ALU: 144 SP: 3950 ZF: 0 |	load   <
  ADDR -> ALU_RG
  TICK: 1693 PC:  55 ADDR:   0 MEM_OUT: 144 ACC: 144 LG_ALU: 3951 RG_ALU:   7 SP: 3950 ZF: 0 |	sub   <
  ALU_RES = ALU_RG
  TICK: 1694 PC:  55 ADDR:   0 MEM_OUT: 144 ACC: 144 LG_ALU: 3951 RG_ALU:   7 SP: 3950 ZF: 0 |	sub   <
  READ MEM[ALU]
  TICK: 1695 PC:  55 ADDR:   0 MEM_OUT: 400000 ACC: 144 LG_ALU: 3951 RG_ALU:   7 SP: 3950 ZF: 0 |	sub   <
  MEM[ALU] -> ALU_RG
  TICK: 1696 PC:  55 ADDR:   0 MEM_OUT: 400000 ACC: 144 LG_ALU: 3951 RG_ALU: 400000 SP: 3950 ZF: 0 |	sub   <
  ACC -> ALU_LG
  TICK: 1696 PC:  55 ADDR:   0 MEM_OUT: 400000 ACC: 144 LG_ALU: 144 RG_ALU: 400000 SP: 3950 ZF: 0 |	sub   <
  ALU_RES = ALU_LG + ALU_RG
  TICK: 1697 PC:  55 ADDR:   0 MEM_OUT: 400000 ACC: 144 LG_ALU: 144 RG_ALU: 400000 SP: 3950 ZF: 0 |	sub   <
  ALU_RES -> ACC
  TICK: 1698 PC:  55 ADDR:   0 MEM_OUT: 400000 ACC: -399856 LG_ALU: 144 RG_ALU: 400000 SP: 3950 ZF: 0 |	sub   <
  PC + 1 -> PC
  NUM -> ALU_RG
  TICK: 1699 PC:  57 ADDR:   0 MEM_OUT: 400000 ACC: -399856 LG_ALU: 144 RG_ALU:   1 SP: 3950 ZF: 0 |	load   <
  ALU_RES = ALU_RG
  TICK: 1700 PC:  57 ADDR:   0 MEM_OUT: 400000 ACC: -399856 LG_ALU: 144 RG_ALU:   1 SP: 3950 ZF: 0 |	load   <
  ALU_RES -> ACC
  TICK: 1701 PC:  57 ADDR:   0 MEM_OUT: 400000 ACC: 1 LG_ALU: 144 RG_ALU:   1 SP: 3950 ZF: 0 |	load   <
  ADDR -> PC
  SP -> ALU_LG
  TICK: 1703 PC:  60 ADDR:   0 MEM_OUT: 400000 ACC: 1 LG_ALU: 3950 RG_ALU:   1 SP: 3950 ZF: 0 |	push   <
  ALU_RES = SP - 1
  TICK: 1704 PC:  60 ADDR:   0 MEM_OUT: 400000 ACC: 1 LG_ALU: 3950 RG_ALU:   1 SP: 3950 ZF: 0 |	push   <
  ALU_RES -> SP
  TICK: 1705 PC:  60 ADDR:   0 MEM_OUT: 400000 ACC: 1 LG_ALU: 3950 RG_ALU:   1 SP: 3949 ZF: 0 |	push   <
  WRITE ACC -> MEM[ALU]
  TICK: 1705 PC:  60 ADDR:   0 MEM_OUT: 400000 ACC: 1 LG_ALU: 3950 RG_ALU:   1 SP: 3949 ZF: 0 |	push   <
  SP -> ALU_LG
  TICK: 1706 PC:  61 ADDR:   0 MEM_OUT: 400000 ACC: 1 LG_ALU: 3949 RG_ALU:   1 SP: 3949 ZF: 0 |	pop
  ALU_RES = ALU_LG
  TICK: 1707 PC:  61 ADDR:   0 MEM_OUT: 400000 ACC: 1 LG_ALU: 3949 RG_ALU:   1 SP: 3949 ZF: 0 |	pop
  READ MEM[ALU]
  TICK: 1708 PC:  61 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3949 RG_ALU:   1 SP: 3949 ZF: 0 |	pop
  ALU_RES = SP + 1
  TICK: 1709 PC:  61 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3949 RG_ALU:   1 SP: 3949 ZF: 0 |	pop
  ALU_RES -> SP
  TICK: 1710 PC:  61 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3949 RG_ALU:   1 SP: 3950 ZF: 0 |	pop
  MEM[ALU] -> ALU_RG
  TICK: 1710 PC:  61 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3949 RG_ALU:   1 SP: 3950 ZF: 0 |	pop
  ALU_RES = ALU_RG
  TICK: 1711 PC:  61 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3949 RG_ALU:   1 SP: 3950 ZF: 0 |	pop
  ALU_RES -> ACC
  TICK: 1712 PC:  61 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3949 RG_ALU:   1 SP: 3950 ZF: 0 |	pop
  ADDR -> PC
  ADDR -> PC
  ADDR -> ALU_RG
  TICK: 1715 PC:  24 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3949 RG_ALU:   6 SP: 3950 ZF: 0 |	load
  ALU_RES = ALU_RG
  TICK: 1716 PC:  24 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3949 RG_ALU:   6 SP: 3950 ZF: 0 |	load
  READ MEM[ALU]
  TICK: 1717 PC:  24 ADDR:   0 MEM_OUT: 144 ACC: 1 LG_ALU: 3949 RG_ALU:   6 SP: 3950 ZF: 0 |	load
  MEM[ALU] -> ALU_RG
  TICK: 1718 PC:  24 ADDR:   0 MEM_OUT: 144 ACC: 1 LG_ALU: 3949 RG_ALU: 144 SP: 3950 ZF: 0 |	load
  ALU_RES = ALU_RG
  TICK: 1719 PC:  24 ADDR:   0 MEM_OUT: 144 ACC: 1 LG_ALU: 3949 RG_ALU: 144 SP: 3950 ZF: 0 |	load
  ALU_RES -> ACC
  TICK: 1720 PC:  24 ADDR:   0 MEM_OUT: 144 ACC: 144 LG_ALU: 3949 RG_ALU: 144 SP: 3950 ZF: 0 |	load
  NUM -> ALU_RG
  TICK: 1721 PC:  25 ADDR:   0 MEM_OUT: 144 ACC: 144 LG_ALU: 3949 RG_ALU:   2 SP: 3950 ZF: 0 |	mod
  ACC -> ALU_LG
  TICK: 1721 PC:  25 ADDR:   0 MEM_OUT: 144 ACC: 144 LG_ALU: 144 RG_ALU:   2 SP: 3950 ZF: 0 |	mod
  ALU_RES = ALU_LG % ALU_RG
  TICK: 1722 PC:  25 ADDR:   0 MEM_OUT: 144 ACC: 144 LG_ALU: 144 RG_ALU:   2 SP: 3950 ZF: 1 |	mod
  ALU_RES -> ACC
  TICK: 1723 PC:  25 ADDR:   0 MEM_OUT: 144 ACC: 0 LG_ALU: 144 RG_ALU:   2 SP: 3950 ZF: 1 |	mod
  SP -> ALU_LG
  TICK: 1724 PC:  26 ADDR:   0 MEM_OUT: 144 ACC: 0 LG_ALU: 3950 RG_ALU:   2 SP: 3950 ZF: 1 |	push
  ALU_RES = SP - 1
  TICK: 1725 PC:  26 ADDR:   0 MEM_OUT: 144 ACC: 0 LG_ALU: 3950 RG_ALU:   2 SP: 3950 ZF: 0 |	push
  ALU_RES -> SP
  TICK: 1726 PC:  26 ADDR:   0 MEM_OUT: 144 ACC: 0 LG_ALU: 3950 RG_ALU:   2 SP: 3949 ZF: 0 |	push
  WRITE ACC -> MEM[ALU]
  TICK: 1726 PC:  26 ADDR:   0 MEM_OUT: 144 ACC: 0 LG_ALU: 3950 RG_ALU:   2 SP: 3949 ZF: 0 |	push
  NUM -> ALU_RG
  TICK: 1727 PC:  27 ADDR:   0 MEM_OUT: 144 ACC: 0 LG_ALU: 3950 RG_ALU:   0 SP: 3949 ZF: 0 |	load   =
  ALU_RES = ALU_RG
  TICK: 1728 PC:  27 ADDR:   0 MEM_OUT: 144 ACC: 0 LG_ALU: 3950 RG_ALU:   0 SP: 3949 ZF: 1 |	load   =
  ALU_RES -> ACC
  TICK: 1729 PC:  27 ADDR:   0 MEM_OUT: 144 ACC: 0 LG_ALU: 3950 RG_ALU:   0 SP: 3949 ZF: 1 |	load   =
  SP -> ALU_LG
  TICK: 1730 PC:  28 ADDR:   0 MEM_OUT: 144 ACC: 0 LG_ALU: 3949 RG_ALU:   0 SP: 3949 ZF: 1 |	sub   =
  ALU_RES = ALU_LG
  TICK: 1731 PC:  28 ADDR:   0 MEM_OUT: 144 ACC: 0 LG_ALU: 3949 RG_ALU:   0 SP: 3949 ZF: 0 |	sub   =
  READ MEM[ALU]
  TICK: 1732 PC:  28 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3949 RG_ALU:   0 SP: 3949 ZF: 0 |	sub   =
  MEM[ALU] -> ALU_RG
  TICK: 1733 PC:  28 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3949 RG_ALU:   0 SP: 3949 ZF: 0 |	sub   =
  ALU_RES = SP + 1
  TICK: 1734 PC:  28 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3949 RG_ALU:   0 SP: 3949 ZF: 0 |	sub   =
  ALU_RES -> SP
  TICK: 1735 PC:  28 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3949 RG_ALU:   0 SP: 3950 ZF: 0 |	sub   =
  ACC -> ALU_LG
  TICK: 1735 PC:  28 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU:   0 RG_ALU:   0 SP: 3950 ZF: 0 |	sub   =
  ALU_RES = ALU_LG + ALU_RG
  TICK: 1736 PC:  28 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU:   0 RG_ALU:   0 SP: 3950 ZF: 1 |	sub   =
  ALU_RES -> ACC
  TICK: 1737 PC:  28 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU:   0 RG_ALU:   0 SP: 3950 ZF: 1 |	sub   =
  PC + 1 -> PC
  NUM -> ALU_RG
  TICK: 1738 PC:  30 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU:   0 RG_ALU:   1 SP: 3950 ZF: 1 |	load   =
  ALU_RES = ALU_RG
  TICK: 1739 PC:  30 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU:   0 RG_ALU:   1 SP: 3950 ZF: 0 |	load   =
  ALU_RES -> ACC
  TICK: 1740 PC:  30 ADDR:   0 MEM_OUT: 0 ACC: 1 LG_ALU:   0 RG_ALU:   1 SP: 3950 ZF: 0 |	load   =
  ADDR -> PC
  SP -> ALU_LG
  TICK: 1742 PC:  33 ADDR:   0 MEM_OUT: 0 ACC: 1 LG_ALU: 3950 RG_ALU:   1 SP: 3950 ZF: 0 |	push   =
  ALU_RES = SP - 1
  TICK: 1743 PC:  33 ADDR:   0 MEM_OUT: 0 ACC: 1 LG_ALU: 3950 RG_ALU:   1 SP: 3950 ZF: 0 |	push   =
  ALU_RES -> SP
  TICK: 1744 PC:  33 ADDR:   0 MEM_OUT: 0 ACC: 1 LG_ALU: 3950 RG_ALU:   1 SP: 3949 ZF: 0 |	push   =
  WRITE ACC -> MEM[ALU]
  TICK: 1744 PC:  33 ADDR:   0 MEM_OUT: 0 ACC: 1 LG_ALU: 3950 RG_ALU:   1 SP: 3949 ZF: 0 |	push   =
  SP -> ALU_LG
  TICK: 1745 PC:  34 ADDR:   0 MEM_OUT: 0 ACC: 1 LG_ALU: 3949 RG_ALU:   1 SP: 3949 ZF: 0 |	pop   if
  ALU_RES = ALU_LG
  TICK: 1746 PC:  34 ADDR:   0 MEM_OUT: 0 ACC: 1 LG_ALU: 3949 RG_ALU:   1 SP: 3949 ZF: 0 |	pop   if
  READ MEM[ALU]
  TICK: 1747 PC:  34 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3949 RG_ALU:   1 SP: 3949 ZF: 0 |	pop   if
  ALU_RES = SP + 1
  TICK: 1748 PC:  34 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3949 RG_ALU:   1 SP: 3949 ZF: 0 |	pop   if
  ALU_RES -> SP
  TICK: 1749 PC:  34 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3949 RG_ALU:   1 SP: 3950 ZF: 0 |	pop   if
  MEM[ALU] -> ALU_RG
  TICK: 1749 PC:  34 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3949 RG_ALU:   1 SP: 3950 ZF: 0 |	pop   if
  ALU_RES = ALU_RG
  TICK: 1750 PC:  34 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3949 RG_ALU:   1 SP: 3950 ZF: 0 |	pop   if
  ALU_RES -> ACC
  TICK: 1751 PC:  34 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3949 RG_ALU:   1 SP: 3950 ZF: 0 |	pop   if
  ADDR -> PC
  ADDR -> ALU_RG
  TICK: 1753 PC:   7 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3949 RG_ALU:   6 SP: 3950 ZF: 0 |	load   print
  ALU_RES = ALU_RG
  TICK: 1754 PC:   7 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3949 RG_ALU:   6 SP: 3950 ZF: 0 |	load   print
  READ MEM[ALU]
  TICK: 1755 PC:   7 ADDR:   0 MEM_OUT: 144 ACC: 1 LG_ALU: 3949 RG_ALU:   6 SP: 3950 ZF: 0 |	load   print
  MEM[ALU] -> ALU_RG
  TICK: 1756 PC:   7 ADDR:   0 MEM_OUT: 144 ACC: 1 LG_ALU: 3949 RG_ALU: 144 SP: 3950 ZF: 0 |	load   print
  ALU_RES = ALU_RG
  TICK: 1757 PC:   7 ADDR:   0 MEM_OUT: 144 ACC: 1 LG_ALU: 3949 RG_ALU: 144 SP: 3950 ZF: 0 |	load   print
  ALU_RES -> ACC
  TICK: 1758 PC:   7 ADDR:   0 MEM_OUT: 144 ACC: 144 LG_ALU: 3949 RG_ALU: 144 SP: 3950 ZF: 0 |	load   print
  get IO module port
  TICK: 1759 PC:   8 ADDR:   0 MEM_OUT: 144 ACC: 144 LG_ALU: 3949 RG_ALU: 144 SP: 3950 ZF: 0 |	output   print
  ACC -> OUTPUT 
  TICK: 1760 PC:   8 ADDR:   0 MEM_OUT: 144 ACC: 144 LG_ALU: 3949 RG_ALU: 144 SP: 3950 ZF: 0 |	output   print
  NUM -> ALU_RG
  TICK: 1761 PC:   9 ADDR:   0 MEM_OUT: 144 ACC: 144 LG_ALU: 3949 RG_ALU:   1 SP: 3950 ZF: 0 |	load   print
  ALU_RES = ALU_RG
  TICK: 1762 PC:   9 ADDR:   0 MEM_OUT: 144 ACC: 144 LG_ALU: 3949 RG_ALU:   1 SP: 3950 ZF: 0 |	load   print
  ALU_RES -> ACC
  TICK: 1763 PC:   9 ADDR:   0 MEM_OUT: 144 ACC: 1 LG_ALU: 3949 RG_ALU:   1 SP: 3950 ZF: 0 |	load   print
  SP -> ALU_LG
  TICK: 1764 PC:  10 ADDR:   0 MEM_OUT: 144 ACC: 1 LG_ALU: 3950 RG_ALU:   1 SP: 3950 ZF: 0 |	push   print
  ALU_RES = SP - 1
  TICK: 1765 PC:  10 ADDR:   0 MEM_OUT: 144 ACC: 1 LG_ALU: 3950 RG_ALU:   1 SP: 3950 ZF: 0 |	push   print
  ALU_RES -> SP
  TICK: 1766 PC:  10 ADDR:   0 MEM_OUT: 144 ACC: 1 LG_ALU: 3950 RG_ALU:   1 SP: 3949 ZF: 0 |	push   print
  WRITE ACC -> MEM[ALU]
  TICK: 1766 PC:  10 ADDR:   0 MEM_OUT: 144 ACC: 1 LG_ALU: 3950 RG_ALU:   1 SP: 3949 ZF: 0 |	push   print
  NUM -> ALU_RG
  TICK: 1767 PC:  11 ADDR:   0 MEM_OUT: 144 ACC: 1 LG_ALU: 3950 RG_ALU:  95 SP: 3949 ZF: 0 |	load   print
  ALU_RES = ALU_RG
  TICK: 1768 PC:  11 ADDR:   0 MEM_OUT: 144 ACC: 1 LG_ALU: 3950 RG_ALU:  95 SP: 3949 ZF: 0 |	load   print
  ALU_RES -> ACC
  TICK: 1769 PC:  11 ADDR:   0 MEM_OUT: 144 ACC: 95 LG_ALU: 3950 RG_ALU:  95 SP: 3949 ZF: 0 |	load   print
  get IO module port
  TICK: 1770 PC:  12 ADDR:   0 MEM_OUT: 144 ACC: 95 LG_ALU: 3950 RG_ALU:  95 SP: 3949 ZF: 0 |	output   print
  ACC -> OUTPUT 
  TICK: 1771 PC:  12 ADDR:   0 MEM_OUT: 144 ACC: 95 LG_ALU: 3950 RG_ALU:  95 SP: 3949 ZF: 0 |	output   print
  NUM -> ALU_RG
  TICK: 1772 PC:  13 ADDR:   0 MEM_OUT: 144 ACC: 95 LG_ALU: 3950 RG_ALU:   0 SP: 3949 ZF: 0 |	load   print
  ALU_RES = ALU_RG
  TICK: 1773 PC:  13 ADDR:   0 MEM_OUT: 144 ACC: 95 LG_ALU: 3950 RG_ALU:   0 SP: 3949 ZF: 1 |	load   print
  ALU_RES -> ACC
  TICK: 1774 PC:  13 ADDR:   0 MEM_OUT: 144 ACC: 0 LG_ALU: 3950 RG_ALU:   0 SP: 3949 ZF: 1 |	load   print
  get IO module port
  TICK: 1775 PC:  14 ADDR:   0 MEM_OUT: 144 ACC: 0 LG_ALU: 3950 RG_ALU:   0 SP: 3949 ZF: 1 |	output   print
  ACC -> OUTPUT 
  TICK: 1776 PC:  14 ADDR:   0 MEM_OUT: 144 ACC: 0 LG_ALU: 3950 RG_ALU:   0 SP: 3949 ZF: 1 |	output   print
  NUM -> ALU_RG
  TICK: 1777 PC:  15 ADDR:   0 MEM_OUT: 144 ACC: 0 LG_ALU: 3950 RG_ALU:   0 SP: 3949 ZF: 1 |	load   print
  ALU_RES = ALU_RG
  TICK: 1778 PC:  15 ADDR:   0 MEM_OUT: 144 ACC: 0 LG_ALU: 3950 RG_ALU:   0 SP: 3949 ZF: 1 |	load   print
  ALU_RES -> ACC
  TICK: 1779 PC:  15 ADDR:   0 MEM_OUT: 144 ACC: 0 LG_ALU: 3950 RG_ALU:   0 SP: 3949 ZF: 1 |	load   print
  get IO module port
  TICK: 1780 PC:  16 ADDR:   0 MEM_OUT: 144 ACC: 0 LG_ALU: 3950 RG_ALU:   0 SP: 3949 ZF: 1 |	output   print
  ACC -> OUTPUT 
  TICK: 1781 PC:  16 ADDR:   0 MEM_OUT: 144 ACC: 0 LG_ALU: 3950 RG_ALU:   0 SP: 3949 ZF: 1 |	output   print
  NUM -> ALU_RG
  TICK: 1782 PC:  17 ADDR:   0 MEM_OUT: 144 ACC: 0 LG_ALU: 3950 RG_ALU:   1 SP: 3949 ZF: 1 |	load   print
  ALU_RES = ALU_RG
  TICK: 1783 PC:  17 ADDR:   0 MEM_OUT: 144 ACC: 0 LG_ALU: 3950 RG_ALU:   1 SP: 3949 ZF: 0 |	load   print
  ALU_RES -> ACC
  TICK: 1784 PC:  17 ADDR:   0 MEM_OUT: 144 ACC: 1 LG_ALU: 3950 RG_ALU:   1 SP: 3949 ZF: 0 |	load   print
  SP -> ALU_LG
  TICK: 1785 PC:  18 ADDR:   0 MEM_OUT: 144 ACC: 1 LG_ALU: 3949 RG_ALU:   1 SP: 3949 ZF: 0 |	push   print
  ALU_RES = SP - 1
  TICK: 1786 PC:  18 ADDR:   0 MEM_OUT: 144 ACC: 1 LG_ALU: 3949 RG_ALU:   1 SP: 3949 ZF: 0 |	push   print
  ALU_RES -> SP
  TICK: 1787 PC:  18 ADDR:   0 MEM_OUT: 144 ACC: 1 LG_ALU: 3949 RG_ALU:   1 SP: 3948 ZF: 0 |	push   print
  WRITE ACC -> MEM[ALU]
  TICK: 1787 PC:  18 ADDR:   0 MEM_OUT: 144 ACC: 1 LG_ALU: 3949 RG_ALU:   1 SP: 3948 ZF: 0 |	push   print
  ADDR -> PC
  SP -> ALU_LG
  TICK: 1789 PC:  37 ADDR:   0 MEM_OUT: 144 ACC: 1 LG_ALU: 3948 RG_ALU:   1 SP: 3948 ZF: 0 |	pop   if
  ALU_RES = ALU_LG
  TICK: 1790 PC:  37 ADDR:   0 MEM_OUT: 144 ACC: 1 LG_ALU: 3948 RG_ALU:   1 SP: 3948 ZF: 0 |	pop   if
  READ MEM[ALU]
  TICK: 1791 PC:  37 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3948 RG_ALU:   1 SP: 3948 ZF: 0 |	pop   if
  ALU_RES = SP + 1
  TICK: 1792 PC:  37 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3948 RG_ALU:   1 SP: 3948 ZF: 0 |	pop   if
  ALU_RES -> SP
  TICK: 1793 PC:  37 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3948 RG_ALU:   1 SP: 3949 ZF: 0 |	pop   if
  MEM[ALU] -> ALU_RG
  TICK: 1793 PC:  37 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3948 RG_ALU:   1 SP: 3949 ZF: 0 |	pop   if
  ALU_RES = ALU_RG
  TICK: 1794 PC:  37 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3948 RG_ALU:   1 SP: 3949 ZF: 0 |	pop   if
  ALU_RES -> ACC
  TICK: 1795 PC:  37 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3948 RG_ALU:   1 SP: 3949 ZF: 0 |	pop   if
  SP -> ALU_LG
  TICK: 1796 PC:  38 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3949 RG_ALU:   1 SP: 3949 ZF: 0 |	push   if
  ALU_RES = SP - 1
  TICK: 1797 PC:  38 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3949 RG_ALU:   1 SP: 3949 ZF: 0 |	push   if
  ALU_RES -> SP
  TICK: 1798 PC:  38 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3949 RG_ALU:   1 SP: 3948 ZF: 0 |	push   if
  WRITE ACC -> MEM[ALU]
  TICK: 1798 PC:  38 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3949 RG_ALU:   1 SP: 3948 ZF: 0 |	push   if
  ADDR -> ALU_RG
  TICK: 1799 PC:  39 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3949 RG_ALU:   6 SP: 3948 ZF: 0 |	load   var
  ALU_RES = ALU_RG
  TICK: 1800 PC:  39 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3949 RG_ALU:   6 SP: 3948 ZF: 0 |	load   var
  READ MEM[ALU]
  TICK: 1801 PC:  39 ADDR:   0 MEM_OUT: 144 ACC: 1 LG_ALU: 3949 RG_ALU:   6 SP: 3948 ZF: 0 |	load   var
  MEM[ALU] -> ALU_RG
  TICK: 1802 PC:  39 ADDR:   0 MEM_OUT: 144 ACC: 1 LG_ALU: 3949 RG_ALU: 144 SP: 3948 ZF: 0 |	load   var
  ALU_RES = ALU_RG
  TICK: 1803 PC:  39 ADDR:   0 MEM_OUT: 144 ACC: 1 LG_ALU: 3949 RG_ALU: 144 SP: 3948 ZF: 0 |	load   var
  ALU_RES -> ACC
  TICK: 1804 PC:  39 ADDR:   0 MEM_OUT: 144 ACC: 144 LG_ALU: 3949 RG_ALU: 144 SP: 3948 ZF: 0 |	load   var
  ADDR -> ALU_RG
  TICK: 1805 PC:  40 ADDR:   0 MEM_OUT: 144 ACC: 144 LG_ALU: 3949 RG_ALU:   8 SP: 3948 ZF: 0 |	store   var
  ALU_RES = ALU_RG
  TICK: 1806 PC:  40 ADDR:   0 MEM_OUT: 144 ACC: 144 LG_ALU: 3949 RG_ALU:   8 SP: 3948 ZF: 0 |	store   var
  WRITE ACC -> MEM[ALU]
  TICK: 1807 PC:  40 ADDR:   0 MEM_OUT: 144 ACC: 144 LG_ALU: 3949 RG_ALU:   8 SP: 3948 ZF: 0 |	store   var
  NUM -> ALU_RG
  TICK: 1808 PC:  41 ADDR:   0 MEM_OUT: 144 ACC: 144 LG_ALU: 3949 RG_ALU:   1 SP: 3948 ZF: 0 |	load   var
  ALU_RES = ALU_RG
  TICK: 1809 PC:  41 ADDR:   0 MEM_OUT: 144 ACC: 144 LG_ALU: 3949 RG_ALU:   1 SP: 3948 ZF: 0 |	load   var
  ALU_RES -> ACC
  TICK: 1810 PC:  41 ADDR:   0 MEM_OUT: 144 ACC: 1 LG_ALU: 3949 RG_ALU:   1 SP: 3948 ZF: 0 |	load   var
  SP -> ALU_LG
  TICK: 1811 PC:  42 ADDR:   0 MEM_OUT: 144 ACC: 1 LG_ALU: 3948 RG_ALU:   1 SP: 3948 ZF: 0 |	push   var
  ALU_RES = SP - 1
  TICK: 1812 PC:  42 ADDR:   0 MEM_OUT: 144 ACC: 1 LG_ALU: 3948 RG_ALU:   1 SP: 3948 ZF: 0 |	push   var
  ALU_RES -> SP
  TICK: 1813 PC:  42 ADDR:   0 MEM_OUT: 144 ACC: 1 LG_ALU: 3948 RG_ALU:   1 SP: 3947 ZF: 0 |	push   var
  WRITE ACC -> MEM[ALU]
  TICK: 1813 PC:  42 ADDR:   0 MEM_OUT: 144 ACC: 1 LG_ALU: 3948 RG_ALU:   1 SP: 3947 ZF: 0 |	push   var
  ADDR -> ALU_RG
  TICK: 1814 PC:  43 ADDR:   0 MEM_OUT: 144 ACC: 1 LG_ALU: 3948 RG_ALU:   5 SP: 3947 ZF: 0 |	load   +
  ALU_RES = ALU_RG
  TICK: 1815 PC:  43 ADDR:   0 MEM_OUT: 144 ACC: 1 LG_ALU: 3948 RG_ALU:   5 SP: 3947 ZF: 0 |	load   +
  READ MEM[ALU]
  TICK: 1816 PC:  43 ADDR:   0 MEM_OUT: 89 ACC: 1 LG_ALU: 3948 RG_ALU:   5 SP: 3947 ZF: 0 |	load   +
  MEM[ALU] -> ALU_RG
  TICK: 1817 PC:  43 ADDR:   0 MEM_OUT: 89 ACC: 1 LG_ALU: 3948 RG_ALU:  89 SP: 3947 ZF: 0 |	load   +
  ALU_RES = ALU_RG
  TICK: 1818 PC:  43 ADDR:   0 MEM_OUT: 89 ACC: 1 LG_ALU: 3948 RG_ALU:  89 SP: 3947 ZF: 0 |	load   +
  ALU_RES -> ACC
  TICK: 1819 PC:  43 ADDR:   0 MEM_OUT: 89 ACC: 89 LG_ALU: 3948 RG_ALU:  89 SP: 3947 ZF: 0 |	load   +
  ADDR -> ALU_RG
  TICK: 1820 PC:  44 ADDR:   0 MEM_OUT: 89 ACC: 89 LG_ALU: 3948 RG_ALU:   6 SP: 3947 ZF: 0 |	add   +
  ALU_RES = ALU_RG
  TICK: 1821 PC:  44 ADDR:   0 MEM_OUT: 89 ACC: 89 LG_ALU: 3948 RG_ALU:   6 SP: 3947 ZF: 0 |	add   +
  READ MEM[ALU]
  TICK: 1822 PC:  44 ADDR:   0 MEM_OUT: 144 ACC: 89 LG_ALU: 3948 RG_ALU:   6 SP: 3947 ZF: 0 |	add   +
  MEM[ALU] -> ALU_RG
  TICK: 1823 PC:  44 ADDR:   0 MEM_OUT: 144 ACC: 89 LG_ALU: 3948 RG_ALU: 144 SP: 3947 ZF: 0 |	add   +
  ACC -> ALU_LG
  TICK: 1823 PC:  44 ADDR:   0 MEM_OUT: 144 ACC: 89 LG_ALU:  89 RG_ALU: 144 SP: 3947 ZF: 0 |	add   +
  ALU_RES = ALU_LG + ALU_RG
  TICK: 1824 PC:  44 ADDR:   0 MEM_OUT: 144 ACC: 89 LG_ALU:  89 RG_ALU: 144 SP: 3947 ZF: 0 |	add   +
  ALU_RES -> ACC
  TICK: 1825 PC:  44 ADDR:   0 MEM_OUT: 144 ACC: 233 LG_ALU:  89 RG_ALU: 144 SP: 3947 ZF: 0 |	add   +
  SP -> ALU_LG
  TICK: 1826 PC:  45 ADDR:   0 MEM_OUT: 144 ACC: 233 LG_ALU: 3947 RG_ALU: 144 SP: 3947 ZF: 0 |	push   +
  ALU_RES = SP - 1
  TICK: 1827 PC:  45 ADDR:   0 MEM_OUT: 144 ACC: 233 LG_ALU: 3947 RG_ALU: 144 SP: 3947 ZF: 0 |	push   +
  ALU_RES -> SP
  TICK: 1828 PC:  45 ADDR:   0 MEM_OUT: 144 ACC: 233 LG_ALU: 3947 RG_ALU: 144 SP: 3946 ZF: 0 |	push   +
  WRITE ACC -> MEM[ALU]
  TICK: 1828 PC:  45 ADDR:   0 MEM_OUT: 144 ACC: 233 LG_ALU: 3947 RG_ALU: 144 SP: 3946 ZF: 0 |	push   +
  SP -> ALU_LG
  TICK: 1829 PC:  46 ADDR:   0 MEM_OUT: 144 ACC: 233 LG_ALU: 3946 RG_ALU: 144 SP: 3946 ZF: 0 |	pop   var
  ALU_RES = ALU_LG
  TICK: 1830 PC:  46 ADDR:   0 MEM_OUT: 144 ACC: 233 LG_ALU: 3946 RG_ALU: 144 SP: 3946 ZF: 0 |	pop   var
  READ MEM[ALU]
  TICK: 1831 PC:  46 ADDR:   0 MEM_OUT: 233 ACC: 233 LG_ALU: 3946 RG_ALU: 144 SP: 3946 ZF: 0 |	pop   var
  ALU_RES = SP + 1
  TICK: 1832 PC:  46 ADDR:   0 MEM_OUT: 233 ACC: 233 LG_ALU: 3946 RG_ALU: 144 SP: 3946 ZF: 0 |	pop   var
  ALU_RES -> SP
  TICK: 1833 PC:  46 ADDR:   0 MEM_OUT: 233 ACC: 233 LG_ALU: 3946 RG_ALU: 144 SP: 3947 ZF: 0 |	pop   var
  MEM[ALU] -> ALU_RG
  TICK: 1833 PC:  46 ADDR:   0 MEM_OUT: 233 ACC: 233 LG_ALU: 3946 RG_ALU: 233 SP: 3947 ZF: 0 |	pop   var
  ALU_RES = ALU_RG
  TICK: 1834 PC:  46 ADDR:   0 MEM_OUT: 233 ACC: 233 LG_ALU: 3946 RG_ALU: 233 SP: 3947 ZF: 0 |	pop   var
  ALU_RES -> ACC
  TICK: 1835 PC:  46 ADDR:   0 MEM_OUT: 233 ACC: 233 LG_ALU: 3946 RG_ALU: 233 SP: 3947 ZF: 0 |	pop   var
  ADDR -> ALU_RG
  TICK: 1836 PC:  47 ADDR:   0 MEM_OUT: 233 ACC: 233 LG_ALU: 3946 RG_ALU:   6 SP: 3947 ZF: 0 |	store   var
  ALU_RES = ALU_RG
  TICK: 1837 PC:  47 ADDR:   0 MEM_OUT: 233 ACC: 233 LG_ALU: 3946 RG_ALU:   6 SP: 3947 ZF: 0 |	store   var
  WRITE ACC -> MEM[ALU]
  TICK: 1838 PC:  47 ADDR:   0 MEM_OUT: 233 ACC: 233 LG_ALU: 3946 RG_ALU:   6 SP: 3947 ZF: 0 |	store   var
  NUM -> ALU_RG
  TICK: 1839 PC:  48 ADDR:   0 MEM_OUT: 233 ACC: 233 LG_ALU: 3946 RG_ALU:   1 SP: 3947 ZF: 0 |	load   var
  ALU_RES = ALU_RG
  TICK: 1840 PC:  48 ADDR:   0 MEM_OUT: 233 ACC: 233 LG_ALU: 3946 RG_ALU:   1 SP: 3947 ZF: 0 |	load   var
  ALU_RES -> ACC
  TICK: 1841 PC:  48 ADDR:   0 MEM_OUT: 233 ACC: 1 LG_ALU: 3946 RG_ALU:   1 SP: 3947 ZF: 0 |	load   var
  SP -> ALU_LG
  TICK: 1842 PC:  49 ADDR:   0 MEM_OUT: 233 ACC: 1 LG_ALU: 3947 RG_ALU:   1 SP: 3947 ZF: 0 |	push   var
  ALU_RES = SP - 1
  TICK: 1843 PC:  49 ADDR:   0 MEM_OUT: 233 ACC: 1 LG_ALU: 3947 RG_ALU:   1 SP: 3947 ZF: 0 |	push   var
  ALU_RES -> SP
  TICK: 1844 PC:  49 ADDR:   0 MEM_OUT: 233 ACC: 1 LG_ALU: 3947 RG_ALU:   1 SP: 3946 ZF: 0 |	push   var
  WRITE ACC -> MEM[ALU]
  TICK: 1844 PC:  49 ADDR:   0 MEM_OUT: 233 ACC: 1 LG_ALU: 3947 RG_ALU:   1 SP: 3946 ZF: 0 |	push   var
  ADDR -> ALU_RG
  TICK: 1845 PC:  50 ADDR:   0 MEM_OUT: 233 ACC: 1 LG_ALU: 3947 RG_ALU:   8 SP: 3946 ZF: 0 |	load   var
  ALU_RES = ALU_RG
  TICK: 1846 PC:  50 ADDR:   0 MEM_OUT: 233 ACC: 1 LG_ALU: 3947 RG_ALU:   8 SP: 3946 ZF: 0 |	load   var
  READ MEM[ALU]
  TICK: 1847 PC:  50 ADDR:   0 MEM_OUT: 144 ACC: 1 LG_ALU: 3947 RG_ALU:   8 SP: 3946 ZF: 0 |	load   var
  MEM[ALU] -> ALU_RG
  TICK: 1848 PC:  50 ADDR:   0 MEM_OUT: 144 ACC: 1 LG_ALU: 3947 RG_ALU: 144 SP: 3946 ZF: 0 |	load   var
  ALU_RES = ALU_RG
  TICK: 1849 PC:  50 ADDR:   0 MEM_OUT: 144 ACC: 1 LG_ALU: 3947 RG_ALU: 144 SP: 3946 ZF: 0 |	load   var
  ALU_RES -> ACC
  TICK: 1850 PC:  50 ADDR:   0 MEM_OUT: 144 ACC: 144 LG_ALU: 3947 RG_ALU: 144 SP: 3946 ZF: 0 |	load   var
  ADDR -> ALU_RG
  TICK: 1851 PC:  51 ADDR:   0 MEM_OUT: 144 ACC: 144 LG_ALU: 3947 RG_ALU:   5 SP: 3946 ZF: 0 |	store   var
  ALU_RES = ALU_RG
  TICK: 1852 PC:  51 ADDR:   0 MEM_OUT: 144 ACC: 144 LG_ALU: 3947 RG_ALU:   5 SP: 3946 ZF: 0 |	store   var
  WRITE ACC -> MEM[ALU]
  TICK: 1853 PC:  51 ADDR:   0 MEM_OUT: 144 ACC: 144 LG_ALU: 3947 RG_ALU:   5 SP: 3946 ZF: 0 |	store   var
  NUM -> ALU_RG
  TICK: 1854 PC:  52 ADDR:   0 MEM_OUT: 144 ACC: 144 LG_ALU: 3947 RG_ALU:   1 SP: 3946 ZF: 0 |	load   var
  ALU_RES = ALU_RG
  TICK: 1855 PC:  52 ADDR:   0 MEM_OUT: 144 ACC: 144 LG_ALU: 3947 RG_ALU:   1 SP: 3946 ZF: 0 |	load   var
  ALU_RES -> ACC
  TICK: 1856 PC:  52 ADDR:   0 MEM_OUT: 144 ACC: 1 LG_ALU: 3947 RG_ALU:   1 SP: 3946 ZF: 0 |	load   var
  SP -> ALU_LG
  TICK: 1857 PC:  53 ADDR:   0 MEM_OUT: 144 ACC: 1 LG_ALU: 3946 RG_ALU:   1 SP: 3946 ZF: 0 |	push   var
  ALU_RES = SP - 1
  TICK: 1858 PC:  53 ADDR:   0 MEM_OUT: 144 ACC: 1 LG_ALU: 3946 RG_ALU:   1 SP: 3946 ZF: 0 |	push   var
  ALU_RES -> SP
  TICK: 1859 PC:  53 ADDR:   0 MEM_OUT: 144 ACC: 1 LG_ALU: 3946 RG_ALU:   1 SP: 3945 ZF: 0 |	push   var
  WRITE ACC -> MEM[ALU]
  TICK: 1859 PC:  53 ADDR:   0 MEM_OUT: 144 ACC: 1 LG_ALU: 3946 RG_ALU:   1 SP: 3945 ZF: 0 |	push   var
  ADDR -> ALU_RG
  TICK: 1860 PC:  54 ADDR:   0 MEM_OUT: 144 ACC: 1 LG_ALU: 3946 RG_ALU:   6 SP: 3945 ZF: 0 |	load   <
  ALU_RES = ALU_RG
  TICK: 1861 PC:  54 ADDR:   0 MEM_OUT: 144 ACC: 1 LG_ALU: 3946 RG_ALU:   6 SP: 3945 ZF: 0 |	load   <
  READ MEM[ALU]
  TICK: 1862 PC:  54 ADDR:   0 MEM_OUT: 233 ACC: 1 LG_ALU: 3946 RG_ALU:   6 SP: 3945 ZF: 0 |	load   <
  MEM[ALU] -> ALU_RG
  TICK: 1863 PC:  54 ADDR:   0 MEM_OUT: 233 ACC: 1 LG_ALU: 3946 RG_ALU: 233 SP: 3945 ZF: 0 |	load   <
  ALU_RES = ALU_RG
  TICK: 1864 PC:  54 ADDR:   0 MEM_OUT: 233 ACC: 1 LG_ALU: 3946 RG_ALU: 233 SP: 3945 ZF: 0 |	load   <
  ALU_RES -> ACC
  TICK: 1865 PC:  54 ADDR:   0 MEM_OUT: 233 ACC: 233 LG_ALU: 3946 RG_ALU: 233 SP: 3945 ZF: 0 |	load   <
  ADDR -> ALU_RG
  TICK: 1866 PC:  55 ADDR:   0 MEM_OUT: 233 ACC: 233 LG_ALU: 3946 RG_ALU:   7 SP: 3945 ZF: 0 |	sub   <
  ALU_RES = ALU_RG
  TICK: 1867 PC:  55 ADDR:   0 MEM_OUT: 233 ACC: 233 LG_ALU: 3946 RG_ALU:   7 SP: 3945 ZF: 0 |	sub   <
  READ MEM[ALU]
  TICK: 1868 PC:  55 ADDR:   0 MEM_OUT: 400000 ACC: 233 LG_ALU: 3946 RG_ALU:   7 SP: 3945 ZF: 0 |	sub   <
  MEM[ALU] -> ALU_RG
  TICK: 1869 PC:  55 ADDR:   0 MEM_OUT: 400000 ACC: 233 LG_ALU: 3946 RG_ALU: 400000 SP: 3945 ZF: 0 |	sub   <
  ACC -> ALU_LG
  TICK: 1869 PC:  55 ADDR:   0 MEM_OUT: 400000 ACC: 233 LG_ALU: 233 RG_ALU: 400000 SP: 3945 ZF: 0 |	sub   <
  ALU_RES = ALU_LG + ALU_RG
  TICK: 1870 PC:  55 ADDR:   0 MEM_OUT: 400000 ACC: 233 LG_ALU: 233 RG_ALU: 400000 SP: 3945 ZF: 0 |	sub   <
  ALU_RES -> ACC
  TICK: 1871 PC:  55 ADDR:   0 MEM_OUT: 400000 ACC: -399767 LG_ALU: 233 RG_ALU: 400000 SP: 3945 ZF: 0 |	sub   <
  PC + 1 -> PC
  NUM -> ALU_RG
  TICK: 1872 PC:  57 ADDR:   0 MEM_OUT: 400000 ACC: -399767 LG_ALU: 233 RG_ALU:   1 SP: 3945 ZF: 0 |	load   <
  ALU_RES = ALU_RG
  TICK: 1873 PC:  57 ADDR:   0 MEM_OUT: 400000 ACC: -399767 LG_ALU: 233 RG_ALU:   1 SP: 3945 ZF: 0 |	load   <
  ALU_RES -> ACC
  TICK: 1874 PC:  57 ADDR:   0 MEM_OUT: 400000 ACC: 1 LG_ALU: 233 RG_ALU:   1 SP: 3945 ZF: 0 |	load   <
  ADDR -> PC
  SP -> ALU_LG
  TICK: 1876 PC:  60 ADDR:   0 MEM_OUT: 400000 ACC: 1 LG_ALU: 3945 RG_ALU:   1 SP: 3945 ZF: 0 |	push   <
  ALU_RES = SP - 1
  TICK: 1877 PC:  60 ADDR:   0 MEM_OUT: 400000 ACC: 1 LG_ALU: 3945 RG_ALU:   1 SP: 3945 ZF: 0 |	push   <
  ALU_RES -> SP
  TICK: 1878 PC:  60 ADDR:   0 MEM_OUT: 400000 ACC: 1 LG_ALU: 3945 RG_ALU:   1 SP: 3944 ZF: 0 |	push   <
  WRITE ACC -> MEM[ALU]
  TICK: 1878 PC:  60 ADDR:   0 MEM_OUT: 400000 ACC: 1 LG_ALU: 3945 RG_ALU:   1 SP: 3944 ZF: 0 |	push   <
  SP -> ALU_LG
  TICK: 1879 PC:  61 ADDR:   0 MEM_OUT: 400000 ACC: 1 LG_ALU: 3944 RG_ALU:   1 SP: 3944 ZF: 0 |	pop
  ALU_RES = ALU_LG
  TICK: 1880 PC:  61 ADDR:   0 MEM_OUT: 400000 ACC: 1 LG_ALU: 3944 RG_ALU:   1 SP: 3944 ZF: 0 |	pop
  READ MEM[ALU]
  TICK: 1881 PC:  61 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3944 RG_ALU:   1 SP: 3944 ZF: 0 |	pop
  ALU_RES = SP + 1
  TICK: 1882 PC:  61 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3944 RG_ALU:   1 SP: 3944 ZF: 0 |	pop
  ALU_RES -> SP
  TICK: 1883 PC:  61 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3944 RG_ALU:   1 SP: 3945 ZF: 0 |	pop
  MEM[ALU] -> ALU_RG
  TICK: 1883 PC:  61 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3944 RG_ALU:   1 SP: 3945 ZF: 0 |	pop
  ALU_RES = ALU_RG
  TICK: 1884 PC:  61 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3944 RG_ALU:   1 SP: 3945 ZF: 0 |	pop
  ALU_RES -> ACC
  TICK: 1885 PC:  61 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3944 RG_ALU:   1 SP: 3945 ZF: 0 |	pop
  ADDR -> PC
  ADDR -> PC
  ADDR -> ALU_RG
  TICK: 1888 PC:  24 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3944 RG_ALU:   6 SP: 3945 ZF: 0 |	load
  ALU_RES = ALU_RG
  TICK: 1889 PC:  24 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3944 RG_ALU:   6 SP: 3945 ZF: 0 |	load
  READ MEM[ALU]
  TICK: 1890 PC:  24 ADDR:   0 MEM_OUT: 233 ACC: 1 LG_ALU: 3944 RG_ALU:   6 SP: 3945 ZF: 0 |	load
  MEM[ALU] -> ALU_RG
  TICK: 1891 PC:  24 ADDR:   0 MEM_OUT: 233 ACC: 1 LG_ALU: 3944 RG_ALU: 233 SP: 3945 ZF: 0 |	load
  ALU_RES = ALU_RG
  TICK: 1892 PC:  24 ADDR:   0 MEM_OUT: 233 ACC: 1 LG_ALU: 3944 RG_ALU: 233 SP: 3945 ZF: 0 |	load
  ALU_RES -> ACC
  TICK: 1893 PC:  24 ADDR:   0 MEM_OUT: 233 ACC: 233 LG_ALU: 3944 RG_ALU: 233 SP: 3945 ZF: 0 |	load
  NUM -> ALU_RG
  TICK: 1894 PC:  25 ADDR:   0 MEM_OUT: 233 ACC: 233 LG_ALU: 3944 RG_ALU:   2 SP: 3945 ZF: 0 |	mod
  ACC -> ALU_LG
  TICK: 1894 PC:  25 ADDR:   0 MEM_OUT: 233 ACC: 233 LG_ALU: 233 RG_ALU:   2 SP: 3945 ZF: 0 |	mod
  ALU_RES = ALU_LG % ALU_RG
  TICK: 1895 PC:  25 ADDR:   0 MEM_OUT: 233 ACC: 233 LG_ALU: 233 RG_ALU:   2 SP: 3945 ZF: 0 |	mod
  ALU_RES -> ACC
  TICK: 1896 PC:  25 ADDR:   0 MEM_OUT: 233 ACC: 1 LG_ALU: 233 RG_ALU:   2 SP: 3945 ZF: 0 |	mod
  SP -> ALU_LG
  TICK: 1897 PC:  26 ADDR:   0 MEM_OUT: 233 ACC: 1 LG_ALU: 3945 RG_ALU:   2 SP: 3945 ZF: 0 |	push
  ALU_RES = SP - 1
  TICK: 1898 PC:  26 ADDR:   0 MEM_OUT: 233 ACC: 1 LG_ALU: 3945 RG_ALU:   2 SP: 3945 ZF: 0 |	push
  ALU_RES -> SP
  TICK: 1899 PC:  26 ADDR:   0 MEM_OUT: 233 ACC: 1 LG_ALU: 3945 RG_ALU:   2 SP: 3944 ZF: 0 |	push
  WRITE ACC -> MEM[ALU]
  TICK: 1899 PC:  26 ADDR:   0 MEM_OUT: 233 ACC: 1 LG_ALU: 3945 RG_ALU:   2 SP: 3944 ZF: 0 |	push
  NUM -> ALU_RG
  TICK: 1900 PC:  27 ADDR:   0 MEM_OUT: 233 ACC: 1 LG_ALU: 3945 RG_ALU:   0 SP: 3944 ZF: 0 |	load   =
  ALU_RES = ALU_RG
  TICK: 1901 PC:  27 ADDR:   0 MEM_OUT: 233 ACC: 1 LG_ALU: 3945 RG_ALU:   0 SP: 3944 ZF: 1 |	load   =
  ALU_RES -> ACC
  TICK: 1902 PC:  27 ADDR:   0 MEM_OUT: 233 ACC: 0 LG_ALU: 3945 RG_ALU:   0 SP: 3944 ZF: 1 |	load   =
  SP -> ALU_LG
  TICK: 1903 PC:  28 ADDR:   0 MEM_OUT: 233 ACC: 0 LG_ALU: 3944 RG_ALU:   0 SP: 3944 ZF: 1 |	sub   =
  ALU_RES = ALU_LG
  TICK: 1904 PC:  28 ADDR:   0 MEM_OUT: 233 ACC: 0 LG_ALU: 3944 RG_ALU:   0 SP: 3944 ZF: 0 |	sub   =
  READ MEM[ALU]
  TICK: 1905 PC:  28 ADDR:   0 MEM_OUT: 1 ACC: 0 LG_ALU: 3944 RG_ALU:   0 SP: 3944 ZF: 0 |	sub   =
  MEM[ALU] -> ALU_RG
  TICK: 1906 PC:  28 ADDR:   0 MEM_OUT: 1 ACC: 0 LG_ALU: 3944 RG_ALU:   1 SP: 3944 ZF: 0 |	sub   =
  ALU_RES = SP + 1
  TICK: 1907 PC:  28 ADDR:   0 MEM_OUT: 1 ACC: 0 LG_ALU: 3944 RG_ALU:   1 SP: 3944 ZF: 0 |	sub   =
  ALU_RES -> SP
  TICK: 1908 PC:  28 ADDR:   0 MEM_OUT: 1 ACC: 0 LG_ALU: 3944 RG_ALU:   1 SP: 3945 ZF: 0 |	sub   =
  ACC -> ALU_LG
  TICK: 1908 PC:  28 ADDR:   0 MEM_OUT: 1 ACC: 0 LG_ALU:   0 RG_ALU:   1 SP: 3945 ZF: 0 |	sub   =
  ALU_RES = ALU_LG + ALU_RG
  TICK: 1909 PC:  28 ADDR:   0 MEM_OUT: 1 ACC: 0 LG_ALU:   0 RG_ALU:   1 SP: 3945 ZF: 0 |	sub   =
  ALU_RES -> ACC
  TICK: 1910 PC:  28 ADDR:   0 MEM_OUT: 1 ACC: -1 LG_ALU:   0 RG_ALU:   1 SP: 3945 ZF: 0 |	sub   =
  ADDR -> PC
  NUM -> ALU_RG
  TICK: 1912 PC:  32 ADDR:   0 MEM_OUT: 1 ACC: -1 LG_ALU:   0 RG_ALU:   0 SP: 3945 ZF: 0 |	load   =
  ALU_RES = ALU_RG
  TICK: 1913 PC:  32 ADDR:   0 MEM_OUT: 1 ACC: -1 LG_ALU:   0 RG_ALU:   0 SP: 3945 ZF: 1 |	load   =
  ALU_RES -> ACC
  TICK: 1914 PC:  32 ADDR:   0 MEM_OUT: 1 ACC: 0 LG_ALU:   0 RG_ALU:   0 SP: 3945 ZF: 1 |	load   =
  SP -> ALU_LG
  TICK: 1915 PC:  33 ADDR:   0 MEM_OUT: 1 ACC: 0 LG_ALU: 3945 RG_ALU:   0 SP: 3945 ZF: 1 |	push   =
  ALU_RES = SP - 1
  TICK: 1916 PC:  33 ADDR:   0 MEM_OUT: 1 ACC: 0 LG_ALU: 3945 RG_ALU:   0 SP: 3945 ZF: 0 |	push   =
  ALU_RES -> SP
  TICK: 1917 PC:  33 ADDR:   0 MEM_OUT: 1 ACC: 0 LG_ALU: 3945 RG_ALU:   0 SP: 3944 ZF: 0 |	push   =
  WRITE ACC -> MEM[ALU]
  TICK: 1917 PC:  33 ADDR:   0 MEM_OUT: 1 ACC: 0 LG_ALU: 3945 RG_ALU:   0 SP: 3944 ZF: 0 |	push   =
  SP -> ALU_LG
  TICK: 1918 PC:  34 ADDR:   0 MEM_OUT: 1 ACC: 0 LG_ALU: 3944 RG_ALU:   0 SP: 3944 ZF: 0 |	pop   if
  ALU_RES = ALU_LG
  TICK: 1919 PC:  34 ADDR:   0 MEM_OUT: 1 ACC: 0 LG_ALU: 3944 RG_ALU:   0 SP: 3944 ZF: 0 |	pop   if
  READ MEM[ALU]
  TICK: 1920 PC:  34 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3944 RG_ALU:   0 SP: 3944 ZF: 0 |	pop   if
  ALU_RES = SP + 1
  TICK: 1921 PC:  34 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3944 RG_ALU:   0 SP: 3944 ZF: 0 |	pop   if
  ALU_RES -> SP
  TICK: 1922 PC:  34 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3944 RG_ALU:   0 SP: 3945 ZF: 0 |	pop   if
  MEM[ALU] -> ALU_RG
  TICK: 1922 PC:  34 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3944 RG_ALU:   0 SP: 3945 ZF: 0 |	pop   if
  ALU_RES = ALU_RG
  TICK: 1923 PC:  34 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3944 RG_ALU:   0 SP: 3945 ZF: 1 |	pop   if
  ALU_RES -> ACC
  TICK: 1924 PC:  34 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3944 RG_ALU:   0 SP: 3945 ZF: 1 |	pop   if
  PC + 1 -> PC
  ADDR -> PC
  NUM -> ALU_RG
  TICK: 1926 PC:  20 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3944 RG_ALU:   0 SP: 3945 ZF: 1 |	load   +
  ALU_RES = ALU_RG
  TICK: 1927 PC:  20 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3944 RG_ALU:   0 SP: 3945 ZF: 1 |	load   +
  ALU_RES -> ACC
  TICK: 1928 PC:  20 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3944 RG_ALU:   0 SP: 3945 ZF: 1 |	load   +
  NUM -> ALU_RG
  TICK: 1929 PC:  21 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3944 RG_ALU:   0 SP: 3945 ZF: 1 |	add   +
  ACC -> ALU_LG
  TICK: 1929 PC:  21 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU:   0 RG_ALU:   0 SP: 3945 ZF: 1 |	add   +
  ALU_RES = ALU_LG + ALU_RG
  TICK: 1930 PC:  21 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU:   0 RG_ALU:   0 SP: 3945 ZF: 1 |	add   +
  ALU_RES -> ACC
  TICK: 1931 PC:  21 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU:   0 RG_ALU:   0 SP: 3945 ZF: 1 |	add   +
  SP -> ALU_LG
  TICK: 1932 PC:  22 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3945 RG_ALU:   0 SP: 3945 ZF: 1 |	push   +
  ALU_RES = SP - 1
  TICK: 1933 PC:  22 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3945 RG_ALU:   0 SP: 3945 ZF: 0 |	push   +
  ALU_RES -> SP
  TICK: 1934 PC:  22 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3945 RG_ALU:   0 SP: 3944 ZF: 0 |	push   +
  WRITE ACC -> MEM[ALU]
  TICK: 1934 PC:  22 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3945 RG_ALU:   0 SP: 3944 ZF: 0 |	push   +
  ADDR -> PC
  SP -> ALU_LG
  TICK: 1936 PC:  37 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3944 RG_ALU:   0 SP: 3944 ZF: 0 |	pop   if
  ALU_RES = ALU_LG
  TICK: 1937 PC:  37 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3944 RG_ALU:   0 SP: 3944 ZF: 0 |	pop   if
  READ MEM[ALU]
  TICK: 1938 PC:  37 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3944 RG_ALU:   0 SP: 3944 ZF: 0 |	pop   if
  ALU_RES = SP + 1
  TICK: 1939 PC:  37 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3944 RG_ALU:   0 SP: 3944 ZF: 0 |	pop   if
  ALU_RES -> SP
  TICK: 1940 PC:  37 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3944 RG_ALU:   0 SP: 3945 ZF: 0 |	pop   if
  MEM[ALU] -> ALU_RG
  TICK: 1940 PC:  37 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3944 RG_ALU:   0 SP: 3945 ZF: 0 |	pop   if
  ALU_RES = ALU_RG
  TICK: 1941 PC:  37 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3944 RG_ALU:   0 SP: 3945 ZF: 1 |	pop   if
  ALU_RES -> ACC
  TICK: 1942 PC:  37 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3944 RG_ALU:   0 SP: 3945 ZF: 1 |	pop   if
  SP -> ALU_LG
  TICK: 1943 PC:  38 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3945 RG_ALU:   0 SP: 3945 ZF: 1 |	push   if
  ALU_RES = SP - 1
  TICK: 1944 PC:  38 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3945 RG_ALU:   0 SP: 3945 ZF: 0 |	push   if
  ALU_RES -> SP
  TICK: 1945 PC:  38 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3945 RG_ALU:   0 SP: 3944 ZF: 0 |	push   if
  WRITE ACC -> MEM[ALU]
  TICK: 1945 PC:  38 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3945 RG_ALU:   0 SP: 3944 ZF: 0 |	push   if
  ADDR -> ALU_RG
  TICK: 1946 PC:  39 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3945 RG_ALU:   6 SP: 3944 ZF: 0 |	load   var
  ALU_RES = ALU_RG
  TICK: 1947 PC:  39 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3945 RG_ALU:   6 SP: 3944 ZF: 0 |	load   var
  READ MEM[ALU]
  TICK: 1948 PC:  39 ADDR:   0 MEM_OUT: 233 ACC: 0 LG_ALU: 3945 RG_ALU:   6 SP: 3944 ZF: 0 |	load   var
  MEM[ALU] -> ALU_RG
  TICK: 1949 PC:  39 ADDR:   0 MEM_OUT: 233 ACC: 0 LG_ALU: 3945 RG_ALU: 233 SP: 3944 ZF: 0 |	load   var
  ALU_RES = ALU_RG
  TICK: 1950 PC:  39 ADDR:   0 MEM_OUT: 233 ACC: 0 LG_ALU: 3945 RG_ALU: 233 SP: 3944 ZF: 0 |	load   var
  ALU_RES -> ACC
  TICK: 1951 PC:  39 ADDR:   0 MEM_OUT: 233 ACC: 233 LG_ALU: 3945 RG_ALU: 233 SP: 3944 ZF: 0 |	load   var
  ADDR -> ALU_RG
  TICK: 1952 PC:  40 ADDR:   0 MEM_OUT: 233 ACC: 233 LG_ALU: 3945 RG_ALU:   8 SP: 3944 ZF: 0 |	store   var
  ALU_RES = ALU_RG
  TICK: 1953 PC:  40 ADDR:   0 MEM_OUT: 233 ACC: 233 LG_ALU: 3945 RG_ALU:   8 SP: 3944 ZF: 0 |	store   var
  WRITE ACC -> MEM[ALU]
  TICK: 1954 PC:  40 ADDR:   0 MEM_OUT: 233 ACC: 233 LG_ALU: 3945 RG_ALU:   8 SP: 3944 ZF: 0 |	store   var
  NUM -> ALU_RG
  TICK: 1955 PC:  41 ADDR:   0 MEM_OUT: 233 ACC: 233 LG_ALU: 3945 RG_ALU:   1 SP: 3944 ZF: 0 |	load   var
  ALU_RES = ALU_RG
  TICK: 1956 PC:  41 ADDR:   0 MEM_OUT: 233 ACC: 233 LG_ALU: 3945 RG_ALU:   1 SP: 3944 ZF: 0 |	load   var
  ALU_RES -> ACC
  TICK: 1957 PC:  41 ADDR:   0 MEM_OUT: 233 ACC: 1 LG_ALU: 3945 RG_ALU:   1 SP: 3944 ZF: 0 |	load   var
  SP -> ALU_LG
  TICK: 1958 PC:  42 ADDR:   0 MEM_OUT: 233 ACC: 1 LG_ALU: 3944 RG_ALU:   1 SP: 3944 ZF: 0 |	push   var
  ALU_RES = SP - 1
  TICK: 1959 PC:  42 ADDR:   0 MEM_OUT: 233 ACC: 1 LG_ALU: 3944 RG_ALU:   1 SP: 3944 ZF: 0 |	push   var
  ALU_RES -> SP
  TICK: 1960 PC:  42 ADDR:   0 MEM_OUT: 233 ACC: 1 LG_ALU: 3944 RG_ALU:   1 SP: 3943 ZF: 0 |	push   var
  WRITE ACC -> MEM[ALU]
  TICK: 1960 PC:  42 ADDR:   0 MEM_OUT: 233 ACC: 1 LG_ALU: 3944 RG_ALU:   1 SP: 3943 ZF: 0 |	push   var
  ADDR -> ALU_RG
  TICK: 1961 PC:  43 ADDR:   0 MEM_OUT: 233 ACC: 1 LG_ALU: 3944 RG_ALU:   5 SP: 3943 ZF: 0 |	load   +
  ALU_RES = ALU_RG
  TICK: 1962 PC:  43 ADDR:   0 MEM_OUT: 233 ACC: 1 LG_ALU: 3944 RG_ALU:   5 SP: 3943 ZF: 0 |	load   +
  READ MEM[ALU]
  TICK: 1963 PC:  43 ADDR:   0 MEM_OUT: 144 ACC: 1 LG_ALU: 3944 RG_ALU:   5 SP: 3943 ZF: 0 |	load   +
  MEM[ALU] -> ALU_RG
  TICK: 1964 PC:  43 ADDR:   0 MEM_OUT: 144 ACC: 1 LG_ALU: 3944 RG_ALU: 144 SP: 3943 ZF: 0 |	load   +
  ALU_RES = ALU_RG
  TICK: 1965 PC:  43 ADDR:   0 MEM_OUT: 144 ACC: 1 LG_ALU: 3944 RG_ALU: 144 SP: 3943 ZF: 0 |	load   +
  ALU_RES -> ACC
  TICK: 1966 PC:  43 ADDR:   0 MEM_OUT: 144 ACC: 144 LG_ALU: 3944 RG_ALU: 144 SP: 3943 ZF: 0 |	load   +
  ADDR -> ALU_RG
  TICK: 1967 PC:  44 ADDR:   0 MEM_OUT: 144 ACC: 144 LG_ALU: 3944 RG_ALU:   6 SP: 3943 ZF: 0 |	add   +
  ALU_RES = ALU_RG
  TICK: 1968 PC:  44 ADDR:   0 MEM_OUT: 144 ACC: 144 LG_ALU: 3944 RG_ALU:   6 SP: 3943 ZF: 0 |	add   +
  READ MEM[ALU]
  TICK: 1969 PC:  44 ADDR:   0 MEM_OUT: 233 ACC: 144 LG_ALU: 3944 RG_ALU:   6 SP: 3943 ZF: 0 |	add   +
  MEM[ALU] -> ALU_RG
  TICK: 1970 PC:  44 ADDR:   0 MEM_OUT: 233 ACC: 144 LG_ALU: 3944 RG_ALU: 233 SP: 3943 ZF: 0 |	add   +
  ACC -> ALU_LG
  TICK: 1970 PC:  44 ADDR:   0 MEM_OUT: 233 ACC: 144 LG_ALU: 144 RG_ALU: 233 SP: 3943 ZF: 0 |	add   +
  ALU_RES = ALU_LG + ALU_RG
  TICK: 1971 PC:  44 ADDR:   0 MEM_OUT: 233 ACC: 144 LG_ALU: 144 RG_ALU: 233 SP: 3943 ZF: 0 |	add   +
  ALU_RES -> ACC
  TICK: 1972 PC:  44 ADDR:   0 MEM_OUT: 233 ACC: 377 LG_ALU: 144 RG_ALU: 233 SP: 3943 ZF: 0 |	add   +
  SP -> ALU_LG
  TICK: 1973 PC:  45 ADDR:   0 MEM_OUT: 233 ACC: 377 LG_ALU: 3943 RG_ALU: 233 SP: 3943 ZF: 0 |	push   +
  ALU_RES = SP - 1
  TICK: 1974 PC:  45 ADDR:   0 MEM_OUT: 233 ACC: 377 LG_ALU: 3943 RG_ALU: 233 SP: 3943 ZF: 0 |	push   +
  ALU_RES -> SP
  TICK: 1975 PC:  45 ADDR:   0 MEM_OUT: 233 ACC: 377 LG_ALU: 3943 RG_ALU: 233 SP: 3942 ZF: 0 |	push   +
  WRITE ACC -> MEM[ALU]
  TICK: 1975 PC:  45 ADDR:   0 MEM_OUT: 233 ACC: 377 LG_ALU: 3943 RG_ALU: 233 SP: 3942 ZF: 0 |	push   +
  SP -> ALU_LG
  TICK: 1976 PC:  46 ADDR:   0 MEM_OUT: 233 ACC: 377 LG_ALU: 3942 RG_ALU: 233 SP: 3942 ZF: 0 |	pop   var
  ALU_RES = ALU_LG
  TICK: 1977 PC:  46 ADDR:   0 MEM_OUT: 233 ACC: 377 LG_ALU: 3942 RG_ALU: 233 SP: 3942 ZF: 0 |	pop   var
  READ MEM[ALU]
  TICK: 1978 PC:  46 ADDR:   0 MEM_OUT: 377 ACC: 377 LG_ALU: 3942 RG_ALU: 233 SP: 3942 ZF: 0 |	pop   var
  ALU_RES = SP + 1
  TICK: 1979 PC:  46 ADDR:   0 MEM_OUT: 377 ACC: 377 LG_ALU: 3942 RG_ALU: 233 SP: 3942 ZF: 0 |	pop   var
  ALU_RES -> SP
  TICK: 1980 PC:  46 ADDR:   0 MEM_OUT: 377 ACC: 377 LG_ALU: 3942 RG_ALU: 233 SP: 3943 ZF: 0 |	pop   var
  MEM[ALU] -> ALU_RG
  TICK: 1980 PC:  46 ADDR:   0 MEM_OUT: 377 ACC: 377 LG_ALU: 3942 RG_ALU: 377 SP: 3943 ZF: 0 |	pop   var
  ALU_RES = ALU_RG
  TICK: 1981 PC:  46 ADDR:   0 MEM_OUT: 377 ACC: 377 LG_ALU: 3942 RG_ALU: 377 SP: 3943 ZF: 0 |	pop   var
  ALU_RES -> ACC
  TICK: 1982 PC:  46 ADDR:   0 MEM_OUT: 377 ACC: 377 LG_ALU: 3942 RG_ALU: 377 SP: 3943 ZF: 0 |	pop   var
  ADDR -> ALU_RG
  TICK: 1983 PC:  47 ADDR:   0 MEM_OUT: 377 ACC: 377 LG_ALU: 3942 RG_ALU:   6 SP: 3943 ZF: 0 |	store   var
  ALU_RES = ALU_RG
  TICK: 1984 PC:  47 ADDR:   0 MEM_OUT: 377 ACC: 377 LG_ALU: 3942 RG_ALU:   6 SP: 3943 ZF: 0 |	store   var
  WRITE ACC -> MEM[ALU]
  TICK: 1985 PC:  47 ADDR:   0 MEM_OUT: 377 ACC: 377 LG_ALU: 3942 RG_ALU:   6 SP: 3943 ZF: 0 |	store   var
  NUM -> ALU_RG
  TICK: 1986 PC:  48 ADDR:   0 MEM_OUT: 377 ACC: 377 LG_ALU: 3942 RG_ALU:   1 SP: 3943 ZF: 0 |	load   var
  ALU_RES = ALU_RG
  TICK: 1987 PC:  48 ADDR:   0 MEM_OUT: 377 ACC: 377 LG_ALU: 3942 RG_ALU:   1 SP: 3943 ZF: 0 |	load   var
  ALU_RES -> ACC
  TICK: 1988 PC:  48 ADDR:   0 MEM_OUT: 377 ACC: 1 LG_ALU: 3942 RG_ALU:   1 SP: 3943 ZF: 0 |	load   var
  SP -> ALU_LG
  TICK: 1989 PC:  49 ADDR:   0 MEM_OUT: 377 ACC: 1 LG_ALU: 3943 RG_ALU:   1 SP: 3943 ZF: 0 |	push   var
  ALU_RES = SP - 1
  TICK: 1990 PC:  49 ADDR:   0 MEM_OUT: 377 ACC: 1 LG_ALU: 3943 RG_ALU:   1 SP: 3943 ZF: 0 |	push   var
  ALU_RES -> SP
  TICK: 1991 PC:  49 ADDR:   0 MEM_OUT: 377 ACC: 1 LG_ALU: 3943 RG_ALU:   1 SP: 3942 ZF: 0 |	push   var
  WRITE ACC -> MEM[ALU]
  TICK: 1991 PC:  49 ADDR:   0 MEM_OUT: 377 ACC: 1 LG_ALU: 3943 RG_ALU:   1 SP: 3942 ZF: 0 |	push   var
  ADDR -> ALU_RG
  TICK: 1992 PC:  50 ADDR:   0 MEM_OUT: 377 ACC: 1 LG_ALU: 3943 RG_ALU:   8 SP: 3942 ZF: 0 |	load   var
  ALU_RES = ALU_RG
  TICK: 1993 PC:  50 ADDR:   0 MEM_OUT: 377 ACC: 1 LG_ALU: 3943 RG_ALU:   8 SP: 3942 ZF: 0 |	load   var
  READ MEM[ALU]
  TICK: 1994 PC:  50 ADDR:   0 MEM_OUT: 233 ACC: 1 LG_ALU: 3943 RG_ALU:   8 SP: 3942 ZF: 0 |	load   var
  MEM[ALU] -> ALU_RG
  TICK: 1995 PC:  50 ADDR:   0 MEM_OUT: 233 ACC: 1 LG_ALU: 3943 RG_ALU: 233 SP: 3942 ZF: 0 |	load   var
  ALU_RES = ALU_RG
  TICK: 1996 PC:  50 ADDR:   0 MEM_OUT: 233 ACC: 1 LG_ALU: 3943 RG_ALU: 233 SP: 3942 ZF: 0 |	load   var
  ALU_RES -> ACC
  TICK: 1997 PC:  50 ADDR:   0 MEM_OUT: 233 ACC: 233 LG_ALU: 3943 RG_ALU: 233 SP: 3942 ZF: 0 |	load   var
  ADDR -> ALU_RG
  TICK: 1998 PC:  51 ADDR:   0 MEM_OUT: 233 ACC: 233 LG_ALU: 3943 RG_ALU:   5 SP: 3942 ZF: 0 |	store   var
  ALU_RES = ALU_RG
  TICK: 1999 PC:  51 ADDR:   0 MEM_OUT: 233 ACC: 233 LG_ALU: 3943 RG_ALU:   5 SP: 3942 ZF: 0 |	store   var
  WRITE ACC -> MEM[ALU]
  TICK: 2000 PC:  51 ADDR:   0 MEM_OUT: 233 ACC: 233 LG_ALU: 3943 RG_ALU:   5 SP: 3942 ZF: 0 |	store   var
  NUM -> ALU_RG
  TICK: 2001 PC:  52 ADDR:   0 MEM_OUT: 233 ACC: 233 LG_ALU: 3943 RG_ALU:   1 SP: 3942 ZF: 0 |	load   var
  ALU_RES = ALU_RG
  TICK: 2002 PC:  52 ADDR:   0 MEM_OUT: 233 ACC: 233 LG_ALU: 3943 RG_ALU:   1 SP: 3942 ZF: 0 |	load   var
  ALU_RES -> ACC
  TICK: 2003 PC:  52 ADDR:   0 MEM_OUT: 233 ACC: 1 LG_ALU: 3943 RG_ALU:   1 SP: 3942 ZF: 0 |	load   var
  SP -> ALU_LG
  TICK: 2004 PC:  53 ADDR:   0 MEM_OUT: 233 ACC: 1 LG_ALU: 3942 RG_ALU:   1 SP: 3942 ZF: 0 |	push   var
  ALU_RES = SP - 1
  TICK: 2005 PC:  53 ADDR:   0 MEM_OUT: 233 ACC: 1 LG_ALU: 3942 RG_ALU:   1 SP: 3942 ZF: 0 |	push   var
  ALU_RES -> SP
  TICK: 2006 PC:  53 ADDR:   0 MEM_OUT: 233 ACC: 1 LG_ALU: 3942 RG_ALU:   1 SP: 3941 ZF: 0 |	push   var
  WRITE ACC -> MEM[ALU]
  TICK: 2006 PC:  53 ADDR:   0 MEM_OUT: 233 ACC: 1 LG_ALU: 3942 RG_ALU:   1 SP: 3941 ZF: 0 |	push   var
  ADDR -> ALU_RG
  TICK: 2007 PC:  54 ADDR:   0 MEM_OUT: 233 ACC: 1 LG_ALU: 3942 RG_ALU:   6 SP: 3941 ZF: 0 |	load   <
  ALU_RES = ALU_RG
  TICK: 2008 PC:  54 ADDR:   0 MEM_OUT: 233 ACC: 1 LG_ALU: 3942 RG_ALU:   6 SP: 3941 ZF: 0 |	load   <
  READ MEM[ALU]
  TICK: 2009 PC:  54 ADDR:   0 MEM_OUT: 377 ACC: 1 LG_ALU: 3942 RG_ALU:   6 SP: 3941 ZF: 0 |	load   <
  MEM[ALU] -> ALU_RG
  TICK: 2010 PC:  54 ADDR:   0 MEM_OUT: 377 ACC: 1 LG_ALU: 3942 RG_ALU: 377 SP: 3941 ZF: 0 |	load   <
  ALU_RES = ALU_RG
  TICK: 2011 PC:  54 ADDR:   0 MEM_OUT: 377 ACC: 1 LG_ALU: 3942 RG_ALU: 377 SP: 3941 ZF: 0 |	load   <
  ALU_RES -> ACC
  TICK: 2012 PC:  54 ADDR:   0 MEM_OUT: 377 ACC: 377 LG_ALU: 3942 RG_ALU: 377 SP: 3941 ZF: 0 |	load   <
  ADDR -> ALU_RG
  TICK: 2013 PC:  55 ADDR:   0 MEM_OUT: 377 ACC: 377 LG_ALU: 3942 RG_ALU:   7 SP: 3941 ZF: 0 |	sub   <
  ALU_RES = ALU_RG
  TICK: 2014 PC:  55 ADDR:   0 MEM_OUT: 377 ACC: 377 LG_ALU: 3942 RG_ALU:   7 SP: 3941 ZF: 0 |	sub   <
  READ MEM[ALU]
  TICK: 2015 PC:  55 ADDR:   0 MEM_OUT: 400000 ACC: 377 LG_ALU: 3942 RG_ALU:   7 SP: 3941 ZF: 0 |	sub   <
  MEM[ALU] -> ALU_RG
  TICK: 2016 PC:  55 ADDR:   0 MEM_OUT: 400000 ACC: 377 LG_ALU: 3942 RG_ALU: 400000 SP: 3941 ZF: 0 |	sub   <
  ACC -> ALU_LG
  TICK: 2016 PC:  55 ADDR:   0 MEM_OUT: 400000 ACC: 377 LG_ALU: 377 RG_ALU: 400000 SP: 3941 ZF: 0 |	sub   <
  ALU_RES = ALU_LG + ALU_RG
  TICK: 2017 PC:  55 ADDR:   0 MEM_OUT: 400000 ACC: 377 LG_ALU: 377 RG_ALU: 400000 SP: 3941 ZF: 0 |	sub   <
  ALU_RES -> ACC
  TICK: 2018 PC:  55 ADDR:   0 MEM_OUT: 400000 ACC: -399623 LG_ALU: 377 RG_ALU: 400000 SP: 3941 ZF: 0 |	sub   <
  PC + 1 -> PC
  NUM -> ALU_RG
  TICK: 2019 PC:  57 ADDR:   0 MEM_OUT: 400000 ACC: -399623 LG_ALU: 377 RG_ALU:   1 SP: 3941 ZF: 0 |	load   <
  ALU_RES = ALU_RG
  TICK: 2020 PC:  57 ADDR:   0 MEM_OUT: 400000 ACC: -399623 LG_ALU: 377 RG_ALU:   1 SP: 3941 ZF: 0 |	load   <
  ALU_RES -> ACC
  TICK: 2021 PC:  57 ADDR:   0 MEM_OUT: 400000 ACC: 1 LG_ALU: 377 RG_ALU:   1 SP: 3941 ZF: 0 |	load   <
  ADDR -> PC
  SP -> ALU_LG
  TICK: 2023 PC:  60 ADDR:   0 MEM_OUT: 400000 ACC: 1 LG_ALU: 3941 RG_ALU:   1 SP: 3941 ZF: 0 |	push   <
  ALU_RES = SP - 1
  TICK: 2024 PC:  60 ADDR:   0 MEM_OUT: 400000 ACC: 1 LG_ALU: 3941 RG_ALU:   1 SP: 3941 ZF: 0 |	push   <
  ALU_RES -> SP
  TICK: 2025 PC:  60 ADDR:   0 MEM_OUT: 400000 ACC: 1 LG_ALU: 3941 RG_ALU:   1 SP: 3940 ZF: 0 |	push   <
  WRITE ACC -> MEM[ALU]
  TICK: 2025 PC:  60 ADDR:   0 MEM_OUT: 400000 ACC: 1 LG_ALU: 3941 RG_ALU:   1 SP: 3940 ZF: 0 |	push   <
  SP -> ALU_LG
  TICK: 2026 PC:  61 ADDR:   0 MEM_OUT: 400000 ACC: 1 LG_ALU: 3940 RG_ALU:   1 SP: 3940 ZF: 0 |	pop
  ALU_RES = ALU_LG
  TICK: 2027 PC:  61 ADDR:   0 MEM_OUT: 400000 ACC: 1 LG_ALU: 3940 RG_ALU:   1 SP: 3940 ZF: 0 |	pop
  READ MEM[ALU]
  TICK: 2028 PC:  61 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3940 RG_ALU:   1 SP: 3940 ZF: 0 |	pop
  ALU_RES = SP + 1
  TICK: 2029 PC:  61 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3940 RG_ALU:   1 SP: 3940 ZF: 0 |	pop
  ALU_RES -> SP
  TICK: 2030 PC:  61 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3940 RG_ALU:   1 SP: 3941 ZF: 0 |	pop
  MEM[ALU] -> ALU_RG
  TICK: 2030 PC:  61 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3940 RG_ALU:   1 SP: 3941 ZF: 0 |	pop
  ALU_RES = ALU_RG
  TICK: 2031 PC:  61 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3940 RG_ALU:   1 SP: 3941 ZF: 0 |	pop
  ALU_RES -> ACC
  TICK: 2032 PC:  61 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3940 RG_ALU:   1 SP: 3941 ZF: 0 |	pop
  ADDR -> PC
  ADDR -> PC
  ADDR -> ALU_RG
  TICK: 2035 PC:  24 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3940 RG_ALU:   6 SP: 3941 ZF: 0 |	load
  ALU_RES = ALU_RG
  TICK: 2036 PC:  24 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3940 RG_ALU:   6 SP: 3941 ZF: 0 |	load
  READ MEM[ALU]
  TICK: 2037 PC:  24 ADDR:   0 MEM_OUT: 377 ACC: 1 LG_ALU: 3940 RG_ALU:   6 SP: 3941 ZF: 0 |	load
  MEM[ALU] -> ALU_RG
  TICK: 2038 PC:  24 ADDR:   0 MEM_OUT: 377 ACC: 1 LG_ALU: 3940 RG_ALU: 377 SP: 3941 ZF: 0 |	load
  ALU_RES = ALU_RG
  TICK: 2039 PC:  24 ADDR:   0 MEM_OUT: 377 ACC: 1 LG_ALU: 3940 RG_ALU: 377 SP: 3941 ZF: 0 |	load
  ALU_RES -> ACC
  TICK: 2040 PC:  24 ADDR:   0 MEM_OUT: 377 ACC: 377 LG_ALU: 3940 RG_ALU: 377 SP: 3941 ZF: 0 |	load
  NUM -> ALU_RG
  TICK: 2041 PC:  25 ADDR:   0 MEM_OUT: 377 ACC: 377 LG_ALU: 3940 RG_ALU:   2 SP: 3941 ZF: 0 |	mod
  ACC -> ALU_LG
  TICK: 2041 PC:  25 ADDR:   0 MEM_OUT: 377 ACC: 377 LG_ALU: 377 RG_ALU:   2 SP: 3941 ZF: 0 |	mod
  ALU_RES = ALU_LG % ALU_RG
  TICK: 2042 PC:  25 ADDR:   0 MEM_OUT: 377 ACC: 377 LG_ALU: 377 RG_ALU:   2 SP: 3941 ZF: 0 |	mod
  ALU_RES -> ACC
  TICK: 2043 PC:  25 ADDR:   0 MEM_OUT: 377 ACC: 1 LG_ALU: 377 RG_ALU:   2 SP: 3941 ZF: 0 |	mod
  SP -> ALU_LG
  TICK: 2044 PC:  26 ADDR:   0 MEM_OUT: 377 ACC: 1 LG_ALU: 3941 RG_ALU:   2 SP: 3941 ZF: 0 |	push
  ALU_RES = SP - 1
  TICK: 2045 PC:  26 ADDR:   0 MEM_OUT: 377 ACC: 1 LG_ALU: 3941 RG_ALU:   2 SP: 3941 ZF: 0 |	push
  ALU_RES -> SP
  TICK: 2046 PC:  26 ADDR:   0 MEM_OUT: 377 ACC: 1 LG_ALU: 3941 RG_ALU:   2 SP: 3940 ZF: 0 |	push
  WRITE ACC -> MEM[ALU]
  TICK: 2046 PC:  26 ADDR:   0 MEM_OUT: 377 ACC: 1 LG_ALU: 3941 RG_ALU:   2 SP: 3940 ZF: 0 |	push
  NUM -> ALU_RG
  TICK: 2047 PC:  27 ADDR:   0 MEM_OUT: 377 ACC: 1 LG_ALU: 3941 RG_ALU:   0 SP: 3940 ZF: 0 |	load   =
  ALU_RES = ALU_RG
  TICK: 2048 PC:  27 ADDR:   0 MEM_OUT: 377 ACC: 1 LG_ALU: 3941 RG_ALU:   0 SP: 3940 ZF: 1 |	load   =
  ALU_RES -> ACC
  TICK: 2049 PC:  27 ADDR:   0 MEM_OUT: 377 ACC: 0 LG_ALU: 3941 RG_ALU:   0 SP: 3940 ZF: 1 |	load   =
  SP -> ALU_LG
  TICK: 2050 PC:  28 ADDR:   0 MEM_OUT: 377 ACC: 0 LG_ALU: 3940 RG_ALU:   0 SP: 3940 ZF: 1 |	sub   =
  ALU_RES = ALU_LG
  TICK: 2051 PC:  28 ADDR:   0 MEM_OUT: 377 ACC: 0 LG_ALU: 3940 RG_ALU:   0 SP: 3940 ZF: 0 |	sub   =
  READ MEM[ALU]
  TICK: 2052 PC:  28 ADDR:   0 MEM_OUT: 1 ACC: 0 LG_ALU: 3940 RG_ALU:   0 SP: 3940 ZF: 0 |	sub   =
  MEM[ALU] -> ALU_RG
  TICK: 2053 PC:  28 ADDR:   0 MEM_OUT: 1 ACC: 0 LG_ALU: 3940 RG_ALU:   1 SP: 3940 ZF: 0 |	sub   =
  ALU_RES = SP + 1
  TICK: 2054 PC:  28 ADDR:   0 MEM_OUT: 1 ACC: 0 LG_ALU: 3940 RG_ALU:   1 SP: 3940 ZF: 0 |	sub   =
  ALU_RES -> SP
  TICK: 2055 PC:  28 ADDR:   0 MEM_OUT: 1 ACC: 0 LG_ALU: 3940 RG_ALU:   1 SP: 3941 ZF: 0 |	sub   =
  ACC -> ALU_LG
  TICK: 2055 PC:  28 ADDR:   0 MEM_OUT: 1 ACC: 0 LG_ALU:   0 RG_ALU:   1 SP: 3941 ZF: 0 |	sub   =
  ALU_RES = ALU_LG + ALU_RG
  TICK: 2056 PC:  28 ADDR:   0 MEM_OUT: 1 ACC: 0 LG_ALU:   0 RG_ALU:   1 SP: 3941 ZF: 0 |	sub   =
  ALU_RES -> ACC
  TICK: 2057 PC:  28 ADDR:   0 MEM_OUT: 1 ACC: -1 LG_ALU:   0 RG_ALU:   1 SP: 3941 ZF: 0 |	sub   =
  ADDR -> PC
  NUM -> ALU_RG
  TICK: 2059 PC:  32 ADDR:   0 MEM_OUT: 1 ACC: -1 LG_ALU:   0 RG_ALU:   0 SP: 3941 ZF: 0 |	load   =
  ALU_RES = ALU_RG
  TICK: 2060 PC:  32 ADDR:   0 MEM_OUT: 1 ACC: -1 LG_ALU:   0 RG_ALU:   0 SP: 3941 ZF: 1 |	load   =
  ALU_RES -> ACC
  TICK: 2061 PC:  32 ADDR:   0 MEM_OUT: 1 ACC: 0 LG_ALU:   0 RG_ALU:   0 SP: 3941 ZF: 1 |	load   =
  SP -> ALU_LG
  TICK: 2062 PC:  33 ADDR:   0 MEM_OUT: 1 ACC: 0 LG_ALU: 3941 RG_ALU:   0 SP: 3941 ZF: 1 |	push   =
  ALU_RES = SP - 1
  TICK: 2063 PC:  33 ADDR:   0 MEM_OUT: 1 ACC: 0 LG_ALU: 3941 RG_ALU:   0 SP: 3941 ZF: 0 |	push   =
  ALU_RES -> SP
  TICK: 2064 PC:  33 ADDR:   0 MEM_OUT: 1 ACC: 0 LG_ALU: 3941 RG_ALU:   0 SP: 3940 ZF: 0 |	push   =
  WRITE ACC -> MEM[ALU]
  TICK: 2064 PC:  33 ADDR:   0 MEM_OUT: 1 ACC: 0 LG_ALU: 3941 RG_ALU:   0 SP: 3940 ZF: 0 |	push   =
  SP -> ALU_LG
  TICK: 2065 PC:  34 ADDR:   0 MEM_OUT: 1 ACC: 0 LG_ALU: 3940 RG_ALU:   0 SP: 3940 ZF: 0 |	pop   if
  ALU_RES = ALU_LG
  TICK: 2066 PC:  34 ADDR:   0 MEM_OUT: 1 ACC: 0 LG_ALU: 3940 RG_ALU:   0 SP: 3940 ZF: 0 |	pop   if
  READ MEM[ALU]
  TICK: 2067 PC:  34 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3940 RG_ALU:   0 SP: 3940 ZF: 0 |	pop   if
  ALU_RES = SP + 1
  TICK: 2068 PC:  34 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3940 RG_ALU:   0 SP: 3940 ZF: 0 |	pop   if
  ALU_RES -> SP
  TICK: 2069 PC:  34 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3940 RG_ALU:   0 SP: 3941 ZF: 0 |	pop   if
  MEM[ALU] -> ALU_RG
  TICK: 2069 PC:  34 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3940 RG_ALU:   0 SP: 3941 ZF: 0 |	pop   if
  ALU_RES = ALU_RG
  TICK: 2070 PC:  34 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3940 RG_ALU:   0 SP: 3941 ZF: 1 |	pop   if
  ALU_RES -> ACC
  TICK: 2071 PC:  34 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3940 RG_ALU:   0 SP: 3941 ZF: 1 |	pop   if
  PC + 1 -> PC
  ADDR -> PC
  NUM -> ALU_RG
  TICK: 2073 PC:  20 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3940 RG_ALU:   0 SP: 3941 ZF: 1 |	load   +
  ALU_RES = ALU_RG
  TICK: 2074 PC:  20 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3940 RG_ALU:   0 SP: 3941 ZF: 1 |	load   +
  ALU_RES -> ACC
  TICK: 2075 PC:  20 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3940 RG_ALU:   0 SP: 3941 ZF: 1 |	load   +
  NUM -> ALU_RG
  TICK: 2076 PC:  21 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3940 RG_ALU:   0 SP: 3941 ZF: 1 |	add   +
  ACC -> ALU_LG
  TICK: 2076 PC:  21 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU:   0 RG_ALU:   0 SP: 3941 ZF: 1 |	add   +
  ALU_RES = ALU_LG + ALU_RG
  TICK: 2077 PC:  21 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU:   0 RG_ALU:   0 SP: 3941 ZF: 1 |	add   +
  ALU_RES -> ACC
  TICK: 2078 PC:  21 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU:   0 RG_ALU:   0 SP: 3941 ZF: 1 |	add   +
  SP -> ALU_LG
  TICK: 2079 PC:  22 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3941 RG_ALU:   0 SP: 3941 ZF: 1 |	push   +
  ALU_RES = SP - 1
  TICK: 2080 PC:  22 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3941 RG_ALU:   0 SP: 3941 ZF: 0 |	push   +
  ALU_RES -> SP
  TICK: 2081 PC:  22 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3941 RG_ALU:   0 SP: 3940 ZF: 0 |	push   +
  WRITE ACC -> MEM[ALU]
  TICK: 2081 PC:  22 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3941 RG_ALU:   0 SP: 3940 ZF: 0 |	push   +
  ADDR -> PC
  SP -> ALU_LG
  TICK: 2083 PC:  37 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3940 RG_ALU:   0 SP: 3940 ZF: 0 |	pop   if
  ALU_RES = ALU_LG
  TICK: 2084 PC:  37 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3940 RG_ALU:   0 SP: 3940 ZF: 0 |	pop   if
  READ MEM[ALU]
  TICK: 2085 PC:  37 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3940 RG_ALU:   0 SP: 3940 ZF: 0 |	pop   if
  ALU_RES = SP + 1
  TICK: 2086 PC:  37 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3940 RG_ALU:   0 SP: 3940 ZF: 0 |	pop   if
  ALU_RES -> SP
  TICK: 2087 PC:  37 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3940 RG_ALU:   0 SP: 3941 ZF: 0 |	pop   if
  MEM[ALU] -> ALU_RG
  TICK: 2087 PC:  37 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3940 RG_ALU:   0 SP: 3941 ZF: 0 |	pop   if
  ALU_RES = ALU_RG
  TICK: 2088 PC:  37 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3940 RG_ALU:   0 SP: 3941 ZF: 1 |	pop   if
  ALU_RES -> ACC
  TICK: 2089 PC:  37 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3940 RG_ALU:   0 SP: 3941 ZF: 1 |	pop   if
  SP -> ALU_LG
  TICK: 2090 PC:  38 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3941 RG_ALU:   0 SP: 3941 ZF: 1 |	push   if
  ALU_RES = SP - 1
  TICK: 2091 PC:  38 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3941 RG_ALU:   0 SP: 3941 ZF: 0 |	push   if
  ALU_RES -> SP
  TICK: 2092 PC:  38 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3941 RG_ALU:   0 SP: 3940 ZF: 0 |	push   if
  WRITE ACC -> MEM[ALU]
  TICK: 2092 PC:  38 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3941 RG_ALU:   0 SP: 3940 ZF: 0 |	push   if
  ADDR -> ALU_RG
  TICK: 2093 PC:  39 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3941 RG_ALU:   6 SP: 3940 ZF: 0 |	load   var
  ALU_RES = ALU_RG
  TICK: 2094 PC:  39 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3941 RG_ALU:   6 SP: 3940 ZF: 0 |	load   var
  READ MEM[ALU]
  TICK: 2095 PC:  39 ADDR:   0 MEM_OUT: 377 ACC: 0 LG_ALU: 3941 RG_ALU:   6 SP: 3940 ZF: 0 |	load   var
  MEM[ALU] -> ALU_RG
  TICK: 2096 PC:  39 ADDR:   0 MEM_OUT: 377 ACC: 0 LG_ALU: 3941 RG_ALU: 377 SP: 3940 ZF: 0 |	load   var
  ALU_RES = ALU_RG
  TICK: 2097 PC:  39 ADDR:   0 MEM_OUT: 377 ACC: 0 LG_ALU: 3941 RG_ALU: 377 SP: 3940 ZF: 0 |	load   var
  ALU_RES -> ACC
  TICK: 2098 PC:  39 ADDR:   0 MEM_OUT: 377 ACC: 377 LG_ALU: 3941 RG_ALU: 377 SP: 3940 ZF: 0 |	load   var
  ADDR -> ALU_RG
  TICK: 2099 PC:  40 ADDR:   0 MEM_OUT: 377 ACC: 377 LG_ALU: 3941 RG_ALU:   8 SP: 3940 ZF: 0 |	store   var
  ALU_RES = ALU_RG
  TICK: 2100 PC:  40 ADDR:   0 MEM_OUT: 377 ACC: 377 LG_ALU: 3941 RG_ALU:   8 SP: 3940 ZF: 0 |	store   var
  WRITE ACC -> MEM[ALU]
  TICK: 2101 PC:  40 ADDR:   0 MEM_OUT: 377 ACC: 377 LG_ALU: 3941 RG_ALU:   8 SP: 3940 ZF: 0 |	store   var
  NUM -> ALU_RG
  TICK: 2102 PC:  41 ADDR:   0 MEM_OUT: 377 ACC: 377 LG_ALU: 3941 RG_ALU:   1 SP: 3940 ZF: 0 |	load   var
  ALU_RES = ALU_RG
  TICK: 2103 PC:  41 ADDR:   0 MEM_OUT: 377 ACC: 377 LG_ALU: 3941 RG_ALU:   1 SP: 3940 ZF: 0 |	load   var
  ALU_RES -> ACC
  TICK: 2104 PC:  41 ADDR:   0 MEM_OUT: 377 ACC: 1 LG_ALU: 3941 RG_ALU:   1 SP: 3940 ZF: 0 |	load   var
  SP -> ALU_LG
  TICK: 2105 PC:  42 ADDR:   0 MEM_OUT: 377 ACC: 1 LG_ALU: 3940 RG_ALU:   1 SP: 3940 ZF: 0 |	push   var
  ALU_RES = SP - 1
  TICK: 2106 PC:  42 ADDR:   0 MEM_OUT: 377 ACC: 1 LG_ALU: 3940 RG_ALU:   1 SP: 3940 ZF: 0 |	push   var
  ALU_RES -> SP
  TICK: 2107 PC:  42 ADDR:   0 MEM_OUT: 377 ACC: 1 LG_ALU: 3940 RG_ALU:   1 SP: 3939 ZF: 0 |	push   var
  WRITE ACC -> MEM[ALU]
  TICK: 2107 PC:  42 ADDR:   0 MEM_OUT: 377 ACC: 1 LG_ALU: 3940 RG_ALU:   1 SP: 3939 ZF: 0 |	push   var
  ADDR -> ALU_RG
  TICK: 2108 PC:  43 ADDR:   0 MEM_OUT: 377 ACC: 1 LG_ALU: 3940 RG_ALU:   5 SP: 3939 ZF: 0 |	load   +
  ALU_RES = ALU_RG
  TICK: 2109 PC:  43 ADDR:   0 MEM_OUT: 377 ACC: 1 LG_ALU: 3940 RG_ALU:   5 SP: 3939 ZF: 0 |	load   +
  READ MEM[ALU]
  TICK: 2110 PC:  43 ADDR:   0 MEM_OUT: 233 ACC: 1 LG_ALU: 3940 RG_ALU:   5 SP: 3939 ZF: 0 |	load   +
  MEM[ALU] -> ALU_RG
  TICK: 2111 PC:  43 ADDR:   0 MEM_OUT: 233 ACC: 1 LG_ALU: 3940 RG_ALU: 233 SP: 3939 ZF: 0 |	load   +
  ALU_RES = ALU_RG
  TICK: 2112 PC:  43 ADDR:   0 MEM_OUT: 233 ACC: 1 LG_ALU: 3940 RG_ALU: 233 SP: 3939 ZF: 0 |	load   +
  ALU_RES -> ACC
  TICK: 2113 PC:  43 ADDR:   0 MEM_OUT: 233 ACC: 233 LG_ALU: 3940 RG_ALU: 233 SP: 3939 ZF: 0 |	load   +
  ADDR -> ALU_RG
  TICK: 2114 PC:  44 ADDR:   0 MEM_OUT: 233 ACC: 233 LG_ALU: 3940 RG_ALU:   6 SP: 3939 ZF: 0 |	add   +
  ALU_RES = ALU_RG
  TICK: 2115 PC:  44 ADDR:   0 MEM_OUT: 233 ACC: 233 LG_ALU: 3940 RG_ALU:   6 SP: 3939 ZF: 0 |	add   +
  READ MEM[ALU]
  TICK: 2116 PC:  44 ADDR:   0 MEM_OUT: 377 ACC: 233 LG_ALU: 3940 RG_ALU:   6 SP: 3939 ZF: 0 |	add   +
  MEM[ALU] -> ALU_RG
  TICK: 2117 PC:  44 ADDR:   0 MEM_OUT: 377 ACC: 233 LG_ALU: 3940 RG_ALU: 377 SP: 3939 ZF: 0 |	add   +
  ACC -> ALU_LG
  TICK: 2117 PC:  44 ADDR:   0 MEM_OUT: 377 ACC: 233 LG_ALU: 233 RG_ALU: 377 SP: 3939 ZF: 0 |	add   +
  ALU_RES = ALU_LG + ALU_RG
  TICK: 2118 PC:  44 ADDR:   0 MEM_OUT: 377 ACC: 233 LG_ALU: 233 RG_ALU: 377 SP: 3939 ZF: 0 |	add   +
  ALU_RES -> ACC
  TICK: 2119 PC:  44 ADDR:   0 MEM_OUT: 377 ACC: 610 LG_ALU: 233 RG_ALU: 377 SP: 3939 ZF: 0 |	add   +
  SP -> ALU_LG
  TICK: 2120 PC:  45 ADDR:   0 MEM_OUT: 377 ACC: 610 LG_ALU: 3939 RG_ALU: 377 SP: 3939 ZF: 0 |	push   +
  ALU_RES = SP - 1
  TICK: 2121 PC:  45 ADDR:   0 MEM_OUT: 377 ACC: 610 LG_ALU: 3939 RG_ALU: 377 SP: 3939 ZF: 0 |	push   +
  ALU_RES -> SP
  TICK: 2122 PC:  45 ADDR:   0 MEM_OUT: 377 ACC: 610 LG_ALU: 3939 RG_ALU: 377 SP: 3938 ZF: 0 |	push   +
  WRITE ACC -> MEM[ALU]
  TICK: 2122 PC:  45 ADDR:   0 MEM_OUT: 377 ACC: 610 LG_ALU: 3939 RG_ALU: 377 SP: 3938 ZF: 0 |	push   +
  SP -> ALU_LG
  TICK: 2123 PC:  46 ADDR:   0 MEM_OUT: 377 ACC: 610 LG_ALU: 3938 RG_ALU: 377 SP: 3938 ZF: 0 |	pop   var
  ALU_RES = ALU_LG
  TICK: 2124 PC:  46 ADDR:   0 MEM_OUT: 377 ACC: 610 LG_ALU: 3938 RG_ALU: 377 SP: 3938 ZF: 0 |	pop   var
  READ MEM[ALU]
  TICK: 2125 PC:  46 ADDR:   0 MEM_OUT: 610 ACC: 610 LG_ALU: 3938 RG_ALU: 377 SP: 3938 ZF: 0 |	pop   var
  ALU_RES = SP + 1
  TICK: 2126 PC:  46 ADDR:   0 MEM_OUT: 610 ACC: 610 LG_ALU: 3938 RG_ALU: 377 SP: 3938 ZF: 0 |	pop   var
  ALU_RES -> SP
  TICK: 2127 PC:  46 ADDR:   0 MEM_OUT: 610 ACC: 610 LG_ALU: 3938 RG_ALU: 377 SP: 3939 ZF: 0 |	pop   var
  MEM[ALU] -> ALU_RG
  TICK: 2127 PC:  46 ADDR:   0 MEM_OUT: 610 ACC: 610 LG_ALU: 3938 RG_ALU: 610 SP: 3939 ZF: 0 |	pop   var
  ALU_RES = ALU_RG
  TICK: 2128 PC:  46 ADDR:   0 MEM_OUT: 610 ACC: 610 LG_ALU: 3938 RG_ALU: 610 SP: 3939 ZF: 0 |	pop   var
  ALU_RES -> ACC
  TICK: 2129 PC:  46 ADDR:   0 MEM_OUT: 610 ACC: 610 LG_ALU: 3938 RG_ALU: 610 SP: 3939 ZF: 0 |	pop   var
  ADDR -> ALU_RG
  TICK: 2130 PC:  47 ADDR:   0 MEM_OUT: 610 ACC: 610 LG_ALU: 3938 RG_ALU:   6 SP: 3939 ZF: 0 |	store   var
  ALU_RES = ALU_RG
  TICK: 2131 PC:  47 ADDR:   0 MEM_OUT: 610 ACC: 610 LG_ALU: 3938 RG_ALU:   6 SP: 3939 ZF: 0 |	store   var
  WRITE ACC -> MEM[ALU]
  TICK: 2132 PC:  47 ADDR:   0 MEM_OUT: 610 ACC: 610 LG_ALU: 3938 RG_ALU:   6 SP: 3939 ZF: 0 |	store   var
  NUM -> ALU_RG
  TICK: 2133 PC:  48 ADDR:   0 MEM_OUT: 610 ACC: 610 LG_ALU: 3938 RG_ALU:   1 SP: 3939 ZF: 0 |	load   var
  ALU_RES = ALU_RG
  TICK: 2134 PC:  48 ADDR:   0 MEM_OUT: 610 ACC: 610 LG_ALU: 3938 RG_ALU:   1 SP: 3939 ZF: 0 |	load   var
  ALU_RES -> ACC
  TICK: 2135 PC:  48 ADDR:   0 MEM_OUT: 610 ACC: 1 LG_ALU: 3938 RG_ALU:   1 SP: 3939 ZF: 0 |	load   var
  SP -> ALU_LG
  TICK: 2136 PC:  49 ADDR:   0 MEM_OUT: 610 ACC: 1 LG_ALU: 3939 RG_ALU:   1 SP: 3939 ZF: 0 |	push   var
  ALU_RES = SP - 1
  TICK: 2137 PC:  49 ADDR:   0 MEM_OUT: 610 ACC: 1 LG_ALU: 3939 RG_ALU:   1 SP: 3939 ZF: 0 |	push   var
  ALU_RES -> SP
  TICK: 2138 PC:  49 ADDR:   0 MEM_OUT: 610 ACC: 1 LG_ALU: 3939 RG_ALU:   1 SP: 3938 ZF: 0 |	push   var
  WRITE ACC -> MEM[ALU]
  TICK: 2138 PC:  49 ADDR:   0 MEM_OUT: 610 ACC: 1 LG_ALU: 3939 RG_ALU:   1 SP: 3938 ZF: 0 |	push   var
  ADDR -> ALU_RG
  TICK: 2139 PC:  50 ADDR:   0 MEM_OUT: 610 ACC: 1 LG_ALU: 3939 RG_ALU:   8 SP: 3938 ZF: 0 |	load   var
  ALU_RES = ALU_RG
  TICK: 2140 PC:  50 ADDR:   0 MEM_OUT: 610 ACC: 1 LG_ALU: 3939 RG_ALU:   8 SP: 3938 ZF: 0 |	load   var
  READ MEM[ALU]
  TICK: 2141 PC:  50 ADDR:   0 MEM_OUT: 377 ACC: 1 LG_ALU: 3939 RG_ALU:   8 SP: 3938 ZF: 0 |	load   var
  MEM[ALU] -> ALU_RG
  TICK: 2142 PC:  50 ADDR:   0 MEM_OUT: 377 ACC: 1 LG_ALU: 3939 RG_ALU: 377 SP: 3938 ZF: 0 |	load   var
  ALU_RES = ALU_RG
  TICK: 2143 PC:  50 ADDR:   0 MEM_OUT: 377 ACC: 1 LG_ALU: 3939 RG_ALU: 377 SP: 3938 ZF: 0 |	load   var
  ALU_RES -> ACC
  TICK: 2144 PC:  50 ADDR:   0 MEM_OUT: 377 ACC: 377 LG_ALU: 3939 RG_ALU: 377 SP: 3938 ZF: 0 |	load   var
  ADDR -> ALU_RG
  TICK: 2145 PC:  51 ADDR:   0 MEM_OUT: 377 ACC: 377 LG_ALU: 3939 RG_ALU:   5 SP: 3938 ZF: 0 |	store   var
  ALU_RES = ALU_RG
  TICK: 2146 PC:  51 ADDR:   0 MEM_OUT: 377 ACC: 377 LG_ALU: 3939 RG_ALU:   5 SP: 3938 ZF: 0 |	store   var
  WRITE ACC -> MEM[ALU]
  TICK: 2147 PC:  51 ADDR:   0 MEM_OUT: 377 ACC: 377 LG_ALU: 3939 RG_ALU:   5 SP: 3938 ZF: 0 |	store   var
  NUM -> ALU_RG
  TICK: 2148 PC:  52 ADDR:   0 MEM_OUT: 377 ACC: 377 LG_ALU: 3939 RG_ALU:   1 SP: 3938 ZF: 0 |	load   var
  ALU_RES = ALU_RG
  TICK: 2149 PC:  52 ADDR:   0 MEM_OUT: 377 ACC: 377 LG_ALU: 3939 RG_ALU:   1 SP: 3938 ZF: 0 |	load   var
  ALU_RES -> ACC
  TICK: 2150 PC:  52 ADDR:   0 MEM_OUT: 377 ACC: 1 LG_ALU: 3939 RG_ALU:   1 SP: 3938 ZF: 0 |	load   var
  SP -> ALU_LG
  TICK: 2151 PC:  53 ADDR:   0 MEM_OUT: 377 ACC: 1 LG_ALU: 3938 RG_ALU:   1 SP: 3938 ZF: 0 |	push   var
  ALU_RES = SP - 1
  TICK: 2152 PC:  53 ADDR:   0 MEM_OUT: 377 ACC: 1 LG_ALU: 3938 RG_ALU:   1 SP: 3938 ZF: 0 |	push   var
  ALU_RES -> SP
  TICK: 2153 PC:  53 ADDR:   0 MEM_OUT: 377 ACC: 1 LG_ALU: 3938 RG_ALU:   1 SP: 3937 ZF: 0 |	push   var
  WRITE ACC -> MEM[ALU]
  TICK: 2153 PC:  53 ADDR:   0 MEM_OUT: 377 ACC: 1 LG_ALU: 3938 RG_ALU:   1 SP: 3937 ZF: 0 |	push   var
  ADDR -> ALU_RG
  TICK: 2154 PC:  54 ADDR:   0 MEM_OUT: 377 ACC: 1 LG_ALU: 3938 RG_ALU:   6 SP: 3937 ZF: 0 |	load   <
  ALU_RES = ALU_RG
  TICK: 2155 PC:  54 ADDR:   0 MEM_OUT: 377 ACC: 1 LG_ALU: 3938 RG_ALU:   6 SP: 3937 ZF: 0 |	load   <
  READ MEM[ALU]
  TICK: 2156 PC:  54 ADDR:   0 MEM_OUT: 610 ACC: 1 LG_ALU: 3938 RG_ALU:   6 SP: 3937 ZF: 0 |	load   <
  MEM[ALU] -> ALU_RG
  TICK: 2157 PC:  54 ADDR:   0 MEM_OUT: 610 ACC: 1 LG_ALU: 3938 RG_ALU: 610 SP: 3937 ZF: 0 |	load   <
  ALU_RES = ALU_RG
  TICK: 2158 PC:  54 ADDR:   0 MEM_OUT: 610 ACC: 1 LG_ALU: 3938 RG_ALU: 610 SP: 3937 ZF: 0 |	load   <
  ALU_RES -> ACC
  TICK: 2159 PC:  54 ADDR:   0 MEM_OUT: 610 ACC: 610 LG_ALU: 3938 RG_ALU: 610 SP: 3937 ZF: 0 |	load   <
  ADDR -> ALU_RG
  TICK: 2160 PC:  55 ADDR:   0 MEM_OUT: 610 ACC: 610 LG_ALU: 3938 RG_ALU:   7 SP: 3937 ZF: 0 |	sub   <
  ALU_RES = ALU_RG
  TICK: 2161 PC:  55 ADDR:   0 MEM_OUT: 610 ACC: 610 LG_ALU: 3938 RG_ALU:   7 SP: 3937 ZF: 0 |	sub   <
  READ MEM[ALU]
  TICK: 2162 PC:  55 ADDR:   0 MEM_OUT: 400000 ACC: 610 LG_ALU: 3938 RG_ALU:   7 SP: 3937 ZF: 0 |	sub   <
  MEM[ALU] -> ALU_RG
  TICK: 2163 PC:  55 ADDR:   0 MEM_OUT: 400000 ACC: 610 LG_ALU: 3938 RG_ALU: 400000 SP: 3937 ZF: 0 |	sub   <
  ACC -> ALU_LG
  TICK: 2163 PC:  55 ADDR:   0 MEM_OUT: 400000 ACC: 610 LG_ALU: 610 RG_ALU: 400000 SP: 3937 ZF: 0 |	sub   <
  ALU_RES = ALU_LG + ALU_RG
  TICK: 2164 PC:  55 ADDR:   0 MEM_OUT: 400000 ACC: 610 LG_ALU: 610 RG_ALU: 400000 SP: 3937 ZF: 0 |	sub   <
  ALU_RES -> ACC
  TICK: 2165 PC:  55 ADDR:   0 MEM_OUT: 400000 ACC: -399390 LG_ALU: 610 RG_ALU: 400000 SP: 3937 ZF: 0 |	sub   <
  PC + 1 -> PC
  NUM -> ALU_RG
  TICK: 2166 PC:  57 ADDR:   0 MEM_OUT: 400000 ACC: -399390 LG_ALU: 610 RG_ALU:   1 SP: 3937 ZF: 0 |	load   <
  ALU_RES = ALU_RG
  TICK: 2167 PC:  57 ADDR:   0 MEM_OUT: 400000 ACC: -399390 LG_ALU: 610 RG_ALU:   1 SP: 3937 ZF: 0 |	load   <
  ALU_RES -> ACC
  TICK: 2168 PC:  57 ADDR:   0 MEM_OUT: 400000 ACC: 1 LG_ALU: 610 RG_ALU:   1 SP: 3937 ZF: 0 |	load   <
  ADDR -> PC
  SP -> ALU_LG
  TICK: 2170 PC:  60 ADDR:   0 MEM_OUT: 400000 ACC: 1 LG_ALU: 3937 RG_ALU:   1 SP: 3937 ZF: 0 |	push   <
  ALU_RES = SP - 1
  TICK: 2171 PC:  60 ADDR:   0 MEM_OUT: 400000 ACC: 1 LG_ALU: 3937 RG_ALU:   1 SP: 3937 ZF: 0 |	push   <
  ALU_RES -> SP
  TICK: 2172 PC:  60 ADDR:   0 MEM_OUT: 400000 ACC: 1 LG_ALU: 3937 RG_ALU:   1 SP: 3936 ZF: 0 |	push   <
  WRITE ACC -> MEM[ALU]
  TICK: 2172 PC:  60 ADDR:   0 MEM_OUT: 400000 ACC: 1 LG_ALU: 3937 RG_ALU:   1 SP: 3936 ZF: 0 |	push   <
  SP -> ALU_LG
  TICK: 2173 PC:  61 ADDR:   0 MEM_OUT: 400000 ACC: 1 LG_ALU: 3936 RG_ALU:   1 SP: 3936 ZF: 0 |	pop
  ALU_RES = ALU_LG
  TICK: 2174 PC:  61 ADDR:   0 MEM_OUT: 400000 ACC: 1 LG_ALU: 3936 RG_ALU:   1 SP: 3936 ZF: 0 |	pop
  READ MEM[ALU]
  TICK: 2175 PC:  61 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3936 RG_ALU:   1 SP: 3936 ZF: 0 |	pop
  ALU_RES = SP + 1
  TICK: 2176 PC:  61 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3936 RG_ALU:   1 SP: 3936 ZF: 0 |	pop
  ALU_RES -> SP
  TICK: 2177 PC:  61 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3936 RG_ALU:   1 SP: 3937 ZF: 0 |	pop
  MEM[ALU] -> ALU_RG
  TICK: 2177 PC:  61 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3936 RG_ALU:   1 SP: 3937 ZF: 0 |	pop
  ALU_RES = ALU_RG
  TICK: 2178 PC:  61 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3936 RG_ALU:   1 SP: 3937 ZF: 0 |	pop
  ALU_RES -> ACC
  TICK: 2179 PC:  61 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3936 RG_ALU:   1 SP: 3937 ZF: 0 |	pop
  ADDR -> PC
  ADDR -> PC
  ADDR -> ALU_RG
  TICK: 2182 PC:  24 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3936 RG_ALU:   6 SP: 3937 ZF: 0 |	load
  ALU_RES = ALU_RG
  TICK: 2183 PC:  24 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3936 RG_ALU:   6 SP: 3937 ZF: 0 |	load
  READ MEM[ALU]
  TICK: 2184 PC:  24 ADDR:   0 MEM_OUT: 610 ACC: 1 LG_ALU: 3936 RG_ALU:   6 SP: 3937 ZF: 0 |	load
  MEM[ALU] -> ALU_RG
  TICK: 2185 PC:  24 ADDR:   0 MEM_OUT: 610 ACC: 1 LG_ALU: 3936 RG_ALU: 610 SP: 3937 ZF: 0 |	load
  ALU_RES = ALU_RG
  TICK: 2186 PC:  24 ADDR:   0 MEM_OUT: 610 ACC: 1 LG_ALU: 3936 RG_ALU: 610 SP: 3937 ZF: 0 |	load
  ALU_RES -> ACC
  TICK: 2187 PC:  24 ADDR:   0 MEM_OUT: 610 ACC: 610 LG_ALU: 3936 RG_ALU: 610 SP: 3937 ZF: 0 |	load
  NUM -> ALU_RG
  TICK: 2188 PC:  25 ADDR:   0 MEM_OUT: 610 ACC: 610 LG_ALU: 3936 RG_ALU:   2 SP: 3937 ZF: 0 |	mod
  ACC -> ALU_LG
  TICK: 2188 PC:  25 ADDR:   0 MEM_OUT: 610 ACC: 610 LG_ALU: 610 RG_ALU:   2 SP: 3937 ZF: 0 |	mod
  ALU_RES = ALU_LG % ALU_RG
  TICK: 2189 PC:  25 ADDR:   0 MEM_OUT: 610 ACC: 610 LG_ALU: 610 RG_ALU:   2 SP: 3937 ZF: 1 |	mod
  ALU_RES -> ACC
  TICK: 2190 PC:  25 ADDR:   0 MEM_OUT: 610 ACC: 0 LG_ALU: 610 RG_ALU:   2 SP: 3937 ZF: 1 |	mod
  SP -> ALU_LG
  TICK: 2191 PC:  26 ADDR:   0 MEM_OUT: 610 ACC: 0 LG_ALU: 3937 RG_ALU:   2 SP: 3937 ZF: 1 |	push
  ALU_RES = SP - 1
  TICK: 2192 PC:  26 ADDR:   0 MEM_OUT: 610 ACC: 0 LG_ALU: 3937 RG_ALU:   2 SP: 3937 ZF: 0 |	push
  ALU_RES -> SP
  TICK: 2193 PC:  26 ADDR:   0 MEM_OUT: 610 ACC: 0 LG_ALU: 3937 RG_ALU:   2 SP: 3936 ZF: 0 |	push
  WRITE ACC -> MEM[ALU]
  TICK: 2193 PC:  26 ADDR:   0 MEM_OUT: 610 ACC: 0 LG_ALU: 3937 RG_ALU:   2 SP: 3936 ZF: 0 |	push
  NUM -> ALU_RG
  TICK: 2194 PC:  27 ADDR:   0 MEM_OUT: 610 ACC: 0 LG_ALU: 3937 RG_ALU:   0 SP: 3936 ZF: 0 |	load   =
  ALU_RES = ALU_RG
  TICK: 2195 PC:  27 ADDR:   0 MEM_OUT: 610 ACC: 0 LG_ALU: 3937 RG_ALU:   0 SP: 3936 ZF: 1 |	load   =
  ALU_RES -> ACC
  TICK: 2196 PC:  27 ADDR:   0 MEM_OUT: 610 ACC: 0 LG_ALU: 3937 RG_ALU:   0 SP: 3936 ZF: 1 |	load   =
  SP -> ALU_LG
  TICK: 2197 PC:  28 ADDR:   0 MEM_OUT: 610 ACC: 0 LG_ALU: 3936 RG_ALU:   0 SP: 3936 ZF: 1 |	sub   =
  ALU_RES = ALU_LG
  TICK: 2198 PC:  28 ADDR:   0 MEM_OUT: 610 ACC: 0 LG_ALU: 3936 RG_ALU:   0 SP: 3936 ZF: 0 |	sub   =
  READ MEM[ALU]
  TICK: 2199 PC:  28 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3936 RG_ALU:   0 SP: 3936 ZF: 0 |	sub   =
  MEM[ALU] -> ALU_RG
  TICK: 2200 PC:  28 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3936 RG_ALU:   0 SP: 3936 ZF: 0 |	sub   =
  ALU_RES = SP + 1
  TICK: 2201 PC:  28 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3936 RG_ALU:   0 SP: 3936 ZF: 0 |	sub   =
  ALU_RES -> SP
  TICK: 2202 PC:  28 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3936 RG_ALU:   0 SP: 3937 ZF: 0 |	sub   =
  ACC -> ALU_LG
  TICK: 2202 PC:  28 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU:   0 RG_ALU:   0 SP: 3937 ZF: 0 |	sub   =
  ALU_RES = ALU_LG + ALU_RG
  TICK: 2203 PC:  28 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU:   0 RG_ALU:   0 SP: 3937 ZF: 1 |	sub   =
  ALU_RES -> ACC
  TICK: 2204 PC:  28 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU:   0 RG_ALU:   0 SP: 3937 ZF: 1 |	sub   =
  PC + 1 -> PC
  NUM -> ALU_RG
  TICK: 2205 PC:  30 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU:   0 RG_ALU:   1 SP: 3937 ZF: 1 |	load   =
  ALU_RES = ALU_RG
  TICK: 2206 PC:  30 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU:   0 RG_ALU:   1 SP: 3937 ZF: 0 |	load   =
  ALU_RES -> ACC
  TICK: 2207 PC:  30 ADDR:   0 MEM_OUT: 0 ACC: 1 LG_ALU:   0 RG_ALU:   1 SP: 3937 ZF: 0 |	load   =
  ADDR -> PC
  SP -> ALU_LG
  TICK: 2209 PC:  33 ADDR:   0 MEM_OUT: 0 ACC: 1 LG_ALU: 3937 RG_ALU:   1 SP: 3937 ZF: 0 |	push   =
  ALU_RES = SP - 1
  TICK: 2210 PC:  33 ADDR:   0 MEM_OUT: 0 ACC: 1 LG_ALU: 3937 RG_ALU:   1 SP: 3937 ZF: 0 |	push   =
  ALU_RES -> SP
  TICK: 2211 PC:  33 ADDR:   0 MEM_OUT: 0 ACC: 1 LG_ALU: 3937 RG_ALU:   1 SP: 3936 ZF: 0 |	push   =
  WRITE ACC -> MEM[ALU]
  TICK: 2211 PC:  33 ADDR:   0 MEM_OUT: 0 ACC: 1 LG_ALU: 3937 RG_ALU:   1 SP: 3936 ZF: 0 |	push   =
  SP -> ALU_LG
  TICK: 2212 PC:  34 ADDR:   0 MEM_OUT: 0 ACC: 1 LG_ALU: 3936 RG_ALU:   1 SP: 3936 ZF: 0 |	pop   if
  ALU_RES = ALU_LG
  TICK: 2213 PC:  34 ADDR:   0 MEM_OUT: 0 ACC: 1 LG_ALU: 3936 RG_ALU:   1 SP: 3936 ZF: 0 |	pop   if
  READ MEM[ALU]
  TICK: 2214 PC:  34 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3936 RG_ALU:   1 SP: 3936 ZF: 0 |	pop   if
  ALU_RES = SP + 1
  TICK: 2215 PC:  34 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3936 RG_ALU:   1 SP: 3936 ZF: 0 |	pop   if
  ALU_RES -> SP
  TICK: 2216 PC:  34 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3936 RG_ALU:   1 SP: 3937 ZF: 0 |	pop   if
  MEM[ALU] -> ALU_RG
  TICK: 2216 PC:  34 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3936 RG_ALU:   1 SP: 3937 ZF: 0 |	pop   if
  ALU_RES = ALU_RG
  TICK: 2217 PC:  34 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3936 RG_ALU:   1 SP: 3937 ZF: 0 |	pop   if
  ALU_RES -> ACC
  TICK: 2218 PC:  34 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3936 RG_ALU:   1 SP: 3937 ZF: 0 |	pop   if
  ADDR -> PC
  ADDR -> ALU_RG
  TICK: 2220 PC:   7 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3936 RG_ALU:   6 SP: 3937 ZF: 0 |	load   print
  ALU_RES = ALU_RG
  TICK: 2221 PC:   7 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3936 RG_ALU:   6 SP: 3937 ZF: 0 |	load   print
  READ MEM[ALU]
  TICK: 2222 PC:   7 ADDR:   0 MEM_OUT: 610 ACC: 1 LG_ALU: 3936 RG_ALU:   6 SP: 3937 ZF: 0 |	load   print
  MEM[ALU] -> ALU_RG
  TICK: 2223 PC:   7 ADDR:   0 MEM_OUT: 610 ACC: 1 LG_ALU: 3936 RG_ALU: 610 SP: 3937 ZF: 0 |	load   print
  ALU_RES = ALU_RG
  TICK: 2224 PC:   7 ADDR:   0 MEM_OUT: 610 ACC: 1 LG_ALU: 3936 RG_ALU: 610 SP: 3937 ZF: 0 |	load   print
  ALU_RES -> ACC
  TICK: 2225 PC:   7 ADDR:   0 MEM_OUT: 610 ACC: 610 LG_ALU: 3936 RG_ALU: 610 SP: 3937 ZF: 0 |	load   print
  get IO module port
  TICK: 2226 PC:   8 ADDR:   0 MEM_OUT: 610 ACC: 610 LG_ALU: 3936 RG_ALU: 610 SP: 3937 ZF: 0 |	output   print
  ACC -> OUTPUT 
  TICK: 2227 PC:   8 ADDR:   0 MEM_OUT: 610 ACC: 610 LG_ALU: 3936 RG_ALU: 610 SP: 3937 ZF: 0 |	output   print
  NUM -> ALU_RG
  TICK: 2228 PC:   9 ADDR:   0 MEM_OUT: 610 ACC: 610 LG_ALU: 3936 RG_ALU:   1 SP: 3937 ZF: 0 |	load   print
  ALU_RES = ALU_RG
  TICK: 2229 PC:   9 ADDR:   0 MEM_OUT: 610 ACC: 610 LG_ALU: 3936 RG_ALU:   1 SP: 3937 ZF: 0 |	load   print
  ALU_RES -> ACC
  TICK: 2230 PC:   9 ADDR:   0 MEM_OUT: 610 ACC: 1 LG_ALU: 3936 RG_ALU:   1 SP: 3937 ZF: 0 |	load   print
  SP -> ALU_LG
  TICK: 2231 PC:  10 ADDR:   0 MEM_OUT: 610 ACC: 1 LG_ALU: 3937 RG_ALU:   1 SP: 3937 ZF: 0 |	push   print
  ALU_RES = SP - 1
  TICK: 2232 PC:  10 ADDR:   0 MEM_OUT: 610 ACC: 1 LG_ALU: 3937 RG_ALU:   1 SP: 3937 ZF: 0 |	push   print
  ALU_RES -> SP
  TICK: 2233 PC:  10 ADDR:   0 MEM_OUT: 610 ACC: 1 LG_ALU: 3937 RG_ALU:   1 SP: 3936 ZF: 0 |	push   print
  WRITE ACC -> MEM[ALU]
  TICK: 2233 PC:  10 ADDR:   0 MEM_OUT: 610 ACC: 1 LG_ALU: 3937 RG_ALU:   1 SP: 3936 ZF: 0 |	push   print
  NUM -> ALU_RG
  TICK: 2234 PC:  11 ADDR:   0 MEM_OUT: 610 ACC: 1 LG_ALU: 3937 RG_ALU:  95 SP: 3936 ZF: 0 |	load   print
  ALU_RES = ALU_RG
  TICK: 2235 PC:  11 ADDR:   0 MEM_OUT: 610 ACC: 1 LG_ALU: 3937 RG_ALU:  95 SP: 3936 ZF: 0 |	load   print
  ALU_RES -> ACC
  TICK: 2236 PC:  11 ADDR:   0 MEM_OUT: 610 ACC: 95 LG_ALU: 3937 RG_ALU:  95 SP: 3936 ZF: 0 |	load   print
  get IO module port
  TICK: 2237 PC:  12 ADDR:   0 MEM_OUT: 610 ACC: 95 LG_ALU: 3937 RG_ALU:  95 SP: 3936 ZF: 0 |	output   print
  ACC -> OUTPUT 
  TICK: 2238 PC:  12 ADDR:   0 MEM_OUT: 610 ACC: 95 LG_ALU: 3937 RG_ALU:  95 SP: 3936 ZF: 0 |	output   print
  NUM -> ALU_RG
  TICK: 2239 PC:  13 ADDR:   0 MEM_OUT: 610 ACC: 95 LG_ALU: 3937 RG_ALU:   0 SP: 3936 ZF: 0 |	load   print
  ALU_RES = ALU_RG
  TICK: 2240 PC:  13 ADDR:   0 MEM_OUT: 610 ACC: 95 LG_ALU: 3937 RG_ALU:   0 SP: 3936 ZF: 1 |	load   print
  ALU_RES -> ACC
  TICK: 2241 PC:  13 ADDR:   0 MEM_OUT: 610 ACC: 0 LG_ALU: 3937 RG_ALU:   0 SP: 3936 ZF: 1 |	load   print
  get IO module port
  TICK: 2242 PC:  14 ADDR:   0 MEM_OUT: 610 ACC: 0 LG_ALU: 3937 RG_ALU:   0 SP: 3936 ZF: 1 |	output   print
  ACC -> OUTPUT 
  TICK: 2243 PC:  14 ADDR:   0 MEM_OUT: 610 ACC: 0 LG_ALU: 3937 RG_ALU:   0 SP: 3936 ZF: 1 |	output   print
  NUM -> ALU_RG
  TICK: 2244 PC:  15 ADDR:   0 MEM_OUT: 610 ACC: 0 LG_ALU: 3937 RG_ALU:   0 SP: 3936 ZF: 1 |	load   print
  ALU_RES = ALU_RG
  TICK: 2245 PC:  15 ADDR:   0 MEM_OUT: 610 ACC: 0 LG_ALU: 3937 RG_ALU:   0 SP: 3936 ZF: 1 |	load   print
  ALU_RES -> ACC
  TICK: 2246 PC:  15 ADDR:   0 MEM_OUT: 610 ACC: 0 LG_ALU: 3937 RG_ALU:   0 SP: 3936 ZF: 1 |	load   print
  get IO module port
  TICK: 2247 PC:  16 ADDR:   0 MEM_OUT: 610 ACC: 0 LG_ALU: 3937 RG_ALU:   0 SP: 3936 ZF: 1 |	output   print
  ACC -> OUTPUT 
  TICK: 2248 PC:  16 ADDR:   0 MEM_OUT: 610 ACC: 0 LG_ALU: 3937 RG_ALU:   0 SP: 3936 ZF: 1 |	output   print
  NUM -> ALU_RG
  TICK: 2249 PC:  17 ADDR:   0 MEM_OUT: 610 ACC: 0 LG_ALU: 3937 RG_ALU:   1 SP: 3936 ZF: 1 |	load   print
  ALU_RES = ALU_RG
  TICK: 2250 PC:  17 ADDR:   0 MEM_OUT: 610 ACC: 0 LG_ALU: 3937 RG_ALU:   1 SP: 3936 ZF: 0 |	load   print
  ALU_RES -> ACC
  TICK: 2251 PC:  17 ADDR:   0 MEM_OUT: 610 ACC: 1 LG_ALU: 3937 RG_ALU:   1 SP: 3936 ZF: 0 |	load   print
  SP -> ALU_LG
  TICK: 2252 PC:  18 ADDR:   0 MEM_OUT: 610 ACC: 1 LG_ALU: 3936 RG_ALU:   1 SP: 3936 ZF: 0 |	push   print
  ALU_RES = SP - 1
  TICK: 2253 PC:  18 ADDR:   0 MEM_OUT: 610 ACC: 1 LG_ALU: 3936 RG_ALU:   1 SP: 3936 ZF: 0 |	push   print
  ALU_RES -> SP
  TICK: 2254 PC:  18 ADDR:   0 MEM_OUT: 610 ACC: 1 LG_ALU: 3936 RG_ALU:   1 SP: 3935 ZF: 0 |	push   print
  WRITE ACC -> MEM[ALU]
  TICK: 2254 PC:  18 ADDR:   0 MEM_OUT: 610 ACC: 1 LG_ALU: 3936 RG_ALU:   1 SP: 3935 ZF: 0 |	push   print
  ADDR -> PC
  SP -> ALU_LG
  TICK: 2256 PC:  37 ADDR:   0 MEM_OUT: 610 ACC: 1 LG_ALU: 3935 RG_ALU:   1 SP: 3935 ZF: 0 |	pop   if
  ALU_RES = ALU_LG
  TICK: 2257 PC:  37 ADDR:   0 MEM_OUT: 610 ACC: 1 LG_ALU: 3935 RG_ALU:   1 SP: 3935 ZF: 0 |	pop   if
  READ MEM[ALU]
  TICK: 2258 PC:  37 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3935 RG_ALU:   1 SP: 3935 ZF: 0 |	pop   if
  ALU_RES = SP + 1
  TICK: 2259 PC:  37 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3935 RG_ALU:   1 SP: 3935 ZF: 0 |	pop   if
  ALU_RES -> SP
  TICK: 2260 PC:  37 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3935 RG_ALU:   1 SP: 3936 ZF: 0 |	pop   if
  MEM[ALU] -> ALU_RG
  TICK: 2260 PC:  37 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3935 RG_ALU:   1 SP: 3936 ZF: 0 |	pop   if
  ALU_RES = ALU_RG
  TICK: 2261 PC:  37 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3935 RG_ALU:   1 SP: 3936 ZF: 0 |	pop   if
  ALU_RES -> ACC
  TICK: 2262 PC:  37 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3935 RG_ALU:   1 SP: 3936 ZF: 0 |	pop   if
  SP -> ALU_LG
  TICK: 2263 PC:  38 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3936 RG_ALU:   1 SP: 3936 ZF: 0 |	push   if
  ALU_RES = SP - 1
  TICK: 2264 PC:  38 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3936 RG_ALU:   1 SP: 3936 ZF: 0 |	push   if
  ALU_RES -> SP
  TICK: 2265 PC:  38 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3936 RG_ALU:   1 SP: 3935 ZF: 0 |	push   if
  WRITE ACC -> MEM[ALU]
  TICK: 2265 PC:  38 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3936 RG_ALU:   1 SP: 3935 ZF: 0 |	push   if
  ADDR -> ALU_RG
  TICK: 2266 PC:  39 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3936 RG_ALU:   6 SP: 3935 ZF: 0 |	load   var
  ALU_RES = ALU_RG
  TICK: 2267 PC:  39 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3936 RG_ALU:   6 SP: 3935 ZF: 0 |	load   var
  READ MEM[ALU]
  TICK: 2268 PC:  39 ADDR:   0 MEM_OUT: 610 ACC: 1 LG_ALU: 3936 RG_ALU:   6 SP: 3935 ZF: 0 |	load   var
  MEM[ALU] -> ALU_RG
  TICK: 2269 PC:  39 ADDR:   0 MEM_OUT: 610 ACC: 1 LG_ALU: 3936 RG_ALU: 610 SP: 3935 ZF: 0 |	load   var
  ALU_RES = ALU_RG
  TICK: 2270 PC:  39 ADDR:   0 MEM_OUT: 610 ACC: 1 LG_ALU: 3936 RG_ALU: 610 SP: 3935 ZF: 0 |	load   var
  ALU_RES -> ACC
  TICK: 2271 PC:  39 ADDR:   0 MEM_OUT: 610 ACC: 610 LG_ALU: 3936 RG_ALU: 610 SP: 3935 ZF: 0 |	load   var
  ADDR -> ALU_RG
  TICK: 2272 PC:  40 ADDR:   0 MEM_OUT: 610 ACC: 610 LG_ALU: 3936 RG_ALU:   8 SP: 3935 ZF: 0 |	store   var
  ALU_RES = ALU_RG
  TICK: 2273 PC:  40 ADDR:   0 MEM_OUT: 610 ACC: 610 LG_ALU: 3936 RG_ALU:   8 SP: 3935 ZF: 0 |	store   var
  WRITE ACC -> MEM[ALU]
  TICK: 2274 PC:  40 ADDR:   0 MEM_OUT: 610 ACC: 610 LG_ALU: 3936 RG_ALU:   8 SP: 3935 ZF: 0 |	store   var
  NUM -> ALU_RG
  TICK: 2275 PC:  41 ADDR:   0 MEM_OUT: 610 ACC: 610 LG_ALU: 3936 RG_ALU:   1 SP: 3935 ZF: 0 |	load   var
  ALU_RES = ALU_RG
  TICK: 2276 PC:  41 ADDR:   0 MEM_OUT: 610 ACC: 610 LG_ALU: 3936 RG_ALU:   1 SP: 3935 ZF: 0 |	load   var
  ALU_RES -> ACC
  TICK: 2277 PC:  41 ADDR:   0 MEM_OUT: 610 ACC: 1 LG_ALU: 3936 RG_ALU:   1 SP: 3935 ZF: 0 |	load   var
  SP -> ALU_LG
  TICK: 2278 PC:  42 ADDR:   0 MEM_OUT: 610 ACC: 1 LG_ALU: 3935 RG_ALU:   1 SP: 3935 ZF: 0 |	push   var
  ALU_RES = SP - 1
  TICK: 2279 PC:  42 ADDR:   0 MEM_OUT: 610 ACC: 1 LG_ALU: 3935 RG_ALU:   1 SP: 3935 ZF: 0 |	push   var
  ALU_RES -> SP
  TICK: 2280 PC:  42 ADDR:   0 MEM_OUT: 610 ACC: 1 LG_ALU: 3935 RG_ALU:   1 SP: 3934 ZF: 0 |	push   var
  WRITE ACC -> MEM[ALU]
  TICK: 2280 PC:  42 ADDR:   0 MEM_OUT: 610 ACC: 1 LG_ALU: 3935 RG_ALU:   1 SP: 3934 ZF: 0 |	push   var
  ADDR -> ALU_RG
  TICK: 2281 PC:  43 ADDR:   0 MEM_OUT: 610 ACC: 1 LG_ALU: 3935 RG_ALU:   5 SP: 3934 ZF: 0 |	load   +
  ALU_RES = ALU_RG
  TICK: 2282 PC:  43 ADDR:   0 MEM_OUT: 610 ACC: 1 LG_ALU: 3935 RG_ALU:   5 SP: 3934 ZF: 0 |	load   +
  READ MEM[ALU]
  TICK: 2283 PC:  43 ADDR:   0 MEM_OUT: 377 ACC: 1 LG_ALU: 3935 RG_ALU:   5 SP: 3934 ZF: 0 |	load   +
  MEM[ALU] -> ALU_RG
  TICK: 2284 PC:  43 ADDR:   0 MEM_OUT: 377 ACC: 1 LG_ALU: 3935 RG_ALU: 377 SP: 3934 ZF: 0 |	load   +
  ALU_RES = ALU_RG
  TICK: 2285 PC:  43 ADDR:   0 MEM_OUT: 377 ACC: 1 LG_ALU: 3935 RG_ALU: 377 SP: 3934 ZF: 0 |	load   +
  ALU_RES -> ACC
  TICK: 2286 PC:  43 ADDR:   0 MEM_OUT: 377 ACC: 377 LG_ALU: 3935 RG_ALU: 377 SP: 3934 ZF: 0 |	load   +
  ADDR -> ALU_RG
  TICK: 2287 PC:  44 ADDR:   0 MEM_OUT: 377 ACC: 377 LG_ALU: 3935 RG_ALU:   6 SP: 3934 ZF: 0 |	add   +
  ALU_RES = ALU_RG
  TICK: 2288 PC:  44 ADDR:   0 MEM_OUT: 377 ACC: 377 LG_ALU: 3935 RG_ALU:   6 SP: 3934 ZF: 0 |	add   +
  READ MEM[ALU]
  TICK: 2289 PC:  44 ADDR:   0 MEM_OUT: 610 ACC: 377 LG_ALU: 3935 RG_ALU:   6 SP: 3934 ZF: 0 |	add   +
  MEM[ALU] -> ALU_RG
  TICK: 2290 PC:  44 ADDR:   0 MEM_OUT: 610 ACC: 377 LG_ALU: 3935 RG_ALU: 610 SP: 3934 ZF: 0 |	add   +
  ACC -> ALU_LG
  TICK: 2290 PC:  44 ADDR:   0 MEM_OUT: 610 ACC: 377 LG_ALU: 377 RG_ALU: 610 SP: 3934 ZF: 0 |	add   +
  ALU_RES = ALU_LG + ALU_RG
  TICK: 2291 PC:  44 ADDR:   0 MEM_OUT: 610 ACC: 377 LG_ALU: 377 RG_ALU: 610 SP: 3934 ZF: 0 |	add   +
  ALU_RES -> ACC
  TICK: 2292 PC:  44 ADDR:   0 MEM_OUT: 610 ACC: 987 LG_ALU: 377 RG_ALU: 610 SP: 3934 ZF: 0 |	add   +
  SP -> ALU_LG
  TICK: 2293 PC:  45 ADDR:   0 MEM_OUT: 610 ACC: 987 LG_ALU: 3934 RG_ALU: 610 SP: 3934 ZF: 0 |	push   +
  ALU_RES = SP - 1
  TICK: 2294 PC:  45 ADDR:   0 MEM_OUT: 610 ACC: 987 LG_ALU: 3934 RG_ALU: 610 SP: 3934 ZF: 0 |	push   +
  ALU_RES -> SP
  TICK: 2295 PC:  45 ADDR:   0 MEM_OUT: 610 ACC: 987 LG_ALU: 3934 RG_ALU: 610 SP: 3933 ZF: 0 |	push   +
  WRITE ACC -> MEM[ALU]
  TICK: 2295 PC:  45 ADDR:   0 MEM_OUT: 610 ACC: 987 LG_ALU: 3934 RG_ALU: 610 SP: 3933 ZF: 0 |	push   +
  SP -> ALU_LG
  TICK: 2296 PC:  46 ADDR:   0 MEM_OUT: 610 ACC: 987 LG_ALU: 3933 RG_ALU: 610 SP: 3933 ZF: 0 |	pop   var
  ALU_RES = ALU_LG
  TICK: 2297 PC:  46 ADDR:   0 MEM_OUT: 610 ACC: 987 LG_ALU: 3933 RG_ALU: 610 SP: 3933 ZF: 0 |	pop   var
  READ MEM[ALU]
  TICK: 2298 PC:  46 ADDR:   0 MEM_OUT: 987 ACC: 987 LG_ALU: 3933 RG_ALU: 610 SP: 3933 ZF: 0 |	pop   var
  ALU_RES = SP + 1
  TICK: 2299 PC:  46 ADDR:   0 MEM_OUT: 987 ACC: 987 LG_ALU: 3933 RG_ALU: 610 SP: 3933 ZF: 0 |	pop   var
  ALU_RES -> SP
  TICK: 2300 PC:  46 ADDR:   0 MEM_OUT: 987 ACC: 987 LG_ALU: 3933 RG_ALU: 610 SP: 3934 ZF: 0 |	pop   var
  MEM[ALU] -> ALU_RG
  TICK: 2300 PC:  46 ADDR:   0 MEM_OUT: 987 ACC: 987 LG_ALU: 3933 RG_ALU: 987 SP: 3934 ZF: 0 |	pop   var
  ALU_RES = ALU_RG
  TICK: 2301 PC:  46 ADDR:   0 MEM_OUT: 987 ACC: 987 LG_ALU: 3933 RG_ALU: 987 SP: 3934 ZF: 0 |	pop   var
  ALU_RES -> ACC
  TICK: 2302 PC:  46 ADDR:   0 MEM_OUT: 987 ACC: 987 LG_ALU: 3933 RG_ALU: 987 SP: 3934 ZF: 0 |	pop   var
  ADDR -> ALU_RG
  TICK: 2303 PC:  47 ADDR:   0 MEM_OUT: 987 ACC: 987 LG_ALU: 3933 RG_ALU:   6 SP: 3934 ZF: 0 |	store   var
  ALU_RES = ALU_RG
  TICK: 2304 PC:  47 ADDR:   0 MEM_OUT: 987 ACC: 987 LG_ALU: 3933 RG_ALU:   6 SP: 3934 ZF: 0 |	store   var
  WRITE ACC -> MEM[ALU]
  TICK: 2305 PC:  47 ADDR:   0 MEM_OUT: 987 ACC: 987 LG_ALU: 3933 RG_ALU:   6 SP: 3934 ZF: 0 |	store   var
  NUM -> ALU_RG
  TICK: 2306 PC:  48 ADDR:   0 MEM_OUT: 987 ACC: 987 LG_ALU: 3933 RG_ALU:   1 SP: 3934 ZF: 0 |	load   var
  ALU_RES = ALU_RG
  TICK: 2307 PC:  48 ADDR:   0 MEM_OUT: 987 ACC: 987 LG_ALU: 3933 RG_ALU:   1 SP: 3934 ZF: 0 |	load   var
  ALU_RES -> ACC
  TICK: 2308 PC:  48 ADDR:   0 MEM_OUT: 987 ACC: 1 LG_ALU: 3933 RG_ALU:   1 SP: 3934 ZF: 0 |	load   var
  SP -> ALU_LG
  TICK: 2309 PC:  49 ADDR:   0 MEM_OUT: 987 ACC: 1 LG_ALU: 3934 RG_ALU:   1 SP: 3934 ZF: 0 |	push   var
  ALU_RES = SP - 1
  TICK: 2310 PC:  49 ADDR:   0 MEM_OUT: 987 ACC: 1 LG_ALU: 3934 RG_ALU:   1 SP: 3934 ZF: 0 |	push   var
  ALU_RES -> SP
  TICK: 2311 PC:  49 ADDR:   0 MEM_OUT: 987 ACC: 1 LG_ALU: 3934 RG_ALU:   1 SP: 3933 ZF: 0 |	push   var
  WRITE ACC -> MEM[ALU]
  TICK: 2311 PC:  49 ADDR:   0 MEM_OUT: 987 ACC: 1 LG_ALU: 3934 RG_ALU:   1 SP: 3933 ZF: 0 |	push   var
  ADDR -> ALU_RG
  TICK: 2312 PC:  50 ADDR:   0 MEM_OUT: 987 ACC: 1 LG_ALU: 3934 RG_ALU:   8 SP: 3933 ZF: 0 |	load   var
  ALU_RES = ALU_RG
  TICK: 2313 PC:  50 ADDR:   0 MEM_OUT: 987 ACC: 1 LG_ALU: 3934 RG_ALU:   8 SP: 3933 ZF: 0 |	load   var
  READ MEM[ALU]
  TICK: 2314 PC:  50 ADDR:   0 MEM_OUT: 610 ACC: 1 LG_ALU: 3934 RG_ALU:   8 SP: 3933 ZF: 0 |	load   var
  MEM[ALU] -> ALU_RG
  TICK: 2315 PC:  50 ADDR:   0 MEM_OUT: 610 ACC: 1 LG_ALU: 3934 RG_ALU: 610 SP: 3933 ZF: 0 |	load   var
  ALU_RES = ALU_RG
  TICK: 2316 PC:  50 ADDR:   0 MEM_OUT: 610 ACC: 1 LG_ALU: 3934 RG_ALU: 610 SP: 3933 ZF: 0 |	load   var
  ALU_RES -> ACC
  TICK: 2317 PC:  50 ADDR:   0 MEM_OUT: 610 ACC: 610 LG_ALU: 3934 RG_ALU: 610 SP: 3933 ZF: 0 |	load   var
  ADDR -> ALU_RG
  TICK: 2318 PC:  51 ADDR:   0 MEM_OUT: 610 ACC: 610 LG_ALU: 3934 RG_ALU:   5 SP: 3933 ZF: 0 |	store   var
  ALU_RES = ALU_RG
  TICK: 2319 PC:  51 ADDR:   0 MEM_OUT: 610 ACC: 610 LG_ALU: 3934 RG_ALU:   5 SP: 3933 ZF: 0 |	store   var
  WRITE ACC -> MEM[ALU]
  TICK: 2320 PC:  51 ADDR:   0 MEM_OUT: 610 ACC: 610 LG_ALU: 3934 RG_ALU:   5 SP: 3933 ZF: 0 |	store   var
  NUM -> ALU_RG
  TICK: 2321 PC:  52 ADDR:   0 MEM_OUT: 610 ACC: 610 LG_ALU: 3934 RG_ALU:   1 SP: 3933 ZF: 0 |	load   var
  ALU_RES = ALU_RG
  TICK: 2322 PC:  52 ADDR:   0 MEM_OUT: 610 ACC: 610 LG_ALU: 3934 RG_ALU:   1 SP: 3933 ZF: 0 |	load   var
  ALU_RES -> ACC
  TICK: 2323 PC:  52 ADDR:   0 MEM_OUT: 610 ACC: 1 LG_ALU: 3934 RG_ALU:   1 SP: 3933 ZF: 0 |	load   var
  SP -> ALU_LG
  TICK: 2324 PC:  53 ADDR:   0 MEM_OUT: 610 ACC: 1 LG_ALU: 3933 RG_ALU:   1 SP: 3933 ZF: 0 |	push   var
  ALU_RES = SP - 1
  TICK: 2325 PC:  53 ADDR:   0 MEM_OUT: 610 ACC: 1 LG_ALU: 3933 RG_ALU:   1 SP: 3933 ZF: 0 |	push   var
  ALU_RES -> SP
  TICK: 2326 PC:  53 ADDR:   0 MEM_OUT: 610 ACC: 1 LG_ALU: 3933 RG_ALU:   1 SP: 3932 ZF: 0 |	push   var
  WRITE ACC -> MEM[ALU]
  TICK: 2326 PC:  53 ADDR:   0 MEM_OUT: 610 ACC: 1 LG_ALU: 3933 RG_ALU:   1 SP: 3932 ZF: 0 |	push   var
  ADDR -> ALU_RG
  TICK: 2327 PC:  54 ADDR:   0 MEM_OUT: 610 ACC: 1 LG_ALU: 3933 RG_ALU:   6 SP: 3932 ZF: 0 |	load   <
  ALU_RES = ALU_RG
  TICK: 2328 PC:  54 ADDR:   0 MEM_OUT: 610 ACC: 1 LG_ALU: 3933 RG_ALU:   6 SP: 3932 ZF: 0 |	load   <
  READ MEM[ALU]
  TICK: 2329 PC:  54 ADDR:   0 MEM_OUT: 987 ACC: 1 LG_ALU: 3933 RG_ALU:   6 SP: 3932 ZF: 0 |	load   <
  MEM[ALU] -> ALU_RG
  TICK: 2330 PC:  54 ADDR:   0 MEM_OUT: 987 ACC: 1 LG_ALU: 3933 RG_ALU: 987 SP: 3932 ZF: 0 |	load   <
  ALU_RES = ALU_RG
  TICK: 2331 PC:  54 ADDR:   0 MEM_OUT: 987 ACC: 1 LG_ALU: 3933 RG_ALU: 987 SP: 3932 ZF: 0 |	load   <
  ALU_RES -> ACC
  TICK: 2332 PC:  54 ADDR:   0 MEM_OUT: 987 ACC: 987 LG_ALU: 3933 RG_ALU: 987 SP: 3932 ZF: 0 |	load   <
  ADDR -> ALU_RG
  TICK: 2333 PC:  55 ADDR:   0 MEM_OUT: 987 ACC: 987 LG_ALU: 3933 RG_ALU:   7 SP: 3932 ZF: 0 |	sub   <
  ALU_RES = ALU_RG
  TICK: 2334 PC:  55 ADDR:   0 MEM_OUT: 987 ACC: 987 LG_ALU: 3933 RG_ALU:   7 SP: 3932 ZF: 0 |	sub   <
  READ MEM[ALU]
  TICK: 2335 PC:  55 ADDR:   0 MEM_OUT: 400000 ACC: 987 LG_ALU: 3933 RG_ALU:   7 SP: 3932 ZF: 0 |	sub   <
  MEM[ALU] -> ALU_RG
  TICK: 2336 PC:  55 ADDR:   0 MEM_OUT: 400000 ACC: 987 LG_ALU: 3933 RG_ALU: 400000 SP: 3932 ZF: 0 |	sub   <
  ACC -> ALU_LG
  TICK: 2336 PC:  55 ADDR:   0 MEM_OUT: 400000 ACC: 987 LG_ALU: 987 RG_ALU: 400000 SP: 3932 ZF: 0 |	sub   <
  ALU_RES = ALU_LG + ALU_RG
  TICK: 2337 PC:  55 ADDR:   0 MEM_OUT: 400000 ACC: 987 LG_ALU: 987 RG_ALU: 400000 SP: 3932 ZF: 0 |	sub   <
  ALU_RES -> ACC
  TICK: 2338 PC:  55 ADDR:   0 MEM_OUT: 400000 ACC: -399013 LG_ALU: 987 RG_ALU: 400000 SP: 3932 ZF: 0 |	sub   <
  PC + 1 -> PC
  NUM -> ALU_RG
  TICK: 2339 PC:  57 ADDR:   0 MEM_OUT: 400000 ACC: -399013 LG_ALU: 987 RG_ALU:   1 SP: 3932 ZF: 0 |	load   <
  ALU_RES = ALU_RG
  TICK: 2340 PC:  57 ADDR:   0 MEM_OUT: 400000 ACC: -399013 LG_ALU: 987 RG_ALU:   1 SP: 3932 ZF: 0 |	load   <
  ALU_RES -> ACC
  TICK: 2341 PC:  57 ADDR:   0 MEM_OUT: 400000 ACC: 1 LG_ALU: 987 RG_ALU:   1 SP: 3932 ZF: 0 |	load   <
  ADDR -> PC
  SP -> ALU_LG
  TICK: 2343 PC:  60 ADDR:   0 MEM_OUT: 400000 ACC: 1 LG_ALU: 3932 RG_ALU:   1 SP: 3932 ZF: 0 |	push   <
  ALU_RES = SP - 1
  TICK: 2344 PC:  60 ADDR:   0 MEM_OUT: 400000 ACC: 1 LG_ALU: 3932 RG_ALU:   1 SP: 3932 ZF: 0 |	push   <
  ALU_RES -> SP
  TICK: 2345 PC:  60 ADDR:   0 MEM_OUT: 400000 ACC: 1 LG_ALU: 3932 RG_ALU:   1 SP: 3931 ZF: 0 |	push   <
  WRITE ACC -> MEM[ALU]
  TICK: 2345 PC:  60 ADDR:   0 MEM_OUT: 400000 ACC: 1 LG_ALU: 3932 RG_ALU:   1 SP: 3931 ZF: 0 |	push   <
  SP -> ALU_LG
  TICK: 2346 PC:  61 ADDR:   0 MEM_OUT: 400000 ACC: 1 LG_ALU: 3931 RG_ALU:   1 SP: 3931 ZF: 0 |	pop
  ALU_RES = ALU_LG
  TICK: 2347 PC:  61 ADDR:   0 MEM_OUT: 400000 ACC: 1 LG_ALU: 3931 RG_ALU:   1 SP: 3931 ZF: 0 |	pop
  READ MEM[ALU]
  TICK: 2348 PC:  61 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3931 RG_ALU:   1 SP: 3931 ZF: 0 |	pop
  ALU_RES = SP + 1
  TICK: 2349 PC:  61 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3931 RG_ALU:   1 SP: 3931 ZF: 0 |	pop
  ALU_RES -> SP
  TICK: 2350 PC:  61 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3931 RG_ALU:   1 SP: 3932 ZF: 0 |	pop
  MEM[ALU] -> ALU_RG
  TICK: 2350 PC:  61 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3931 RG_ALU:   1 SP: 3932 ZF: 0 |	pop
  ALU_RES = ALU_RG
  TICK: 2351 PC:  61 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3931 RG_ALU:   1 SP: 3932 ZF: 0 |	pop
  ALU_RES -> ACC
  TICK: 2352 PC:  61 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3931 RG_ALU:   1 SP: 3932 ZF: 0 |	pop
  ADDR -> PC
  ADDR -> PC
  ADDR -> ALU_RG
  TICK: 2355 PC:  24 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3931 RG_ALU:   6 SP: 3932 ZF: 0 |	load
  ALU_RES = ALU_RG
  TICK: 2356 PC:  24 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3931 RG_ALU:   6 SP: 3932 ZF: 0 |	load
  READ MEM[ALU]
  TICK: 2357 PC:  24 ADDR:   0 MEM_OUT: 987 ACC: 1 LG_ALU: 3931 RG_ALU:   6 SP: 3932 ZF: 0 |	load
  MEM[ALU] -> ALU_RG
  TICK: 2358 PC:  24 ADDR:   0 MEM_OUT: 987 ACC: 1 LG_ALU: 3931 RG_ALU: 987 SP: 3932 ZF: 0 |	load
  ALU_RES = ALU_RG
  TICK: 2359 PC:  24 ADDR:   0 MEM_OUT: 987 ACC: 1 LG_ALU: 3931 RG_ALU: 987 SP: 3932 ZF: 0 |	load
  ALU_RES -> ACC
  TICK: 2360 PC:  24 ADDR:   0 MEM_OUT: 987 ACC: 987 LG_ALU: 3931 RG_ALU: 987 SP: 3932 ZF: 0 |	load
  NUM -> ALU_RG
  TICK: 2361 PC:  25 ADDR:   0 MEM_OUT: 987 ACC: 987 LG_ALU: 3931 RG_ALU:   2 SP: 3932 ZF: 0 |	mod
  ACC -> ALU_LG
  TICK: 2361 PC:  25 ADDR:   0 MEM_OUT: 987 ACC: 987 LG_ALU: 987 RG_ALU:   2 SP: 3932 ZF: 0 |	mod
  ALU_RES = ALU_LG % ALU_RG
  TICK: 2362 PC:  25 ADDR:   0 MEM_OUT: 987 ACC: 987 LG_ALU: 987 RG_ALU:   2 SP: 3932 ZF: 0 |	mod
  ALU_RES -> ACC
  TICK: 2363 PC:  25 ADDR:   0 MEM_OUT: 987 ACC: 1 LG_ALU: 987 RG_ALU:   2 SP: 3932 ZF: 0 |	mod
  SP -> ALU_LG
  TICK: 2364 PC:  26 ADDR:   0 MEM_OUT: 987 ACC: 1 LG_ALU: 3932 RG_ALU:   2 SP: 3932 ZF: 0 |	push
  ALU_RES = SP - 1
  TICK: 2365 PC:  26 ADDR:   0 MEM_OUT: 987 ACC: 1 LG_ALU: 3932 RG_ALU:   2 SP: 3932 ZF: 0 |	push
  ALU_RES -> SP
  TICK: 2366 PC:  26 ADDR:   0 MEM_OUT: 987 ACC: 1 LG_ALU: 3932 RG_ALU:   2 SP: 3931 ZF: 0 |	push
  WRITE ACC -> MEM[ALU]
  TICK: 2366 PC:  26 ADDR:   0 MEM_OUT: 987 ACC: 1 LG_ALU: 3932 RG_ALU:   2 SP: 3931 ZF: 0 |	push
  NUM -> ALU_RG
  TICK: 2367 PC:  27 ADDR:   0 MEM_OUT: 987 ACC: 1 LG_ALU: 3932 RG_ALU:   0 SP: 3931 ZF: 0 |	load   =
  ALU_RES = ALU_RG
  TICK: 2368 PC:  27 ADDR:   0 MEM_OUT: 987 ACC: 1 LG_ALU: 3932 RG_ALU:   0 SP: 3931 ZF: 1 |	load   =
  ALU_RES -> ACC
  TICK: 2369 PC:  27 ADDR:   0 MEM_OUT: 987 ACC: 0 LG_ALU: 3932 RG_ALU:   0 SP: 3931 ZF: 1 |	load   =
  SP -> ALU_LG
  TICK: 2370 PC:  28 ADDR:   0 MEM_OUT: 987 ACC: 0 LG_ALU: 3931 RG_ALU:   0 SP: 3931 ZF: 1 |	sub   =
  ALU_RES = ALU_LG
  TICK: 2371 PC:  28 ADDR:   0 MEM_OUT: 987 ACC: 0 LG_ALU: 3931 RG_ALU:   0 SP: 3931 ZF: 0 |	sub   =
  READ MEM[ALU]
  TICK: 2372 PC:  28 ADDR:   0 MEM_OUT: 1 ACC: 0 LG_ALU: 3931 RG_ALU:   0 SP: 3931 ZF: 0 |	sub   =
  MEM[ALU] -> ALU_RG
  TICK: 2373 PC:  28 ADDR:   0 MEM_OUT: 1 ACC: 0 LG_ALU: 3931 RG_ALU:   1 SP: 3931 ZF: 0 |	sub   =
  ALU_RES = SP + 1
  TICK: 2374 PC:  28 ADDR:   0 MEM_OUT: 1 ACC: 0 LG_ALU: 3931 RG_ALU:   1 SP: 3931 ZF: 0 |	sub   =
  ALU_RES -> SP
  TICK: 2375 PC:  28 ADDR:   0 MEM_OUT: 1 ACC: 0 LG_ALU: 3931 RG_ALU:   1 SP: 3932 ZF: 0 |	sub   =
  ACC -> ALU_LG
  TICK: 2375 PC:  28 ADDR:   0 MEM_OUT: 1 ACC: 0 LG_ALU:   0 RG_ALU:   1 SP: 3932 ZF: 0 |	sub   =
  ALU_RES = ALU_LG + ALU_RG
  TICK: 2376 PC:  28 ADDR:   0 MEM_OUT: 1 ACC: 0 LG_ALU:   0 RG_ALU:   1 SP: 3932 ZF: 0 |	sub   =
  ALU_RES -> ACC
  TICK: 2377 PC:  28 ADDR:   0 MEM_OUT: 1 ACC: -1 LG_ALU:   0 RG_ALU:   1 SP: 3932 ZF: 0 |	sub   =
  ADDR -> PC
  NUM -> ALU_RG
  TICK: 2379 PC:  32 ADDR:   0 MEM_OUT: 1 ACC: -1 LG_ALU:   0 RG_ALU:   0 SP: 3932 ZF: 0 |	load   =
  ALU_RES = ALU_RG
  TICK: 2380 PC:  32 ADDR:   0 MEM_OUT: 1 ACC: -1 LG_ALU:   0 RG_ALU:   0 SP: 3932 ZF: 1 |	load   =
  ALU_RES -> ACC
  TICK: 2381 PC:  32 ADDR:   0 MEM_OUT: 1 ACC: 0 LG_ALU:   0 RG_ALU:   0 SP: 3932 ZF: 1 |	load   =
  SP -> ALU_LG
  TICK: 2382 PC:  33 ADDR:   0 MEM_OUT: 1 ACC: 0 LG_ALU: 3932 RG_ALU:   0 SP: 3932 ZF: 1 |	push   =
  ALU_RES = SP - 1
  TICK: 2383 PC:  33 ADDR:   0 MEM_OUT: 1 ACC: 0 LG_ALU: 3932 RG_ALU:   0 SP: 3932 ZF: 0 |	push   =
  ALU_RES -> SP
  TICK: 2384 PC:  33 ADDR:   0 MEM_OUT: 1 ACC: 0 LG_ALU: 3932 RG_ALU:   0 SP: 3931 ZF: 0 |	push   =
  WRITE ACC -> MEM[ALU]
  TICK: 2384 PC:  33 ADDR:   0 MEM_OUT: 1 ACC: 0 LG_ALU: 3932 RG_ALU:   0 SP: 3931 ZF: 0 |	push   =
  SP -> ALU_LG
  TICK: 2385 PC:  34 ADDR:   0 MEM_OUT: 1 ACC: 0 LG_ALU: 3931 RG_ALU:   0 SP: 3931 ZF: 0 |	pop   if
  ALU_RES = ALU_LG
  TICK: 2386 PC:  34 ADDR:   0 MEM_OUT: 1 ACC: 0 LG_ALU: 3931 RG_ALU:   0 SP: 3931 ZF: 0 |	pop   if
  READ MEM[ALU]
  TICK: 2387 PC:  34 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3931 RG_ALU:   0 SP: 3931 ZF: 0 |	pop   if
  ALU_RES = SP + 1
  TICK: 2388 PC:  34 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3931 RG_ALU:   0 SP: 3931 ZF: 0 |	pop   if
  ALU_RES -> SP
  TICK: 2389 PC:  34 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3931 RG_ALU:   0 SP: 3932 ZF: 0 |	pop   if
  MEM[ALU] -> ALU_RG
  TICK: 2389 PC:  34 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3931 RG_ALU:   0 SP: 3932 ZF: 0 |	pop   if
  ALU_RES = ALU_RG
  TICK: 2390 PC:  34 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3931 RG_ALU:   0 SP: 3932 ZF: 1 |	pop   if
  ALU_RES -> ACC
  TICK: 2391 PC:  34 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3931 RG_ALU:   0 SP: 3932 ZF: 1 |	pop   if
  PC + 1 -> PC
  ADDR -> PC
  NUM -> ALU_RG
  TICK: 2393 PC:  20 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3931 RG_ALU:   0 SP: 3932 ZF: 1 |	load   +
  ALU_RES = ALU_RG
  TICK: 2394 PC:  20 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3931 RG_ALU:   0 SP: 3932 ZF: 1 |	load   +
  ALU_RES -> ACC
  TICK: 2395 PC:  20 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3931 RG_ALU:   0 SP: 3932 ZF: 1 |	load   +
  NUM -> ALU_RG
  TICK: 2396 PC:  21 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3931 RG_ALU:   0 SP: 3932 ZF: 1 |	add   +
  ACC -> ALU_LG
  TICK: 2396 PC:  21 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU:   0 RG_ALU:   0 SP: 3932 ZF: 1 |	add   +
  ALU_RES = ALU_LG + ALU_RG
  TICK: 2397 PC:  21 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU:   0 RG_ALU:   0 SP: 3932 ZF: 1 |	add   +
  ALU_RES -> ACC
  TICK: 2398 PC:  21 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU:   0 RG_ALU:   0 SP: 3932 ZF: 1 |	add   +
  SP -> ALU_LG
  TICK: 2399 PC:  22 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3932 RG_ALU:   0 SP: 3932 ZF: 1 |	push   +
  ALU_RES = SP - 1
  TICK: 2400 PC:  22 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3932 RG_ALU:   0 SP: 3932 ZF: 0 |	push   +
  ALU_RES -> SP
  TICK: 2401 PC:  22 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3932 RG_ALU:   0 SP: 3931 ZF: 0 |	push   +
  WRITE ACC -> MEM[ALU]
  TICK: 2401 PC:  22 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3932 RG_ALU:   0 SP: 3931 ZF: 0 |	push   +
  ADDR -> PC
  SP -> ALU_LG
  TICK: 2403 PC:  37 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3931 RG_ALU:   0 SP: 3931 ZF: 0 |	pop   if
  ALU_RES = ALU_LG
  TICK: 2404 PC:  37 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3931 RG_ALU:   0 SP: 3931 ZF: 0 |	pop   if
  READ MEM[ALU]
  TICK: 2405 PC:  37 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3931 RG_ALU:   0 SP: 3931 ZF: 0 |	pop   if
  ALU_RES = SP + 1
  TICK: 2406 PC:  37 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3931 RG_ALU:   0 SP: 3931 ZF: 0 |	pop   if
  ALU_RES -> SP
  TICK: 2407 PC:  37 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3931 RG_ALU:   0 SP: 3932 ZF: 0 |	pop   if
  MEM[ALU] -> ALU_RG
  TICK: 2407 PC:  37 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3931 RG_ALU:   0 SP: 3932 ZF: 0 |	pop   if
  ALU_RES = ALU_RG
  TICK: 2408 PC:  37 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3931 RG_ALU:   0 SP: 3932 ZF: 1 |	pop   if
  ALU_RES -> ACC
  TICK: 2409 PC:  37 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3931 RG_ALU:   0 SP: 3932 ZF: 1 |	pop   if
  SP -> ALU_LG
  TICK: 2410 PC:  38 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3932 RG_ALU:   0 SP: 3932 ZF: 1 |	push   if
  ALU_RES = SP - 1
  TICK: 2411 PC:  38 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3932 RG_ALU:   0 SP: 3932 ZF: 0 |	push   if
  ALU_RES -> SP
  TICK: 2412 PC:  38 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3932 RG_ALU:   0 SP: 3931 ZF: 0 |	push   if
  WRITE ACC -> MEM[ALU]
  TICK: 2412 PC:  38 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3932 RG_ALU:   0 SP: 3931 ZF: 0 |	push   if
  ADDR -> ALU_RG
  TICK: 2413 PC:  39 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3932 RG_ALU:   6 SP: 3931 ZF: 0 |	load   var
  ALU_RES = ALU_RG
  TICK: 2414 PC:  39 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3932 RG_ALU:   6 SP: 3931 ZF: 0 |	load   var
  READ MEM[ALU]
  TICK: 2415 PC:  39 ADDR:   0 MEM_OUT: 987 ACC: 0 LG_ALU: 3932 RG_ALU:   6 SP: 3931 ZF: 0 |	load   var
  MEM[ALU] -> ALU_RG
  TICK: 2416 PC:  39 ADDR:   0 MEM_OUT: 987 ACC: 0 LG_ALU: 3932 RG_ALU: 987 SP: 3931 ZF: 0 |	load   var
  ALU_RES = ALU_RG
  TICK: 2417 PC:  39 ADDR:   0 MEM_OUT: 987 ACC: 0 LG_ALU: 3932 RG_ALU: 987 SP: 3931 ZF: 0 |	load   var
  ALU_RES -> ACC
  TICK: 2418 PC:  39 ADDR:   0 MEM_OUT: 987 ACC: 987 LG_ALU: 3932 RG_ALU: 987 SP: 3931 ZF: 0 |	load   var
  ADDR -> ALU_RG
  TICK: 2419 PC:  40 ADDR:   0 MEM_OUT: 987 ACC: 987 LG_ALU: 3932 RG_ALU:   8 SP: 3931 ZF: 0 |	store   var
  ALU_RES = ALU_RG
  TICK: 2420 PC:  40 ADDR:   0 MEM_OUT: 987 ACC: 987 LG_ALU: 3932 RG_ALU:   8 SP: 3931 ZF: 0 |	store   var
  WRITE ACC -> MEM[ALU]
  TICK: 2421 PC:  40 ADDR:   0 MEM_OUT: 987 ACC: 987 LG_ALU: 3932 RG_ALU:   8 SP: 3931 ZF: 0 |	store   var
  NUM -> ALU_RG
  TICK: 2422 PC:  41 ADDR:   0 MEM_OUT: 987 ACC: 987 LG_ALU: 3932 RG_ALU:   1 SP: 3931 ZF: 0 |	load   var
  ALU_RES = ALU_RG
  TICK: 2423 PC:  41 ADDR:   0 MEM_OUT: 987 ACC: 987 LG_ALU: 3932 RG_ALU:   1 SP: 3931 ZF: 0 |	load   var
  ALU_RES -> ACC
  TICK: 2424 PC:  41 ADDR:   0 MEM_OUT: 987 ACC: 1 LG_ALU: 3932 RG_ALU:   1 SP: 3931 ZF: 0 |	load   var
  SP -> ALU_LG
  TICK: 2425 PC:  42 ADDR:   0 MEM_OUT: 987 ACC: 1 LG_ALU: 3931 RG_ALU:   1 SP: 3931 ZF: 0 |	push   var
  ALU_RES = SP - 1
  TICK: 2426 PC:  42 ADDR:   0 MEM_OUT: 987 ACC: 1 LG_ALU: 3931 RG_ALU:   1 SP: 3931 ZF: 0 |	push   var
  ALU_RES -> SP
  TICK: 2427 PC:  42 ADDR:   0 MEM_OUT: 987 ACC: 1 LG_ALU: 3931 RG_ALU:   1 SP: 3930 ZF: 0 |	push   var
  WRITE ACC -> MEM[ALU]
  TICK: 2427 PC:  42 ADDR:   0 MEM_OUT: 987 ACC: 1 LG_ALU: 3931 RG_ALU:   1 SP: 3930 ZF: 0 |	push   var
  ADDR -> ALU_RG
  TICK: 2428 PC:  43 ADDR:   0 MEM_OUT: 987 ACC: 1 LG_ALU: 3931 RG_ALU:   5 SP: 3930 ZF: 0 |	load   +
  ALU_RES = ALU_RG
  TICK: 2429 PC:  43 ADDR:   0 MEM_OUT: 987 ACC: 1 LG_ALU: 3931 RG_ALU:   5 SP: 3930 ZF: 0 |	load   +
  READ MEM[ALU]
  TICK: 2430 PC:  43 ADDR:   0 MEM_OUT: 610 ACC: 1 LG_ALU: 3931 RG_ALU:   5 SP: 3930 ZF: 0 |	load   +
  MEM[ALU] -> ALU_RG
  TICK: 2431 PC:  43 ADDR:   0 MEM_OUT: 610 ACC: 1 LG_ALU: 3931 RG_ALU: 610 SP: 3930 ZF: 0 |	load   +
  ALU_RES = ALU_RG
  TICK: 2432 PC:  43 ADDR:   0 MEM_OUT: 610 ACC: 1 LG_ALU: 3931 RG_ALU: 610 SP: 3930 ZF: 0 |	load   +
  ALU_RES -> ACC
  TICK: 2433 PC:  43 ADDR:   0 MEM_OUT: 610 ACC: 610 LG_ALU: 3931 RG_ALU: 610 SP: 3930 ZF: 0 |	load   +
  ADDR -> ALU_RG
  TICK: 2434 PC:  44 ADDR:   0 MEM_OUT: 610 ACC: 610 LG_ALU: 3931 RG_ALU:   6 SP: 3930 ZF: 0 |	add   +
  ALU_RES = ALU_RG
  TICK: 2435 PC:  44 ADDR:   0 MEM_OUT: 610 ACC: 610 LG_ALU: 3931 RG_ALU:   6 SP: 3930 ZF: 0 |	add   +
  READ MEM[ALU]
  TICK: 2436 PC:  44 ADDR:   0 MEM_OUT: 987 ACC: 610 LG_ALU: 3931 RG_ALU:   6 SP: 3930 ZF: 0 |	add   +
  MEM[ALU] -> ALU_RG
  TICK: 2437 PC:  44 ADDR:   0 MEM_OUT: 987 ACC: 610 LG_ALU: 3931 RG_ALU: 987 SP: 3930 ZF: 0 |	add   +
  ACC -> ALU_LG
  TICK: 2437 PC:  44 ADDR:   0 MEM_OUT: 987 ACC: 610 LG_ALU: 610 RG_ALU: 987 SP: 3930 ZF: 0 |	add   +
  ALU_RES = ALU_LG + ALU_RG
  TICK: 2438 PC:  44 ADDR:   0 MEM_OUT: 987 ACC: 610 LG_ALU: 610 RG_ALU: 987 SP: 3930 ZF: 0 |	add   +
  ALU_RES -> ACC
  TICK: 2439 PC:  44 ADDR:   0 MEM_OUT: 987 ACC: 1597 LG_ALU: 610 RG_ALU: 987 SP: 3930 ZF: 0 |	add   +
  SP -> ALU_LG
  TICK: 2440 PC:  45 ADDR:   0 MEM_OUT: 987 ACC: 1597 LG_ALU: 3930 RG_ALU: 987 SP: 3930 ZF: 0 |	push   +
  ALU_RES = SP - 1
  TICK: 2441 PC:  45 ADDR:   0 MEM_OUT: 987 ACC: 1597 LG_ALU: 3930 RG_ALU: 987 SP: 3930 ZF: 0 |	push   +
  ALU_RES -> SP
  TICK: 2442 PC:  45 ADDR:   0 MEM_OUT: 987 ACC: 1597 LG_ALU: 3930 RG_ALU: 987 SP: 3929 ZF: 0 |	push   +
  WRITE ACC -> MEM[ALU]
  TICK: 2442 PC:  45 ADDR:   0 MEM_OUT: 987 ACC: 1597 LG_ALU: 3930 RG_ALU: 987 SP: 3929 ZF: 0 |	push   +
  SP -> ALU_LG
  TICK: 2443 PC:  46 ADDR:   0 MEM_OUT: 987 ACC: 1597 LG_ALU: 3929 RG_ALU: 987 SP: 3929 ZF: 0 |	pop   var
  ALU_RES = ALU_LG
  TICK: 2444 PC:  46 ADDR:   0 MEM_OUT: 987 ACC: 1597 LG_ALU: 3929 RG_ALU: 987 SP: 3929 ZF: 0 |	pop   var
  READ MEM[ALU]
  TICK: 2445 PC:  46 ADDR:   0 MEM_OUT: 1597 ACC: 1597 LG_ALU: 3929 RG_ALU: 987 SP: 3929 ZF: 0 |	pop   var
  ALU_RES = SP + 1
  TICK: 2446 PC:  46 ADDR:   0 MEM_OUT: 1597 ACC: 1597 LG_ALU: 3929 RG_ALU: 987 SP: 3929 ZF: 0 |	pop   var
  ALU_RES -> SP
  TICK: 2447 PC:  46 ADDR:   0 MEM_OUT: 1597 ACC: 1597 LG_ALU: 3929 RG_ALU: 987 SP: 3930 ZF: 0 |	pop   var
  MEM[ALU] -> ALU_RG
  TICK: 2447 PC:  46 ADDR:   0 MEM_OUT: 1597 ACC: 1597 LG_ALU: 3929 RG_ALU: 1597 SP: 3930 ZF: 0 |	pop   var
  ALU_RES = ALU_RG
  TICK: 2448 PC:  46 ADDR:   0 MEM_OUT: 1597 ACC: 1597 LG_ALU: 3929 RG_ALU: 1597 SP: 3930 ZF: 0 |	pop   var
  ALU_RES -> ACC
  TICK: 2449 PC:  46 ADDR:   0 MEM_OUT: 1597 ACC: 1597 LG_ALU: 3929 RG_ALU: 1597 SP: 3930 ZF: 0 |	pop   var
  ADDR -> ALU_RG
  TICK: 2450 PC:  47 ADDR:   0 MEM_OUT: 1597 ACC: 1597 LG_ALU: 3929 RG_ALU:   6 SP: 3930 ZF: 0 |	store   var
  ALU_RES = ALU_RG
  TICK: 2451 PC:  47 ADDR:   0 MEM_OUT: 1597 ACC: 1597 LG_ALU: 3929 RG_ALU:   6 SP: 3930 ZF: 0 |	store   var
  WRITE ACC -> MEM[ALU]
  TICK: 2452 PC:  47 ADDR:   0 MEM_OUT: 1597 ACC: 1597 LG_ALU: 3929 RG_ALU:   6 SP: 3930 ZF: 0 |	store   var
  NUM -> ALU_RG
  TICK: 2453 PC:  48 ADDR:   0 MEM_OUT: 1597 ACC: 1597 LG_ALU: 3929 RG_ALU:   1 SP: 3930 ZF: 0 |	load   var
  ALU_RES = ALU_RG
  TICK: 2454 PC:  48 ADDR:   0 MEM_OUT: 1597 ACC: 1597 LG_ALU: 3929 RG_ALU:   1 SP: 3930 ZF: 0 |	load   var
  ALU_RES -> ACC
  TICK: 2455 PC:  48 ADDR:   0 MEM_OUT: 1597 ACC: 1 LG_ALU: 3929 RG_ALU:   1 SP: 3930 ZF: 0 |	load   var
  SP -> ALU_LG
  TICK: 2456 PC:  49 ADDR:   0 MEM_OUT: 1597 ACC: 1 LG_ALU: 3930 RG_ALU:   1 SP: 3930 ZF: 0 |	push   var
  ALU_RES = SP - 1
  TICK: 2457 PC:  49 ADDR:   0 MEM_OUT: 1597 ACC: 1 LG_ALU: 3930 RG_ALU:   1 SP: 3930 ZF: 0 |	push   var
  ALU_RES -> SP
  TICK: 2458 PC:  49 ADDR:   0 MEM_OUT: 1597 ACC: 1 LG_ALU: 3930 RG_ALU:   1 SP: 3929 ZF: 0 |	push   var
  WRITE ACC -> MEM[ALU]
  TICK: 2458 PC:  49 ADDR:   0 MEM_OUT: 1597 ACC: 1 LG_ALU: 3930 RG_ALU:   1 SP: 3929 ZF: 0 |	push   var
  ADDR -> ALU_RG
  TICK: 2459 PC:  50 ADDR:   0 MEM_OUT: 1597 ACC: 1 LG_ALU: 3930 RG_ALU:   8 SP: 3929 ZF: 0 |	load   var
  ALU_RES = ALU_RG
  TICK: 2460 PC:  50 ADDR:   0 MEM_OUT: 1597 ACC: 1 LG_ALU: 3930 RG_ALU:   8 SP: 3929 ZF: 0 |	load   var
  READ MEM[ALU]
  TICK: 2461 PC:  50 ADDR:   0 MEM_OUT: 987 ACC: 1 LG_ALU: 3930 RG_ALU:   8 SP: 3929 ZF: 0 |	load   var
  MEM[ALU] -> ALU_RG
  TICK: 2462 PC:  50 ADDR:   0 MEM_OUT: 987 ACC: 1 LG_ALU: 3930 RG_ALU: 987 SP: 3929 ZF: 0 |	load   var
  ALU_RES = ALU_RG
  TICK: 2463 PC:  50 ADDR:   0 MEM_OUT: 987 ACC: 1 LG_ALU: 3930 RG_ALU: 987 SP: 3929 ZF: 0 |	load   var
  ALU_RES -> ACC
  TICK: 2464 PC:  50 ADDR:   0 MEM_OUT: 987 ACC: 987 LG_ALU: 3930 RG_ALU: 987 SP: 3929 ZF: 0 |	load   var
  ADDR -> ALU_RG
  TICK: 2465 PC:  51 ADDR:   0 MEM_OUT: 987 ACC: 987 LG_ALU: 3930 RG_ALU:   5 SP: 3929 ZF: 0 |	store   var
  ALU_RES = ALU_RG
  TICK: 2466 PC:  51 ADDR:   0 MEM_OUT: 987 ACC: 987 LG_ALU: 3930 RG_ALU:   5 SP: 3929 ZF: 0 |	store   var
  WRITE ACC -> MEM[ALU]
  TICK: 2467 PC:  51 ADDR:   0 MEM_OUT: 987 ACC: 987 LG_ALU: 3930 RG_ALU:   5 SP: 3929 ZF: 0 |	store   var
  NUM -> ALU_RG
  TICK: 2468 PC:  52 ADDR:   0 MEM_OUT: 987 ACC: 987 LG_ALU: 3930 RG_ALU:   1 SP: 3929 ZF: 0 |	load   var
  ALU_RES = ALU_RG
  TICK: 2469 PC:  52 ADDR:   0 MEM_OUT: 987 ACC: 987 LG_ALU: 3930 RG_ALU:   1 SP: 3929 ZF: 0 |	load   var
  ALU_RES -> ACC
  TICK: 2470 PC:  52 ADDR:   0 MEM_OUT: 987 ACC: 1 LG_ALU: 3930 RG_ALU:   1 SP: 3929 ZF: 0 |	load   var
  SP -> ALU_LG
  TICK: 2471 PC:  53 ADDR:   0 MEM_OUT: 987 ACC: 1 LG_ALU: 3929 RG_ALU:   1 SP: 3929 ZF: 0 |	push   var
  ALU_RES = SP - 1
  TICK: 2472 PC:  53 ADDR:   0 MEM_OUT: 987 ACC: 1 LG_ALU: 3929 RG_ALU:   1 SP: 3929 ZF: 0 |	push   var
  ALU_RES -> SP
  TICK: 2473 PC:  53 ADDR:   0 MEM_OUT: 987 ACC: 1 LG_ALU: 3929 RG_ALU:   1 SP: 3928 ZF: 0 |	push   var
  WRITE ACC -> MEM[ALU]
  TICK: 2473 PC:  53 ADDR:   0 MEM_OUT: 987 ACC: 1 LG_ALU: 3929 RG_ALU:   1 SP: 3928 ZF: 0 |	push   var
  ADDR -> ALU_RG
  TICK: 2474 PC:  54 ADDR:   0 MEM_OUT: 987 ACC: 1 LG_ALU: 3929 RG_ALU:   6 SP: 3928 ZF: 0 |	load   <
  ALU_RES = ALU_RG
  TICK: 2475 PC:  54 ADDR:   0 MEM_OUT: 987 ACC: 1 LG_ALU: 3929 RG_ALU:   6 SP: 3928 ZF: 0 |	load   <
  READ MEM[ALU]
  TICK: 2476 PC:  54 ADDR:   0 MEM_OUT: 1597 ACC: 1 LG_ALU: 3929 RG_ALU:   6 SP: 3928 ZF: 0 |	load   <
  MEM[ALU] -> ALU_RG
  TICK: 2477 PC:  54 ADDR:   0 MEM_OUT: 1597 ACC: 1 LG_ALU: 3929 RG_ALU: 1597 SP: 3928 ZF: 0 |	load   <
  ALU_RES = ALU_RG
  TICK: 2478 PC:  54 ADDR:   0 MEM_OUT: 1597 ACC: 1 LG_ALU: 3929 RG_ALU: 1597 SP: 3928 ZF: 0 |	load   <
  ALU_RES -> ACC
  TICK: 2479 PC:  54 ADDR:   0 MEM_OUT: 1597 ACC: 1597 LG_ALU: 3929 RG_ALU: 1597 SP: 3928 ZF: 0 |	load   <
  ADDR -> ALU_RG
  TICK: 2480 PC:  55 ADDR:   0 MEM_OUT: 1597 ACC: 1597 LG_ALU: 3929 RG_ALU:   7 SP: 3928 ZF: 0 |	sub   <
  ALU_RES = ALU_RG
  TICK: 2481 PC:  55 ADDR:   0 MEM_OUT: 1597 ACC: 1597 LG_ALU: 3929 RG_ALU:   7 SP: 3928 ZF: 0 |	sub   <
  READ MEM[ALU]
  TICK: 2482 PC:  55 ADDR:   0 MEM_OUT: 400000 ACC: 1597 LG_ALU: 3929 RG_ALU:   7 SP: 3928 ZF: 0 |	sub   <
  MEM[ALU] -> ALU_RG
  TICK: 2483 PC:  55 ADDR:   0 MEM_OUT: 400000 ACC: 1597 LG_ALU: 3929 RG_ALU: 400000 SP: 3928 ZF: 0 |	sub   <
  ACC -> ALU_LG
  TICK: 2483 PC:  55 ADDR:   0 MEM_OUT: 400000 ACC: 1597 LG_ALU: 1597 RG_ALU: 400000 SP: 3928 ZF: 0 |	sub   <
  ALU_RES = ALU_LG + ALU_RG
  TICK: 2484 PC:  55 ADDR:   0 MEM_OUT: 400000 ACC: 1597 LG_ALU: 1597 RG_ALU: 400000 SP: 3928 ZF: 0 |	sub   <
  ALU_RES -> ACC
  TICK: 2485 PC:  55 ADDR:   0 MEM_OUT: 400000 ACC: -398403 LG_ALU: 1597 RG_ALU: 400000 SP: 3928 ZF: 0 |	sub   <
  PC + 1 -> PC
  NUM -> ALU_RG
  TICK: 2486 PC:  57 ADDR:   0 MEM_OUT: 400000 ACC: -398403 LG_ALU: 1597 RG_ALU:   1 SP: 3928 ZF: 0 |	load   <
  ALU_RES = ALU_RG
  TICK: 2487 PC:  57 ADDR:   0 MEM_OUT: 400000 ACC: -398403 LG_ALU: 1597 RG_ALU:   1 SP: 3928 ZF: 0 |	load   <
  ALU_RES -> ACC
  TICK: 2488 PC:  57 ADDR:   0 MEM_OUT: 400000 ACC: 1 LG_ALU: 1597 RG_ALU:   1 SP: 3928 ZF: 0 |	load   <
  ADDR -> PC
  SP -> ALU_LG
  TICK: 2490 PC:  60 ADDR:   0 MEM_OUT: 400000 ACC: 1 LG_ALU: 3928 RG_ALU:   1 SP: 3928 ZF: 0 |	push   <
  ALU_RES = SP - 1
  TICK: 2491 PC:  60 ADDR:   0 MEM_OUT: 400000 ACC: 1 LG_ALU: 3928 RG_ALU:   1 SP: 3928 ZF: 0 |	push   <
  ALU_RES -> SP
  TICK: 2492 PC:  60 ADDR:   0 MEM_OUT: 400000 ACC: 1 LG_ALU: 3928 RG_ALU:   1 SP: 3927 ZF: 0 |	push   <
  WRITE ACC -> MEM[ALU]
  TICK: 2492 PC:  60 ADDR:   0 MEM_OUT: 400000 ACC: 1 LG_ALU: 3928 RG_ALU:   1 SP: 3927 ZF: 0 |	push   <
  SP -> ALU_LG
  TICK: 2493 PC:  61 ADDR:   0 MEM_OUT: 400000 ACC: 1 LG_ALU: 3927 RG_ALU:   1 SP: 3927 ZF: 0 |	pop
  ALU_RES = ALU_LG
  TICK: 2494 PC:  61 ADDR:   0 MEM_OUT: 400000 ACC: 1 LG_ALU: 3927 RG_ALU:   1 SP: 3927 ZF: 0 |	pop
  READ MEM[ALU]
  TICK: 2495 PC:  61 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3927 RG_ALU:   1 SP: 3927 ZF: 0 |	pop
  ALU_RES = SP + 1
  TICK: 2496 PC:  61 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3927 RG_ALU:   1 SP: 3927 ZF: 0 |	pop
  ALU_RES -> SP
  TICK: 2497 PC:  61 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3927 RG_ALU:   1 SP: 3928 ZF: 0 |	pop
  MEM[ALU] -> ALU_RG
  TICK: 2497 PC:  61 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3927 RG_ALU:   1 SP: 3928 ZF: 0 |	pop
  ALU_RES = ALU_RG
  TICK: 2498 PC:  61 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3927 RG_ALU:   1 SP: 3928 ZF: 0 |	pop
  ALU_RES -> ACC
  TICK: 2499 PC:  61 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3927 RG_ALU:   1 SP: 3928 ZF: 0 |	pop
  ADDR -> PC
  ADDR -> PC
  ADDR -> ALU_RG
  TICK: 2502 PC:  24 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3927 RG_ALU:   6 SP: 3928 ZF: 0 |	load
  ALU_RES = ALU_RG
  TICK: 2503 PC:  24 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3927 RG_ALU:   6 SP: 3928 ZF: 0 |	load
  READ MEM[ALU]
  TICK: 2504 PC:  24 ADDR:   0 MEM_OUT: 1597 ACC: 1 LG_ALU: 3927 RG_ALU:   6 SP: 3928 ZF: 0 |	load
  MEM[ALU] -> ALU_RG
  TICK: 2505 PC:  24 ADDR:   0 MEM_OUT: 1597 ACC: 1 LG_ALU: 3927 RG_ALU: 1597 SP: 3928 ZF: 0 |	load
  ALU_RES = ALU_RG
  TICK: 2506 PC:  24 ADDR:   0 MEM_OUT: 1597 ACC: 1 LG_ALU: 3927 RG_ALU: 1597 SP: 3928 ZF: 0 |	load
  ALU_RES -> ACC
  TICK: 2507 PC:  24 ADDR:   0 MEM_OUT: 1597 ACC: 1597 LG_ALU: 3927 RG_ALU: 1597 SP: 3928 ZF: 0 |	load
  NUM -> ALU_RG
  TICK: 2508 PC:  25 ADDR:   0 MEM_OUT: 1597 ACC: 1597 LG_ALU: 3927 RG_ALU:   2 SP: 3928 ZF: 0 |	mod
  ACC -> ALU_LG
  TICK: 2508 PC:  25 ADDR:   0 MEM_OUT: 1597 ACC: 1597 LG_ALU: 1597 RG_ALU:   2 SP: 3928 ZF: 0 |	mod
  ALU_RES = ALU_LG % ALU_RG
  TICK: 2509 PC:  25 ADDR:   0 MEM_OUT: 1597 ACC: 1597 LG_ALU: 1597 RG_ALU:   2 SP: 3928 ZF: 0 |	mod
  ALU_RES -> ACC
  TICK: 2510 PC:  25 ADDR:   0 MEM_OUT: 1597 ACC: 1 LG_ALU: 1597 RG_ALU:   2 SP: 3928 ZF: 0 |	mod
  SP -> ALU_LG
  TICK: 2511 PC:  26 ADDR:   0 MEM_OUT: 1597 ACC: 1 LG_ALU: 3928 RG_ALU:   2 SP: 3928 ZF: 0 |	push
  ALU_RES = SP - 1
  TICK: 2512 PC:  26 ADDR:   0 MEM_OUT: 1597 ACC: 1 LG_ALU: 3928 RG_ALU:   2 SP: 3928 ZF: 0 |	push
  ALU_RES -> SP
  TICK: 2513 PC:  26 ADDR:   0 MEM_OUT: 1597 ACC: 1 LG_ALU: 3928 RG_ALU:   2 SP: 3927 ZF: 0 |	push
  WRITE ACC -> MEM[ALU]
  TICK: 2513 PC:  26 ADDR:   0 MEM_OUT: 1597 ACC: 1 LG_ALU: 3928 RG_ALU:   2 SP: 3927 ZF: 0 |	push
  NUM -> ALU_RG
  TICK: 2514 PC:  27 ADDR:   0 MEM_OUT: 1597 ACC: 1 LG_ALU: 3928 RG_ALU:   0 SP: 3927 ZF: 0 |	load   =
  ALU_RES = ALU_RG
  TICK: 2515 PC:  27 ADDR:   0 MEM_OUT: 1597 ACC: 1 LG_ALU: 3928 RG_ALU:   0 SP: 3927 ZF: 1 |	load   =
  ALU_RES -> ACC
  TICK: 2516 PC:  27 ADDR:   0 MEM_OUT: 1597 ACC: 0 LG_ALU: 3928 RG_ALU:   0 SP: 3927 ZF: 1 |	load   =
  SP -> ALU_LG
  TICK: 2517 PC:  28 ADDR:   0 MEM_OUT: 1597 ACC: 0 LG_ALU: 3927 RG_ALU:   0 SP: 3927 ZF: 1 |	sub   =
  ALU_RES = ALU_LG
  TICK: 2518 PC:  28 ADDR:   0 MEM_OUT: 1597 ACC: 0 LG_ALU: 3927 RG_ALU:   0 SP: 3927 ZF: 0 |	sub   =
  READ MEM[ALU]
  TICK: 2519 PC:  28 ADDR:   0 MEM_OUT: 1 ACC: 0 LG_ALU: 3927 RG_ALU:   0 SP: 3927 ZF: 0 |	sub   =
  MEM[ALU] -> ALU_RG
  TICK: 2520 PC:  28 ADDR:   0 MEM_OUT: 1 ACC: 0 LG_ALU: 3927 RG_ALU:   1 SP: 3927 ZF: 0 |	sub   =
  ALU_RES = SP + 1
  TICK: 2521 PC:  28 ADDR:   0 MEM_OUT: 1 ACC: 0 LG_ALU: 3927 RG_ALU:   1 SP: 3927 ZF: 0 |	sub   =
  ALU_RES -> SP
  TICK: 2522 PC:  28 ADDR:   0 MEM_OUT: 1 ACC: 0 LG_ALU: 3927 RG_ALU:   1 SP: 3928 ZF: 0 |	sub   =
  ACC -> ALU_LG
  TICK: 2522 PC:  28 ADDR:   0 MEM_OUT: 1 ACC: 0 LG_ALU:   0 RG_ALU:   1 SP: 3928 ZF: 0 |	sub   =
  ALU_RES = ALU_LG + ALU_RG
  TICK: 2523 PC:  28 ADDR:   0 MEM_OUT: 1 ACC: 0 LG_ALU:   0 RG_ALU:   1 SP: 3928 ZF: 0 |	sub   =
  ALU_RES -> ACC
  TICK: 2524 PC:  28 ADDR:   0 MEM_OUT: 1 ACC: -1 LG_ALU:   0 RG_ALU:   1 SP: 3928 ZF: 0 |	sub   =
  ADDR -> PC
  NUM -> ALU_RG
  TICK: 2526 PC:  32 ADDR:   0 MEM_OUT: 1 ACC: -1 LG_ALU:   0 RG_ALU:   0 SP: 3928 ZF: 0 |	load   =
  ALU_RES = ALU_RG
  TICK: 2527 PC:  32 ADDR:   0 MEM_OUT: 1 ACC: -1 LG_ALU:   0 RG_ALU:   0 SP: 3928 ZF: 1 |	load   =
  ALU_RES -> ACC
  TICK: 2528 PC:  32 ADDR:   0 MEM_OUT: 1 ACC: 0 LG_ALU:   0 RG_ALU:   0 SP: 3928 ZF: 1 |	load   =
  SP -> ALU_LG
  TICK: 2529 PC:  33 ADDR:   0 MEM_OUT: 1 ACC: 0 LG_ALU: 3928 RG_ALU:   0 SP: 3928 ZF: 1 |	push   =
  ALU_RES = SP - 1
  TICK: 2530 PC:  33 ADDR:   0 MEM_OUT: 1 ACC: 0 LG_ALU: 3928 RG_ALU:   0 SP: 3928 ZF: 0 |	push   =
  ALU_RES -> SP
  TICK: 2531 PC:  33 ADDR:   0 MEM_OUT: 1 ACC: 0 LG_ALU: 3928 RG_ALU:   0 SP: 3927 ZF: 0 |	push   =
  WRITE ACC -> MEM[ALU]
  TICK: 2531 PC:  33 ADDR:   0 MEM_OUT: 1 ACC: 0 LG_ALU: 3928 RG_ALU:   0 SP: 3927 ZF: 0 |	push   =
  SP -> ALU_LG
  TICK: 2532 PC:  34 ADDR:   0 MEM_OUT: 1 ACC: 0 LG_ALU: 3927 RG_ALU:   0 SP: 3927 ZF: 0 |	pop   if
  ALU_RES = ALU_LG
  TICK: 2533 PC:  34 ADDR:   0 MEM_OUT: 1 ACC: 0 LG_ALU: 3927 RG_ALU:   0 SP: 3927 ZF: 0 |	pop   if
  READ MEM[ALU]
  TICK: 2534 PC:  34 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3927 RG_ALU:   0 SP: 3927 ZF: 0 |	pop   if
  ALU_RES = SP + 1
  TICK: 2535 PC:  34 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3927 RG_ALU:   0 SP: 3927 ZF: 0 |	pop   if
  ALU_RES -> SP
  TICK: 2536 PC:  34 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3927 RG_ALU:   0 SP: 3928 ZF: 0 |	pop   if
  MEM[ALU] -> ALU_RG
  TICK: 2536 PC:  34 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3927 RG_ALU:   0 SP: 3928 ZF: 0 |	pop   if
  ALU_RES = ALU_RG
  TICK: 2537 PC:  34 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3927 RG_ALU:   0 SP: 3928 ZF: 1 |	pop   if
  ALU_RES -> ACC
  TICK: 2538 PC:  34 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3927 RG_ALU:   0 SP: 3928 ZF: 1 |	pop   if
  PC + 1 -> PC
  ADDR -> PC
  NUM -> ALU_RG
  TICK: 2540 PC:  20 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3927 RG_ALU:   0 SP: 3928 ZF: 1 |	load   +
  ALU_RES = ALU_RG
  TICK: 2541 PC:  20 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3927 RG_ALU:   0 SP: 3928 ZF: 1 |	load   +
  ALU_RES -> ACC
  TICK: 2542 PC:  20 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3927 RG_ALU:   0 SP: 3928 ZF: 1 |	load   +
  NUM -> ALU_RG
  TICK: 2543 PC:  21 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3927 RG_ALU:   0 SP: 3928 ZF: 1 |	add   +
  ACC -> ALU_LG
  TICK: 2543 PC:  21 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU:   0 RG_ALU:   0 SP: 3928 ZF: 1 |	add   +
  ALU_RES = ALU_LG + ALU_RG
  TICK: 2544 PC:  21 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU:   0 RG_ALU:   0 SP: 3928 ZF: 1 |	add   +
  ALU_RES -> ACC
  TICK: 2545 PC:  21 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU:   0 RG_ALU:   0 SP: 3928 ZF: 1 |	add   +
  SP -> ALU_LG
  TICK: 2546 PC:  22 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3928 RG_ALU:   0 SP: 3928 ZF: 1 |	push   +
  ALU_RES = SP - 1
  TICK: 2547 PC:  22 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3928 RG_ALU:   0 SP: 3928 ZF: 0 |	push   +
  ALU_RES -> SP
  TICK: 2548 PC:  22 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3928 RG_ALU:   0 SP: 3927 ZF: 0 |	push   +
  WRITE ACC -> MEM[ALU]
  TICK: 2548 PC:  22 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3928 RG_ALU:   0 SP: 3927 ZF: 0 |	push   +
  ADDR -> PC
  SP -> ALU_LG
  TICK: 2550 PC:  37 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3927 RG_ALU:   0 SP: 3927 ZF: 0 |	pop   if
  ALU_RES = ALU_LG
  TICK: 2551 PC:  37 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3927 RG_ALU:   0 SP: 3927 ZF: 0 |	pop   if
  READ MEM[ALU]
  TICK: 2552 PC:  37 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3927 RG_ALU:   0 SP: 3927 ZF: 0 |	pop   if
  ALU_RES = SP + 1
  TICK: 2553 PC:  37 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3927 RG_ALU:   0 SP: 3927 ZF: 0 |	pop   if
  ALU_RES -> SP
  TICK: 2554 PC:  37 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3927 RG_ALU:   0 SP: 3928 ZF: 0 |	pop   if
  MEM[ALU] -> ALU_RG
  TICK: 2554 PC:  37 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3927 RG_ALU:   0 SP: 3928 ZF: 0 |	pop   if
  ALU_RES = ALU_RG
  TICK: 2555 PC:  37 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3927 RG_ALU:   0 SP: 3928 ZF: 1 |	pop   if
  ALU_RES -> ACC
  TICK: 2556 PC:  37 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3927 RG_ALU:   0 SP: 3928 ZF: 1 |	pop   if
  SP -> ALU_LG
  TICK: 2557 PC:  38 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3928 RG_ALU:   0 SP: 3928 ZF: 1 |	push   if
  ALU_RES = SP - 1
  TICK: 2558 PC:  38 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3928 RG_ALU:   0 SP: 3928 ZF: 0 |	push   if
  ALU_RES -> SP
  TICK: 2559 PC:  38 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3928 RG_ALU:   0 SP: 3927 ZF: 0 |	push   if
  WRITE ACC -> MEM[ALU]
  TICK: 2559 PC:  38 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3928 RG_ALU:   0 SP: 3927 ZF: 0 |	push   if
  ADDR -> ALU_RG
  TICK: 2560 PC:  39 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3928 RG_ALU:   6 SP: 3927 ZF: 0 |	load   var
  ALU_RES = ALU_RG
  TICK: 2561 PC:  39 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3928 RG_ALU:   6 SP: 3927 ZF: 0 |	load   var
  READ MEM[ALU]
  TICK: 2562 PC:  39 ADDR:   0 MEM_OUT: 1597 ACC: 0 LG_ALU: 3928 RG_ALU:   6 SP: 3927 ZF: 0 |	load   var
  MEM[ALU] -> ALU_RG
  TICK: 2563 PC:  39 ADDR:   0 MEM_OUT: 1597 ACC: 0 LG_ALU: 3928 RG_ALU: 1597 SP: 3927 ZF: 0 |	load   var
  ALU_RES = ALU_RG
  TICK: 2564 PC:  39 ADDR:   0 MEM_OUT: 1597 ACC: 0 LG_ALU: 3928 RG_ALU: 1597 SP: 3927 ZF: 0 |	load   var
  ALU_RES -> ACC
  TICK: 2565 PC:  39 ADDR:   0 MEM_OUT: 1597 ACC: 1597 LG_ALU: 3928 RG_ALU: 1597 SP: 3927 ZF: 0 |	load   var
  ADDR -> ALU_RG
  TICK: 2566 PC:  40 ADDR:   0 MEM_OUT: 1597 ACC: 1597 LG_ALU: 3928 RG_ALU:   8 SP: 3927 ZF: 0 |	store   var
  ALU_RES = ALU_RG
  TICK: 2567 PC:  40 ADDR:   0 MEM_OUT: 1597 ACC: 1597 LG_ALU: 3928 RG_ALU:   8 SP: 3927 ZF: 0 |	store   var
  WRITE ACC -> MEM[ALU]
  TICK: 2568 PC:  40 ADDR:   0 MEM_OUT: 1597 ACC: 1597 LG_ALU: 3928 RG_ALU:   8 SP: 3927 ZF: 0 |	store   var
  NUM -> ALU_RG
  TICK: 2569 PC:  41 ADDR:   0 MEM_OUT: 1597 ACC: 1597 LG_ALU: 3928 RG_ALU:   1 SP: 3927 ZF: 0 |	load   var
  ALU_RES = ALU_RG
  TICK: 2570 PC:  41 ADDR:   0 MEM_OUT: 1597 ACC: 1597 LG_ALU: 3928 RG_ALU:   1 SP: 3927 ZF: 0 |	load   var
  ALU_RES -> ACC
  TICK: 2571 PC:  41 ADDR:   0 MEM_OUT: 1597 ACC: 1 LG_ALU: 3928 RG_ALU:   1 SP: 3927 ZF: 0 |	load   var
  SP -> ALU_LG
  TICK: 2572 PC:  42 ADDR:   0 MEM_OUT: 1597 ACC: 1 LG_ALU: 3927 RG_ALU:   1 SP: 3927 ZF: 0 |	push   var
  ALU_RES = SP - 1
  TICK: 2573 PC:  42 ADDR:   0 MEM_OUT: 1597 ACC: 1 LG_ALU: 3927 RG_ALU:   1 SP: 3927 ZF: 0 |	push   var
  ALU_RES -> SP
  TICK: 2574 PC:  42 ADDR:   0 MEM_OUT: 1597 ACC: 1 LG_ALU: 3927 RG_ALU:   1 SP: 3926 ZF: 0 |	push   var
  WRITE ACC -> MEM[ALU]
  TICK: 2574 PC:  42 ADDR:   0 MEM_OUT: 1597 ACC: 1 LG_ALU: 3927 RG_ALU:   1 SP: 3926 ZF: 0 |	push   var
  ADDR -> ALU_RG
  TICK: 2575 PC:  43 ADDR:   0 MEM_OUT: 1597 ACC: 1 LG_ALU: 3927 RG_ALU:   5 SP: 3926 ZF: 0 |	load   +
  ALU_RES = ALU_RG
  TICK: 2576 PC:  43 ADDR:   0 MEM_OUT: 1597 ACC: 1 LG_ALU: 3927 RG_ALU:   5 SP: 3926 ZF: 0 |	load   +
  READ MEM[ALU]
  TICK: 2577 PC:  43 ADDR:   0 MEM_OUT: 987 ACC: 1 LG_ALU: 3927 RG_ALU:   5 SP: 3926 ZF: 0 |	load   +
  MEM[ALU] -> ALU_RG
  TICK: 2578 PC:  43 ADDR:   0 MEM_OUT: 987 ACC: 1 LG_ALU: 3927 RG_ALU: 987 SP: 3926 ZF: 0 |	load   +
  ALU_RES = ALU_RG
  TICK: 2579 PC:  43 ADDR:   0 MEM_OUT: 987 ACC: 1 LG_ALU: 3927 RG_ALU: 987 SP: 3926 ZF: 0 |	load   +
  ALU_RES -> ACC
  TICK: 2580 PC:  43 ADDR:   0 MEM_OUT: 987 ACC: 987 LG_ALU: 3927 RG_ALU: 987 SP: 3926 ZF: 0 |	load   +
  ADDR -> ALU_RG
  TICK: 2581 PC:  44 ADDR:   0 MEM_OUT: 987 ACC: 987 LG_ALU: 3927 RG_ALU:   6 SP: 3926 ZF: 0 |	add   +
  ALU_RES = ALU_RG
  TICK: 2582 PC:  44 ADDR:   0 MEM_OUT: 987 ACC: 987 LG_ALU: 3927 RG_ALU:   6 SP: 3926 ZF: 0 |	add   +
  READ MEM[ALU]
  TICK: 2583 PC:  44 ADDR:   0 MEM_OUT: 1597 ACC: 987 LG_ALU: 3927 RG_ALU:   6 SP: 3926 ZF: 0 |	add   +
  MEM[ALU] -> ALU_RG
  TICK: 2584 PC:  44 ADDR:   0 MEM_OUT: 1597 ACC: 987 LG_ALU: 3927 RG_ALU: 1597 SP: 3926 ZF: 0 |	add   +
  ACC -> ALU_LG
  TICK: 2584 PC:  44 ADDR:   0 MEM_OUT: 1597 ACC: 987 LG_ALU: 987 RG_ALU: 1597 SP: 3926 ZF: 0 |	add   +
  ALU_RES = ALU_LG + ALU_RG
  TICK: 2585 PC:  44 ADDR:   0 MEM_OUT: 1597 ACC: 987 LG_ALU: 987 RG_ALU: 1597 SP: 3926 ZF: 0 |	add   +
  ALU_RES -> ACC
  TICK: 2586 PC:  44 ADDR:   0 MEM_OUT: 1597 ACC: 2584 LG_ALU: 987 RG_ALU: 1597 SP: 3926 ZF: 0 |	add   +
  SP -> ALU_LG
  TICK: 2587 PC:  45 ADDR:   0 MEM_OUT: 1597 ACC: 2584 LG_ALU: 3926 RG_ALU: 1597 SP: 3926 ZF: 0 |	push   +
  ALU_RES = SP - 1
  TICK: 2588 PC:  45 ADDR:   0 MEM_OUT: 1597 ACC: 2584 LG_ALU: 3926 RG_ALU: 1597 SP: 3926 ZF: 0 |	push   +
  ALU_RES -> SP
  TICK: 2589 PC:  45 ADDR:   0 MEM_OUT: 1597 ACC: 2584 LG_ALU: 3926 RG_ALU: 1597 SP: 3925 ZF: 0 |	push   +
  WRITE ACC -> MEM[ALU]
  TICK: 2589 PC:  45 ADDR:   0 MEM_OUT: 1597 ACC: 2584 LG_ALU: 3926 RG_ALU: 1597 SP: 3925 ZF: 0 |	push   +
  SP -> ALU_LG
  TICK: 2590 PC:  46 ADDR:   0 MEM_OUT: 1597 ACC: 2584 LG_ALU: 3925 RG_ALU: 1597 SP: 3925 ZF: 0 |	pop   var
  ALU_RES = ALU_LG
  TICK: 2591 PC:  46 ADDR:   0 MEM_OUT: 1597 ACC: 2584 LG_ALU: 3925 RG_ALU: 1597 SP: 3925 ZF: 0 |	pop   var
  READ MEM[ALU]
  TICK: 2592 PC:  46 ADDR:   0 MEM_OUT: 2584 ACC: 2584 LG_ALU: 3925 RG_ALU: 1597 SP: 3925 ZF: 0 |	pop   var
  ALU_RES = SP + 1
  TICK: 2593 PC:  46 ADDR:   0 MEM_OUT: 2584 ACC: 2584 LG_ALU: 3925 RG_ALU: 1597 SP: 3925 ZF: 0 |	pop   var
  ALU_RES -> SP
  TICK: 2594 PC:  46 ADDR:   0 MEM_OUT: 2584 ACC: 2584 LG_ALU: 3925 RG_ALU: 1597 SP: 3926 ZF: 0 |	pop   var
  MEM[ALU] -> ALU_RG
  TICK: 2594 PC:  46 ADDR:   0 MEM_OUT: 2584 ACC: 2584 LG_ALU: 3925 RG_ALU: 2584 SP: 3926 ZF: 0 |	pop   var
  ALU_RES = ALU_RG
  TICK: 2595 PC:  46 ADDR:   0 MEM_OUT: 2584 ACC: 2584 LG_ALU: 3925 RG_ALU: 2584 SP: 3926 ZF: 0 |	pop   var
  ALU_RES -> ACC
  TICK: 2596 PC:  46 ADDR:   0 MEM_OUT: 2584 ACC: 2584 LG_ALU: 3925 RG_ALU: 2584 SP: 3926 ZF: 0 |	pop   var
  ADDR -> ALU_RG
  TICK: 2597 PC:  47 ADDR:   0 MEM_OUT: 2584 ACC: 2584 LG_ALU: 3925 RG_ALU:   6 SP: 3926 ZF: 0 |	store   var
  ALU_RES = ALU_RG
  TICK: 2598 PC:  47 ADDR:   0 MEM_OUT: 2584 ACC: 2584 LG_ALU: 3925 RG_ALU:   6 SP: 3926 ZF: 0 |	store   var
  WRITE ACC -> MEM[ALU]
  TICK: 2599 PC:  47 ADDR:   0 MEM_OUT: 2584 ACC: 2584 LG_ALU: 3925 RG_ALU:   6 SP: 3926 ZF: 0 |	store   var
  NUM -> ALU_RG
  TICK: 2600 PC:  48 ADDR:   0 MEM_OUT: 2584 ACC: 2584 LG_ALU: 3925 RG_ALU:   1 SP: 3926 ZF: 0 |	load   var
  ALU_RES = ALU_RG
  TICK: 2601 PC:  48 ADDR:   0 MEM_OUT: 2584 ACC: 2584 LG_ALU: 3925 RG_ALU:   1 SP: 3926 ZF: 0 |	load   var
  ALU_RES -> ACC
  TICK: 2602 PC:  48 ADDR:   0 MEM_OUT: 2584 ACC: 1 LG_ALU: 3925 RG_ALU:   1 SP: 3926 ZF: 0 |	load   var
  SP -> ALU_LG
  TICK: 2603 PC:  49 ADDR:   0 MEM_OUT: 2584 ACC: 1 LG_ALU: 3926 RG_ALU:   1 SP: 3926 ZF: 0 |	push   var
  ALU_RES = SP - 1
  TICK: 2604 PC:  49 ADDR:   0 MEM_OUT: 2584 ACC: 1 LG_ALU: 3926 RG_ALU:   1 SP: 3926 ZF: 0 |	push   var
  ALU_RES -> SP
  TICK: 2605 PC:  49 ADDR:   0 MEM_OUT: 2584 ACC: 1 LG_ALU: 3926 RG_ALU:   1 SP: 3925 ZF: 0 |	push   var
  WRITE ACC -> MEM[ALU]
  TICK: 2605 PC:  49 ADDR:   0 MEM_OUT: 2584 ACC: 1 LG_ALU: 3926 RG_ALU:   1 SP: 3925 ZF: 0 |	push   var
  ADDR -> ALU_RG
  TICK: 2606 PC:  50 ADDR:   0 MEM_OUT: 2584 ACC: 1 LG_ALU: 3926 RG_ALU:   8 SP: 3925 ZF: 0 |	load   var
  ALU_RES = ALU_RG
  TICK: 2607 PC:  50 ADDR:   0 MEM_OUT: 2584 ACC: 1 LG_ALU: 3926 RG_ALU:   8 SP: 3925 ZF: 0 |	load   var
  READ MEM[ALU]
  TICK: 2608 PC:  50 ADDR:   0 MEM_OUT: 1597 ACC: 1 LG_ALU: 3926 RG_ALU:   8 SP: 3925 ZF: 0 |	load   var
  MEM[ALU] -> ALU_RG
  TICK: 2609 PC:  50 ADDR:   0 MEM_OUT: 1597 ACC: 1 LG_ALU: 3926 RG_ALU: 1597 SP: 3925 ZF: 0 |	load   var
  ALU_RES = ALU_RG
  TICK: 2610 PC:  50 ADDR:   0 MEM_OUT: 1597 ACC: 1 LG_ALU: 3926 RG_ALU: 1597 SP: 3925 ZF: 0 |	load   var
  ALU_RES -> ACC
  TICK: 2611 PC:  50 ADDR:   0 MEM_OUT: 1597 ACC: 1597 LG_ALU: 3926 RG_ALU: 1597 SP: 3925 ZF: 0 |	load   var
  ADDR -> ALU_RG
  TICK: 2612 PC:  51 ADDR:   0 MEM_OUT: 1597 ACC: 1597 LG_ALU: 3926 RG_ALU:   5 SP: 3925 ZF: 0 |	store   var
  ALU_RES = ALU_RG
  TICK: 2613 PC:  51 ADDR:   0 MEM_OUT: 1597 ACC: 1597 LG_ALU: 3926 RG_ALU:   5 SP: 3925 ZF: 0 |	store   var
  WRITE ACC -> MEM[ALU]
  TICK: 2614 PC:  51 ADDR:   0 MEM_OUT: 1597 ACC: 1597 LG_ALU: 3926 RG_ALU:   5 SP: 3925 ZF: 0 |	store   var
  NUM -> ALU_RG
  TICK: 2615 PC:  52 ADDR:   0 MEM_OUT: 1597 ACC: 1597 LG_ALU: 3926 RG_ALU:   1 SP: 3925 ZF: 0 |	load   var
  ALU_RES = ALU_RG
  TICK: 2616 PC:  52 ADDR:   0 MEM_OUT: 1597 ACC: 1597 LG_ALU: 3926 RG_ALU:   1 SP: 3925 ZF: 0 |	load   var
  ALU_RES -> ACC
  TICK: 2617 PC:  52 ADDR:   0 MEM_OUT: 1597 ACC: 1 LG_ALU: 3926 RG_ALU:   1 SP: 3925 ZF: 0 |	load   var
  SP -> ALU_LG
  TICK: 2618 PC:  53 ADDR:   0 MEM_OUT: 1597 ACC: 1 LG_ALU: 3925 RG_ALU:   1 SP: 3925 ZF: 0 |	push   var
  ALU_RES = SP - 1
  TICK: 2619 PC:  53 ADDR:   0 MEM_OUT: 1597 ACC: 1 LG_ALU: 3925 RG_ALU:   1 SP: 3925 ZF: 0 |	push   var
  ALU_RES -> SP
  TICK: 2620 PC:  53 ADDR:   0 MEM_OUT: 1597 ACC: 1 LG_ALU: 3925 RG_ALU:   1 SP: 3924 ZF: 0 |	push   var
  WRITE ACC -> MEM[ALU]
  TICK: 2620 PC:  53 ADDR:   0 MEM_OUT: 1597 ACC: 1 LG_ALU: 3925 RG_ALU:   1 SP: 3924 ZF: 0 |	push   var
  ADDR -> ALU_RG
  TICK: 2621 PC:  54 ADDR:   0 MEM_OUT: 1597 ACC: 1 LG_ALU: 3925 RG_ALU:   6 SP: 3924 ZF: 0 |	load   <
  ALU_RES = ALU_RG
  TICK: 2622 PC:  54 ADDR:   0 MEM_OUT: 1597 ACC: 1 LG_ALU: 3925 RG_ALU:   6 SP: 3924 ZF: 0 |	load   <
  READ MEM[ALU]
  TICK: 2623 PC:  54 ADDR:   0 MEM_OUT: 2584 ACC: 1 LG_ALU: 3925 RG_ALU:   6 SP: 3924 ZF: 0 |	load   <
  MEM[ALU] -> ALU_RG
  TICK: 2624 PC:  54 ADDR:   0 MEM_OUT: 2584 ACC: 1 LG_ALU: 3925 RG_ALU: 2584 SP: 3924 ZF: 0 |	load   <
  ALU_RES = ALU_RG
  TICK: 2625 PC:  54 ADDR:   0 MEM_OUT: 2584 ACC: 1 LG_ALU: 3925 RG_ALU: 2584 SP: 3924 ZF: 0 |	load   <
  ALU_RES -> ACC
  TICK: 2626 PC:  54 ADDR:   0 MEM_OUT: 2584 ACC: 2584 LG_ALU: 3925 RG_ALU: 2584 SP: 3924 ZF: 0 |	load   <
  ADDR -> ALU_RG
  TICK: 2627 PC:  55 ADDR:   0 MEM_OUT: 2584 ACC: 2584 LG_ALU: 3925 RG_ALU:   7 SP: 3924 ZF: 0 |	sub   <
  ALU_RES = ALU_RG
  TICK: 2628 PC:  55 ADDR:   0 MEM_OUT: 2584 ACC: 2584 LG_ALU: 3925 RG_ALU:   7 SP: 3924 ZF: 0 |	sub   <
  READ MEM[ALU]
  TICK: 2629 PC:  55 ADDR:   0 MEM_OUT: 400000 ACC: 2584 LG_ALU: 3925 RG_ALU:   7 SP: 3924 ZF: 0 |	sub   <
  MEM[ALU] -> ALU_RG
  TICK: 2630 PC:  55 ADDR:   0 MEM_OUT: 400000 ACC: 2584 LG_ALU: 3925 RG_ALU: 400000 SP: 3924 ZF: 0 |	sub   <
  ACC -> ALU_LG
  TICK: 2630 PC:  55 ADDR:   0 MEM_OUT: 400000 ACC: 2584 LG_ALU: 2584 RG_ALU: 400000 SP: 3924 ZF: 0 |	sub   <
  ALU_RES = ALU_LG + ALU_RG
  TICK: 2631 PC:  55 ADDR:   0 MEM_OUT: 400000 ACC: 2584 LG_ALU: 2584 RG_ALU: 400000 SP: 3924 ZF: 0 |	sub   <
  ALU_RES -> ACC
  TICK: 2632 PC:  55 ADDR:   0 MEM_OUT: 400000 ACC: -397416 LG_ALU: 2584 RG_ALU: 400000 SP: 3924 ZF: 0 |	sub   <
  PC + 1 -> PC
  NUM -> ALU_RG
  TICK: 2633 PC:  57 ADDR:   0 MEM_OUT: 400000 ACC: -397416 LG_ALU: 2584 RG_ALU:   1 SP: 3924 ZF: 0 |	load   <
  ALU_RES = ALU_RG
  TICK: 2634 PC:  57 ADDR:   0 MEM_OUT: 400000 ACC: -397416 LG_ALU: 2584 RG_ALU:   1 SP: 3924 ZF: 0 |	load   <
  ALU_RES -> ACC
  TICK: 2635 PC:  57 ADDR:   0 MEM_OUT: 400000 ACC: 1 LG_ALU: 2584 RG_ALU:   1 SP: 3924 ZF: 0 |	load   <
  ADDR -> PC
  SP -> ALU_LG
  TICK: 2637 PC:  60 ADDR:   0 MEM_OUT: 400000 ACC: 1 LG_ALU: 3924 RG_ALU:   1 SP: 3924 ZF: 0 |	push   <
  ALU_RES = SP - 1
  TICK: 2638 PC:  60 ADDR:   0 MEM_OUT: 400000 ACC: 1 LG_ALU: 3924 RG_ALU:   1 SP: 3924 ZF: 0 |	push   <
  ALU_RES -> SP
  TICK: 2639 PC:  60 ADDR:   0 MEM_OUT: 400000 ACC: 1 LG_ALU: 3924 RG_ALU:   1 SP: 3923 ZF: 0 |	push   <
  WRITE ACC -> MEM[ALU]
  TICK: 2639 PC:  60 ADDR:   0 MEM_OUT: 400000 ACC: 1 LG_ALU: 3924 RG_ALU:   1 SP: 3923 ZF: 0 |	push   <
  SP -> ALU_LG
  TICK: 2640 PC:  61 ADDR:   0 MEM_OUT: 400000 ACC: 1 LG_ALU: 3923 RG_ALU:   1 SP: 3923 ZF: 0 |	pop
  ALU_RES = ALU_LG
  TICK: 2641 PC:  61 ADDR:   0 MEM_OUT: 400000 ACC: 1 LG_ALU: 3923 RG_ALU:   1 SP: 3923 ZF: 0 |	pop
  READ MEM[ALU]
  TICK: 2642 PC:  61 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3923 RG_ALU:   1 SP: 3923 ZF: 0 |	pop
  ALU_RES = SP + 1
  TICK: 2643 PC:  61 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3923 RG_ALU:   1 SP: 3923 ZF: 0 |	pop
  ALU_RES -> SP
  TICK: 2644 PC:  61 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3923 RG_ALU:   1 SP: 3924 ZF: 0 |	pop
  MEM[ALU] -> ALU_RG
  TICK: 2644 PC:  61 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3923 RG_ALU:   1 SP: 3924 ZF: 0 |	pop
  ALU_RES = ALU_RG
  TICK: 2645 PC:  61 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3923 RG_ALU:   1 SP: 3924 ZF: 0 |	pop
  ALU_RES -> ACC
  TICK: 2646 PC:  61 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3923 RG_ALU:   1 SP: 3924 ZF: 0 |	pop
  ADDR -> PC
  ADDR -> PC
  ADDR -> ALU_RG
  TICK: 2649 PC:  24 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3923 RG_ALU:   6 SP: 3924 ZF: 0 |	load
  ALU_RES = ALU_RG
  TICK: 2650 PC:  24 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3923 RG_ALU:   6 SP: 3924 ZF: 0 |	load
  READ MEM[ALU]
  TICK: 2651 PC:  24 ADDR:   0 MEM_OUT: 2584 ACC: 1 LG_ALU: 3923 RG_ALU:   6 SP: 3924 ZF: 0 |	load
  MEM[ALU] -> ALU_RG
  TICK: 2652 PC:  24 ADDR:   0 MEM_OUT: 2584 ACC: 1 LG_ALU: 3923 RG_ALU: 2584 SP: 3924 ZF: 0 |	load
  ALU_RES = ALU_RG
  TICK: 2653 PC:  24 ADDR:   0 MEM_OUT: 2584 ACC: 1 LG_ALU: 3923 RG_ALU: 2584 SP: 3924 ZF: 0 |	load
  ALU_RES -> ACC
  TICK: 2654 PC:  24 ADDR:   0 MEM_OUT: 2584 ACC: 2584 LG_ALU: 3923 RG_ALU: 2584 SP: 3924 ZF: 0 |	load
  NUM -> ALU_RG
  TICK: 2655 PC:  25 ADDR:   0 MEM_OUT: 2584 ACC: 2584 LG_ALU: 3923 RG_ALU:   2 SP: 3924 ZF: 0 |	mod
  ACC -> ALU_LG
  TICK: 2655 PC:  25 ADDR:   0 MEM_OUT: 2584 ACC: 2584 LG_ALU: 2584 RG_ALU:   2 SP: 3924 ZF: 0 |	mod
  ALU_RES = ALU_LG % ALU_RG
  TICK: 2656 PC:  25 ADDR:   0 MEM_OUT: 2584 ACC: 2584 LG_ALU: 2584 RG_ALU:   2 SP: 3924 ZF: 1 |	mod
  ALU_RES -> ACC
  TICK: 2657 PC:  25 ADDR:   0 MEM_OUT: 2584 ACC: 0 LG_ALU: 2584 RG_ALU:   2 SP: 3924 ZF: 1 |	mod
  SP -> ALU_LG
  TICK: 2658 PC:  26 ADDR:   0 MEM_OUT: 2584 ACC: 0 LG_ALU: 3924 RG_ALU:   2 SP: 3924 ZF: 1 |	push
  ALU_RES = SP - 1
  TICK: 2659 PC:  26 ADDR:   0 MEM_OUT: 2584 ACC: 0 LG_ALU: 3924 RG_ALU:   2 SP: 3924 ZF: 0 |	push
  ALU_RES -> SP
  TICK: 2660 PC:  26 ADDR:   0 MEM_OUT: 2584 ACC: 0 LG_ALU: 3924 RG_ALU:   2 SP: 3923 ZF: 0 |	push
  WRITE ACC -> MEM[ALU]
  TICK: 2660 PC:  26 ADDR:   0 MEM_OUT: 2584 ACC: 0 LG_ALU: 3924 RG_ALU:   2 SP: 3923 ZF: 0 |	push
  NUM -> ALU_RG
  TICK: 2661 PC:  27 ADDR:   0 MEM_OUT: 2584 ACC: 0 LG_ALU: 3924 RG_ALU:   0 SP: 3923 ZF: 0 |	load   =
  ALU_RES = ALU_RG
  TICK: 2662 PC:  27 ADDR:   0 MEM_OUT: 2584 ACC: 0 LG_ALU: 3924 RG_ALU:   0 SP: 3923 ZF: 1 |	load   =
  ALU_RES -> ACC
  TICK: 2663 PC:  27 ADDR:   0 MEM_OUT: 2584 ACC: 0 LG_ALU: 3924 RG_ALU:   0 SP: 3923 ZF: 1 |	load   =
  SP -> ALU_LG
  TICK: 2664 PC:  28 ADDR:   0 MEM_OUT: 2584 ACC: 0 LG_ALU: 3923 RG_ALU:   0 SP: 3923 ZF: 1 |	sub   =
  ALU_RES = ALU_LG
  TICK: 2665 PC:  28 ADDR:   0 MEM_OUT: 2584 ACC: 0 LG_ALU: 3923 RG_ALU:   0 SP: 3923 ZF: 0 |	sub   =
  READ MEM[ALU]
  TICK: 2666 PC:  28 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3923 RG_ALU:   0 SP: 3923 ZF: 0 |	sub   =
  MEM[ALU] -> ALU_RG
  TICK: 2667 PC:  28 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3923 RG_ALU:   0 SP: 3923 ZF: 0 |	sub   =
  ALU_RES = SP + 1
  TICK: 2668 PC:  28 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3923 RG_ALU:   0 SP: 3923 ZF: 0 |	sub   =
  ALU_RES -> SP
  TICK: 2669 PC:  28 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3923 RG_ALU:   0 SP: 3924 ZF: 0 |	sub   =
  ACC -> ALU_LG
  TICK: 2669 PC:  28 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU:   0 RG_ALU:   0 SP: 3924 ZF: 0 |	sub   =
  ALU_RES = ALU_LG + ALU_RG
  TICK: 2670 PC:  28 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU:   0 RG_ALU:   0 SP: 3924 ZF: 1 |	sub   =
  ALU_RES -> ACC
  TICK: 2671 PC:  28 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU:   0 RG_ALU:   0 SP: 3924 ZF: 1 |	sub   =
  PC + 1 -> PC
  NUM -> ALU_RG
  TICK: 2672 PC:  30 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU:   0 RG_ALU:   1 SP: 3924 ZF: 1 |	load   =
  ALU_RES = ALU_RG
  TICK: 2673 PC:  30 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU:   0 RG_ALU:   1 SP: 3924 ZF: 0 |	load   =
  ALU_RES -> ACC
  TICK: 2674 PC:  30 ADDR:   0 MEM_OUT: 0 ACC: 1 LG_ALU:   0 RG_ALU:   1 SP: 3924 ZF: 0 |	load   =
  ADDR -> PC
  SP -> ALU_LG
  TICK: 2676 PC:  33 ADDR:   0 MEM_OUT: 0 ACC: 1 LG_ALU: 3924 RG_ALU:   1 SP: 3924 ZF: 0 |	push   =
  ALU_RES = SP - 1
  TICK: 2677 PC:  33 ADDR:   0 MEM_OUT: 0 ACC: 1 LG_ALU: 3924 RG_ALU:   1 SP: 3924 ZF: 0 |	push   =
  ALU_RES -> SP
  TICK: 2678 PC:  33 ADDR:   0 MEM_OUT: 0 ACC: 1 LG_ALU: 3924 RG_ALU:   1 SP: 3923 ZF: 0 |	push   =
  WRITE ACC -> MEM[ALU]
  TICK: 2678 PC:  33 ADDR:   0 MEM_OUT: 0 ACC: 1 LG_ALU: 3924 RG_ALU:   1 SP: 3923 ZF: 0 |	push   =
  SP -> ALU_LG
  TICK: 2679 PC:  34 ADDR:   0 MEM_OUT: 0 ACC: 1 LG_ALU: 3923 RG_ALU:   1 SP: 3923 ZF: 0 |	pop   if
  ALU_RES = ALU_LG
  TICK: 2680 PC:  34 ADDR:   0 MEM_OUT: 0 ACC: 1 LG_ALU: 3923 RG_ALU:   1 SP: 3923 ZF: 0 |	pop   if
  READ MEM[ALU]
  TICK: 2681 PC:  34 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3923 RG_ALU:   1 SP: 3923 ZF: 0 |	pop   if
  ALU_RES = SP + 1
  TICK: 2682 PC:  34 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3923 RG_ALU:   1 SP: 3923 ZF: 0 |	pop   if
  ALU_RES -> SP
  TICK: 2683 PC:  34 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3923 RG_ALU:   1 SP: 3924 ZF: 0 |	pop   if
  MEM[ALU] -> ALU_RG
  TICK: 2683 PC:  34 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3923 RG_ALU:   1 SP: 3924 ZF: 0 |	pop   if
  ALU_RES = ALU_RG
  TICK: 2684 PC:  34 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3923 RG_ALU:   1 SP: 3924 ZF: 0 |	pop   if
  ALU_RES -> ACC
  TICK: 2685 PC:  34 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3923 RG_ALU:   1 SP: 3924 ZF: 0 |	pop   if
  ADDR -> PC
  ADDR -> ALU_RG
  TICK: 2687 PC:   7 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3923 RG_ALU:   6 SP: 3924 ZF: 0 |	load   print
  ALU_RES = ALU_RG
  TICK: 2688 PC:   7 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3923 RG_ALU:   6 SP: 3924 ZF: 0 |	load   print
  READ MEM[ALU]
  TICK: 2689 PC:   7 ADDR:   0 MEM_OUT: 2584 ACC: 1 LG_ALU: 3923 RG_ALU:   6 SP: 3924 ZF: 0 |	load   print
  MEM[ALU] -> ALU_RG
  TICK: 2690 PC:   7 ADDR:   0 MEM_OUT: 2584 ACC: 1 LG_ALU: 3923 RG_ALU: 2584 SP: 3924 ZF: 0 |	load   print
  ALU_RES = ALU_RG
  TICK: 2691 PC:   7 ADDR:   0 MEM_OUT: 2584 ACC: 1 LG_ALU: 3923 RG_ALU: 2584 SP: 3924 ZF: 0 |	load   print
  ALU_RES -> ACC
  TICK: 2692 PC:   7 ADDR:   0 MEM_OUT: 2584 ACC: 2584 LG_ALU: 3923 RG_ALU: 2584 SP: 3924 ZF: 0 |	load   print
  get IO module port
  TICK: 2693 PC:   8 ADDR:   0 MEM_OUT: 2584 ACC: 2584 LG_ALU: 3923 RG_ALU: 2584 SP: 3924 ZF: 0 |	output   print
  ACC -> OUTPUT 
  TICK: 2694 PC:   8 ADDR:   0 MEM_OUT: 2584 ACC: 2584 LG_ALU: 3923 RG_ALU: 2584 SP: 3924 ZF: 0 |	output   print
  NUM -> ALU_RG
  TICK: 2695 PC:   9 ADDR:   0 MEM_OUT: 2584 ACC: 2584 LG_ALU: 3923 RG_ALU:   1 SP: 3924 ZF: 0 |	load   print
  ALU_RES = ALU_RG
  TICK: 2696 PC:   9 ADDR:   0 MEM_OUT: 2584 ACC: 2584 LG_ALU: 3923 RG_ALU:   1 SP: 3924 ZF: 0 |	load   print
  ALU_RES -> ACC
  TICK: 2697 PC:   9 ADDR:   0 MEM_OUT: 2584 ACC: 1 LG_ALU: 3923 RG_ALU:   1 SP: 3924 ZF: 0 |	load   print
  SP -> ALU_LG
  TICK: 2698 PC:  10 ADDR:   0 MEM_OUT: 2584 ACC: 1 LG_ALU: 3924 RG_ALU:   1 SP: 3924 ZF: 0 |	push   print
  ALU_RES = SP - 1
  TICK: 2699 PC:  10 ADDR:   0 MEM_OUT: 2584 ACC: 1 LG_ALU: 3924 RG_ALU:   1 SP: 3924 ZF: 0 |	push   print
  ALU_RES -> SP
  TICK: 2700 PC:  10 ADDR:   0 MEM_OUT: 2584 ACC: 1 LG_ALU: 3924 RG_ALU:   1 SP: 3923 ZF: 0 |	push   print
  WRITE ACC -> MEM[ALU]
  TICK: 2700 PC:  10 ADDR:   0 MEM_OUT: 2584 ACC: 1 LG_ALU: 3924 RG_ALU:   1 SP: 3923 ZF: 0 |	push   print
  NUM -> ALU_RG
  TICK: 2701 PC:  11 ADDR:   0 MEM_OUT: 2584 ACC: 1 LG_ALU: 3924 RG_ALU:  95 SP: 3923 ZF: 0 |	load   print
  ALU_RES = ALU_RG
  TICK: 2702 PC:  11 ADDR:   0 MEM_OUT: 2584 ACC: 1 LG_ALU: 3924 RG_ALU:  95 SP: 3923 ZF: 0 |	load   print
  ALU_RES -> ACC
  TICK: 2703 PC:  11 ADDR:   0 MEM_OUT: 2584 ACC: 95 LG_ALU: 3924 RG_ALU:  95 SP: 3923 ZF: 0 |	load   print
  get IO module port
  TICK: 2704 PC:  12 ADDR:   0 MEM_OUT: 2584 ACC: 95 LG_ALU: 3924 RG_ALU:  95 SP: 3923 ZF: 0 |	output   print
  ACC -> OUTPUT 
  TICK: 2705 PC:  12 ADDR:   0 MEM_OUT: 2584 ACC: 95 LG_ALU: 3924 RG_ALU:  95 SP: 3923 ZF: 0 |	output   print
  NUM -> ALU_RG
  TICK: 2706 PC:  13 ADDR:   0 MEM_OUT: 2584 ACC: 95 LG_ALU: 3924 RG_ALU:   0 SP: 3923 ZF: 0 |	load   print
  ALU_RES = ALU_RG
  TICK: 2707 PC:  13 ADDR:   0 MEM_OUT: 2584 ACC: 95 LG_ALU: 3924 RG_ALU:   0 SP: 3923 ZF: 1 |	load   print
  ALU_RES -> ACC
  TICK: 2708 PC:  13 ADDR:   0 MEM_OUT: 2584 ACC: 0 LG_ALU: 3924 RG_ALU:   0 SP: 3923 ZF: 1 |	load   print
  get IO module port
  TICK: 2709 PC:  14 ADDR:   0 MEM_OUT: 2584 ACC: 0 LG_ALU: 3924 RG_ALU:   0 SP: 3923 ZF: 1 |	output   print
  ACC -> OUTPUT 
  TICK: 2710 PC:  14 ADDR:   0 MEM_OUT: 2584 ACC: 0 LG_ALU: 3924 RG_ALU:   0 SP: 3923 ZF: 1 |	output   print
  NUM -> ALU_RG
  TICK: 2711 PC:  15 ADDR:   0 MEM_OUT: 2584 ACC: 0 LG_ALU: 3924 RG_ALU:   0 SP: 3923 ZF: 1 |	load   print
  ALU_RES = ALU_RG
  TICK: 2712 PC:  15 ADDR:   0 MEM_OUT: 2584 ACC: 0 LG_ALU: 3924 RG_ALU:   0 SP: 3923 ZF: 1 |	load   print
  ALU_RES -> ACC
  TICK: 2713 PC:  15 ADDR:   0 MEM_OUT: 2584 ACC: 0 LG_ALU: 3924 RG_ALU:   0 SP: 3923 ZF: 1 |	load   print
  get IO module port
  TICK: 2714 PC:  16 ADDR:   0 MEM_OUT: 2584 ACC: 0 LG_ALU: 3924 RG_ALU:   0 SP: 3923 ZF: 1 |	output   print
  ACC -> OUTPUT 
  TICK: 2715 PC:  16 ADDR:   0 MEM_OUT: 2584 ACC: 0 LG_ALU: 3924 RG_ALU:   0 SP: 3923 ZF: 1 |	output   print
  NUM -> ALU_RG
  TICK: 2716 PC:  17 ADDR:   0 MEM_OUT: 2584 ACC: 0 LG_ALU: 3924 RG_ALU:   1 SP: 3923 ZF: 1 |	load   print
  ALU_RES = ALU_RG
  TICK: 2717 PC:  17 ADDR:   0 MEM_OUT: 2584 ACC: 0 LG_ALU: 3924 RG_ALU:   1 SP: 3923 ZF: 0 |	load   print
  ALU_RES -> ACC
  TICK: 2718 PC:  17 ADDR:   0 MEM_OUT: 2584 ACC: 1 LG_ALU: 3924 RG_ALU:   1 SP: 3923 ZF: 0 |	load   print
  SP -> ALU_LG
  TICK: 2719 PC:  18 ADDR:   0 MEM_OUT: 2584 ACC: 1 LG_ALU: 3923 RG_ALU:   1 SP: 3923 ZF: 0 |	push   print
  ALU_RES = SP - 1
  TICK: 2720 PC:  18 ADDR:   0 MEM_OUT: 2584 ACC: 1 LG_ALU: 3923 RG_ALU:   1 SP: 3923 ZF: 0 |	push   print
  ALU_RES -> SP
  TICK: 2721 PC:  18 ADDR:   0 MEM_OUT: 2584 ACC: 1 LG_ALU: 3923 RG_ALU:   1 SP: 3922 ZF: 0 |	push   print
  WRITE ACC -> MEM[ALU]
  TICK: 2721 PC:  18 ADDR:   0 MEM_OUT: 2584 ACC: 1 LG_ALU: 3923 RG_ALU:   1 SP: 3922 ZF: 0 |	push   print
  ADDR -> PC
  SP -> ALU_LG
  TICK: 2723 PC:  37 ADDR:   0 MEM_OUT: 2584 ACC: 1 LG_ALU: 3922 RG_ALU:   1 SP: 3922 ZF: 0 |	pop   if
  ALU_RES = ALU_LG
  TICK: 2724 PC:  37 ADDR:   0 MEM_OUT: 2584 ACC: 1 LG_ALU: 3922 RG_ALU:   1 SP: 3922 ZF: 0 |	pop   if
  READ MEM[ALU]
  TICK: 2725 PC:  37 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3922 RG_ALU:   1 SP: 3922 ZF: 0 |	pop   if
  ALU_RES = SP + 1
  TICK: 2726 PC:  37 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3922 RG_ALU:   1 SP: 3922 ZF: 0 |	pop   if
  ALU_RES -> SP
  TICK: 2727 PC:  37 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3922 RG_ALU:   1 SP: 3923 ZF: 0 |	pop   if
  MEM[ALU] -> ALU_RG
  TICK: 2727 PC:  37 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3922 RG_ALU:   1 SP: 3923 ZF: 0 |	pop   if
  ALU_RES = ALU_RG
  TICK: 2728 PC:  37 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3922 RG_ALU:   1 SP: 3923 ZF: 0 |	pop   if
  ALU_RES -> ACC
  TICK: 2729 PC:  37 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3922 RG_ALU:   1 SP: 3923 ZF: 0 |	pop   if
  SP -> ALU_LG
  TICK: 2730 PC:  38 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3923 RG_ALU:   1 SP: 3923 ZF: 0 |	push   if
  ALU_RES = SP - 1
  TICK: 2731 PC:  38 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3923 RG_ALU:   1 SP: 3923 ZF: 0 |	push   if
  ALU_RES -> SP
  TICK: 2732 PC:  38 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3923 RG_ALU:   1 SP: 3922 ZF: 0 |	push   if
  WRITE ACC -> MEM[ALU]
  TICK: 2732 PC:  38 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3923 RG_ALU:   1 SP: 3922 ZF: 0 |	push   if
  ADDR -> ALU_RG
  TICK: 2733 PC:  39 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3923 RG_ALU:   6 SP: 3922 ZF: 0 |	load   var
  ALU_RES = ALU_RG
  TICK: 2734 PC:  39 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3923 RG_ALU:   6 SP: 3922 ZF: 0 |	load   var
  READ MEM[ALU]
  TICK: 2735 PC:  39 ADDR:   0 MEM_OUT: 2584 ACC: 1 LG_ALU: 3923 RG_ALU:   6 SP: 3922 ZF: 0 |	load   var
  MEM[ALU] -> ALU_RG
  TICK: 2736 PC:  39 ADDR:   0 MEM_OUT: 2584 ACC: 1 LG_ALU: 3923 RG_ALU: 2584 SP: 3922 ZF: 0 |	load   var
  ALU_RES = ALU_RG
  TICK: 2737 PC:  39 ADDR:   0 MEM_OUT: 2584 ACC: 1 LG_ALU: 3923 RG_ALU: 2584 SP: 3922 ZF: 0 |	load   var
  ALU_RES -> ACC
  TICK: 2738 PC:  39 ADDR:   0 MEM_OUT: 2584 ACC: 2584 LG_ALU: 3923 RG_ALU: 2584 SP: 3922 ZF: 0 |	load   var
  ADDR -> ALU_RG
  TICK: 2739 PC:  40 ADDR:   0 MEM_OUT: 2584 ACC: 2584 LG_ALU: 3923 RG_ALU:   8 SP: 3922 ZF: 0 |	store   var
  ALU_RES = ALU_RG
  TICK: 2740 PC:  40 ADDR:   0 MEM_OUT: 2584 ACC: 2584 LG_ALU: 3923 RG_ALU:   8 SP: 3922 ZF: 0 |	store   var
  WRITE ACC -> MEM[ALU]
  TICK: 2741 PC:  40 ADDR:   0 MEM_OUT: 2584 ACC: 2584 LG_ALU: 3923 RG_ALU:   8 SP: 3922 ZF: 0 |	store   var
  NUM -> ALU_RG
  TICK: 2742 PC:  41 ADDR:   0 MEM_OUT: 2584 ACC: 2584 LG_ALU: 3923 RG_ALU:   1 SP: 3922 ZF: 0 |	load   var
  ALU_RES = ALU_RG
  TICK: 2743 PC:  41 ADDR:   0 MEM_OUT: 2584 ACC: 2584 LG_ALU: 3923 RG_ALU:   1 SP: 3922 ZF: 0 |	load   var
  ALU_RES -> ACC
  TICK: 2744 PC:  41 ADDR:   0 MEM_OUT: 2584 ACC: 1 LG_ALU: 3923 RG_ALU:   1 SP: 3922 ZF: 0 |	load   var
  SP -> ALU_LG
  TICK: 2745 PC:  42 ADDR:   0 MEM_OUT: 2584 ACC: 1 LG_ALU: 3922 RG_ALU:   1 SP: 3922 ZF: 0 |	push   var
  ALU_RES = SP - 1
  TICK: 2746 PC:  42 ADDR:   0 MEM_OUT: 2584 ACC: 1 LG_ALU: 3922 RG_ALU:   1 SP: 3922 ZF: 0 |	push   var
  ALU_RES -> SP
  TICK: 2747 PC:  42 ADDR:   0 MEM_OUT: 2584 ACC: 1 LG_ALU: 3922 RG_ALU:   1 SP: 3921 ZF: 0 |	push   var
  WRITE ACC -> MEM[ALU]
  TICK: 2747 PC:  42 ADDR:   0 MEM_OUT: 2584 ACC: 1 LG_ALU: 3922 RG_ALU:   1 SP: 3921 ZF: 0 |	push   var
  ADDR -> ALU_RG
  TICK: 2748 PC:  43 ADDR:   0 MEM_OUT: 2584 ACC: 1 LG_ALU: 3922 RG_ALU:   5 SP: 3921 ZF: 0 |	load   +
  ALU_RES = ALU_RG
  TICK: 2749 PC:  43 ADDR:   0 MEM_OUT: 2584 ACC: 1 LG_ALU: 3922 RG_ALU:   5 SP: 3921 ZF: 0 |	load   +
  READ MEM[ALU]
  TICK: 2750 PC:  43 ADDR:   0 MEM_OUT: 1597 ACC: 1 LG_ALU: 3922 RG_ALU:   5 SP: 3921 ZF: 0 |	load   +
  MEM[ALU] -> ALU_RG
  TICK: 2751 PC:  43 ADDR:   0 MEM_OUT: 1597 ACC: 1 LG_ALU: 3922 RG_ALU: 1597 SP: 3921 ZF: 0 |	load   +
  ALU_RES = ALU_RG
  TICK: 2752 PC:  43 ADDR:   0 MEM_OUT: 1597 ACC: 1 LG_ALU: 3922 RG_ALU: 1597 SP: 3921 ZF: 0 |	load   +
  ALU_RES -> ACC
  TICK: 2753 PC:  43 ADDR:   0 MEM_OUT: 1597 ACC: 1597 LG_ALU: 3922 RG_ALU: 1597 SP: 3921 ZF: 0 |	load   +
  ADDR -> ALU_RG
  TICK: 2754 PC:  44 ADDR:   0 MEM_OUT: 1597 ACC: 1597 LG_ALU: 3922 RG_ALU:   6 SP: 3921 ZF: 0 |	add   +
  ALU_RES = ALU_RG
  TICK: 2755 PC:  44 ADDR:   0 MEM_OUT: 1597 ACC: 1597 LG_ALU: 3922 RG_ALU:   6 SP: 3921 ZF: 0 |	add   +
  READ MEM[ALU]
  TICK: 2756 PC:  44 ADDR:   0 MEM_OUT: 2584 ACC: 1597 LG_ALU: 3922 RG_ALU:   6 SP: 3921 ZF: 0 |	add   +
  MEM[ALU] -> ALU_RG
  TICK: 2757 PC:  44 ADDR:   0 MEM_OUT: 2584 ACC: 1597 LG_ALU: 3922 RG_ALU: 2584 SP: 3921 ZF: 0 |	add   +
  ACC -> ALU_LG
  TICK: 2757 PC:  44 ADDR:   0 MEM_OUT: 2584 ACC: 1597 LG_ALU: 1597 RG_ALU: 2584 SP: 3921 ZF: 0 |	add   +
  ALU_RES = ALU_LG + ALU_RG
  TICK: 2758 PC:  44 ADDR:   0 MEM_OUT: 2584 ACC: 1597 LG_ALU: 1597 RG_ALU: 2584 SP: 3921 ZF: 0 |	add   +
  ALU_RES -> ACC
  TICK: 2759 PC:  44 ADDR:   0 MEM_OUT: 2584 ACC: 4181 LG_ALU: 1597 RG_ALU: 2584 SP: 3921 ZF: 0 |	add   +
  SP -> ALU_LG
  TICK: 2760 PC:  45 ADDR:   0 MEM_OUT: 2584 ACC: 4181 LG_ALU: 3921 RG_ALU: 2584 SP: 3921 ZF: 0 |	push   +
  ALU_RES = SP - 1
  TICK: 2761 PC:  45 ADDR:   0 MEM_OUT: 2584 ACC: 4181 LG_ALU: 3921 RG_ALU: 2584 SP: 3921 ZF: 0 |	push   +
  ALU_RES -> SP
  TICK: 2762 PC:  45 ADDR:   0 MEM_OUT: 2584 ACC: 4181 LG_ALU: 3921 RG_ALU: 2584 SP: 3920 ZF: 0 |	push   +
  WRITE ACC -> MEM[ALU]
  TICK: 2762 PC:  45 ADDR:   0 MEM_OUT: 2584 ACC: 4181 LG_ALU: 3921 RG_ALU: 2584 SP: 3920 ZF: 0 |	push   +
  SP -> ALU_LG
  TICK: 2763 PC:  46 ADDR:   0 MEM_OUT: 2584 ACC: 4181 LG_ALU: 3920 RG_ALU: 2584 SP: 3920 ZF: 0 |	pop   var
  ALU_RES = ALU_LG
  TICK: 2764 PC:  46 ADDR:   0 MEM_OUT: 2584 ACC: 4181 LG_ALU: 3920 RG_ALU: 2584 SP: 3920 ZF: 0 |	pop   var
  READ MEM[ALU]
  TICK: 2765 PC:  46 ADDR:   0 MEM_OUT: 4181 ACC: 4181 LG_ALU: 3920 RG_ALU: 2584 SP: 3920 ZF: 0 |	pop   var
  ALU_RES = SP + 1
  TICK: 2766 PC:  46 ADDR:   0 MEM_OUT: 4181 ACC: 4181 LG_ALU: 3920 RG_ALU: 2584 SP: 3920 ZF: 0 |	pop   var
  ALU_RES -> SP
  TICK: 2767 PC:  46 ADDR:   0 MEM_OUT: 4181 ACC: 4181 LG_ALU: 3920 RG_ALU: 2584 SP: 3921 ZF: 0 |	pop   var
  MEM[ALU] -> ALU_RG
  TICK: 2767 PC:  46 ADDR:   0 MEM_OUT: 4181 ACC: 4181 LG_ALU: 3920 RG_ALU: 4181 SP: 3921 ZF: 0 |	pop   var
  ALU_RES = ALU_RG
  TICK: 2768 PC:  46 ADDR:   0 MEM_OUT: 4181 ACC: 4181 LG_ALU: 3920 RG_ALU: 4181 SP: 3921 ZF: 0 |	pop   var
  ALU_RES -> ACC
  TICK: 2769 PC:  46 ADDR:   0 MEM_OUT: 4181 ACC: 4181 LG_ALU: 3920 RG_ALU: 4181 SP: 3921 ZF: 0 |	pop   var
  ADDR -> ALU_RG
  TICK: 2770 PC:  47 ADDR:   0 MEM_OUT: 4181 ACC: 4181 LG_ALU: 3920 RG_ALU:   6 SP: 3921 ZF: 0 |	store   var
  ALU_RES = ALU_RG
  TICK: 2771 PC:  47 ADDR:   0 MEM_OUT: 4181 ACC: 4181 LG_ALU: 3920 RG_ALU:   6 SP: 3921 ZF: 0 |	store   var
  WRITE ACC -> MEM[ALU]
  TICK: 2772 PC:  47 ADDR:   0 MEM_OUT: 4181 ACC: 4181 LG_ALU: 3920 RG_ALU:   6 SP: 3921 ZF: 0 |	store   var
  NUM -> ALU_RG
  TICK: 2773 PC:  48 ADDR:   0 MEM_OUT: 4181 ACC: 4181 LG_ALU: 3920 RG_ALU:   1 SP: 3921 ZF: 0 |	load   var
  ALU_RES = ALU_RG
  TICK: 2774 PC:  48 ADDR:   0 MEM_OUT: 4181 ACC: 4181 LG_ALU: 3920 RG_ALU:   1 SP: 3921 ZF: 0 |	load   var
  ALU_RES -> ACC
  TICK: 2775 PC:  48 ADDR:   0 MEM_OUT: 4181 ACC: 1 LG_ALU: 3920 RG_ALU:   1 SP: 3921 ZF: 0 |	load   var
  SP -> ALU_LG
  TICK: 2776 PC:  49 ADDR:   0 MEM_OUT: 4181 ACC: 1 LG_ALU: 3921 RG_ALU:   1 SP: 3921 ZF: 0 |	push   var
  ALU_RES = SP - 1
  TICK: 2777 PC:  49 ADDR:   0 MEM_OUT: 4181 ACC: 1 LG_ALU: 3921 RG_ALU:   1 SP: 3921 ZF: 0 |	push   var
  ALU_RES -> SP
  TICK: 2778 PC:  49 ADDR:   0 MEM_OUT: 4181 ACC: 1 LG_ALU: 3921 RG_ALU:   1 SP: 3920 ZF: 0 |	push   var
  WRITE ACC -> MEM[ALU]
  TICK: 2778 PC:  49 ADDR:   0 MEM_OUT: 4181 ACC: 1 LG_ALU: 3921 RG_ALU:   1 SP: 3920 ZF: 0 |	push   var
  ADDR -> ALU_RG
  TICK: 2779 PC:  50 ADDR:   0 MEM_OUT: 4181 ACC: 1 LG_ALU: 3921 RG_ALU:   8 SP: 3920 ZF: 0 |	load   var
  ALU_RES = ALU_RG
  TICK: 2780 PC:  50 ADDR:   0 MEM_OUT: 4181 ACC: 1 LG_ALU: 3921 RG_ALU:   8 SP: 3920 ZF: 0 |	load   var
  READ MEM[ALU]
  TICK: 2781 PC:  50 ADDR:   0 MEM_OUT: 2584 ACC: 1 LG_ALU: 3921 RG_ALU:   8 SP: 3920 ZF: 0 |	load   var
  MEM[ALU] -> ALU_RG
  TICK: 2782 PC:  50 ADDR:   0 MEM_OUT: 2584 ACC: 1 LG_ALU: 3921 RG_ALU: 2584 SP: 3920 ZF: 0 |	load   var
  ALU_RES = ALU_RG
  TICK: 2783 PC:  50 ADDR:   0 MEM_OUT: 2584 ACC: 1 LG_ALU: 3921 RG_ALU: 2584 SP: 3920 ZF: 0 |	load   var
  ALU_RES -> ACC
  TICK: 2784 PC:  50 ADDR:   0 MEM_OUT: 2584 ACC: 2584 LG_ALU: 3921 RG_ALU: 2584 SP: 3920 ZF: 0 |	load   var
  ADDR -> ALU_RG
  TICK: 2785 PC:  51 ADDR:   0 MEM_OUT: 2584 ACC: 2584 LG_ALU: 3921 RG_ALU:   5 SP: 3920 ZF: 0 |	store   var
  ALU_RES = ALU_RG
  TICK: 2786 PC:  51 ADDR:   0 MEM_OUT: 2584 ACC: 2584 LG_ALU: 3921 RG_ALU:   5 SP: 3920 ZF: 0 |	store   var
  WRITE ACC -> MEM[ALU]
  TICK: 2787 PC:  51 ADDR:   0 MEM_OUT: 2584 ACC: 2584 LG_ALU: 3921 RG_ALU:   5 SP: 3920 ZF: 0 |	store   var
  NUM -> ALU_RG
  TICK: 2788 PC:  52 ADDR:   0 MEM_OUT: 2584 ACC: 2584 LG_ALU: 3921 RG_ALU:   1 SP: 3920 ZF: 0 |	load   var
  ALU_RES = ALU_RG
  TICK: 2789 PC:  52 ADDR:   0 MEM_OUT: 2584 ACC: 2584 LG_ALU: 3921 RG_ALU:   1 SP: 3920 ZF: 0 |	load   var
  ALU_RES -> ACC
  TICK: 2790 PC:  52 ADDR:   0 MEM_OUT: 2584 ACC: 1 LG_ALU: 3921 RG_ALU:   1 SP: 3920 ZF: 0 |	load   var
  SP -> ALU_LG
  TICK: 2791 PC:  53 ADDR:   0 MEM_OUT: 2584 ACC: 1 LG_ALU: 3920 RG_ALU:   1 SP: 3920 ZF: 0 |	push   var
  ALU_RES = SP - 1
  TICK: 2792 PC:  53 ADDR:   0 MEM_OUT: 2584 ACC: 1 LG_ALU: 3920 RG_ALU:   1 SP: 3920 ZF: 0 |	push   var
  ALU_RES -> SP
  TICK: 2793 PC:  53 ADDR:   0 MEM_OUT: 2584 ACC: 1 LG_ALU: 3920 RG_ALU:   1 SP: 3919 ZF: 0 |	push   var
  WRITE ACC -> MEM[ALU]
  TICK: 2793 PC:  53 ADDR:   0 MEM_OUT: 2584 ACC: 1 LG_ALU: 3920 RG_ALU:   1 SP: 3919 ZF: 0 |	push   var
  ADDR -> ALU_RG
  TICK: 2794 PC:  54 ADDR:   0 MEM_OUT: 2584 ACC: 1 LG_ALU: 3920 RG_ALU:   6 SP: 3919 ZF: 0 |	load   <
  ALU_RES = ALU_RG
  TICK: 2795 PC:  54 ADDR:   0 MEM_OUT: 2584 ACC: 1 LG_ALU: 3920 RG_ALU:   6 SP: 3919 ZF: 0 |	load   <
  READ MEM[ALU]
  TICK: 2796 PC:  54 ADDR:   0 MEM_OUT: 4181 ACC: 1 LG_ALU: 3920 RG_ALU:   6 SP: 3919 ZF: 0 |	load   <
  MEM[ALU] -> ALU_RG
  TICK: 2797 PC:  54 ADDR:   0 MEM_OUT: 4181 ACC: 1 LG_ALU: 3920 RG_ALU: 4181 SP: 3919 ZF: 0 |	load   <
  ALU_RES = ALU_RG
  TICK: 2798 PC:  54 ADDR:   0 MEM_OUT: 4181 ACC: 1 LG_ALU: 3920 RG_ALU: 4181 SP: 3919 ZF: 0 |	load   <
  ALU_RES -> ACC
  TICK: 2799 PC:  54 ADDR:   0 MEM_OUT: 4181 ACC: 4181 LG_ALU: 3920 RG_ALU: 4181 SP: 3919 ZF: 0 |	load   <
  ADDR -> ALU_RG
  TICK: 2800 PC:  55 ADDR:   0 MEM_OUT: 4181 ACC: 4181 LG_ALU: 3920 RG_ALU:   7 SP: 3919 ZF: 0 |	sub   <
  ALU_RES = ALU_RG
  TICK: 2801 PC:  55 ADDR:   0 MEM_OUT: 4181 ACC: 4181 LG_ALU: 3920 RG_ALU:   7 SP: 3919 ZF: 0 |	sub   <
  READ MEM[ALU]
  TICK: 2802 PC:  55 ADDR:   0 MEM_OUT: 400000 ACC: 4181 LG_ALU: 3920 RG_ALU:   7 SP: 3919 ZF: 0 |	sub   <
  MEM[ALU] -> ALU_RG
  TICK: 2803 PC:  55 ADDR:   0 MEM_OUT: 400000 ACC: 4181 LG_ALU: 3920 RG_ALU: 400000 SP: 3919 ZF: 0 |	sub   <
  ACC -> ALU_LG
  TICK: 2803 PC:  55 ADDR:   0 MEM_OUT: 400000 ACC: 4181 LG_ALU: 4181 RG_ALU: 400000 SP: 3919 ZF: 0 |	sub   <
  ALU_RES = ALU_LG + ALU_RG
  TICK: 2804 PC:  55 ADDR:   0 MEM_OUT: 400000 ACC: 4181 LG_ALU: 4181 RG_ALU: 400000 SP: 3919 ZF: 0 |	sub   <
  ALU_RES -> ACC
  TICK: 2805 PC:  55 ADDR:   0 MEM_OUT: 400000 ACC: -395819 LG_ALU: 4181 RG_ALU: 400000 SP: 3919 ZF: 0 |	sub   <
  PC + 1 -> PC
  NUM -> ALU_RG
  TICK: 2806 PC:  57 ADDR:   0 MEM_OUT: 400000 ACC: -395819 LG_ALU: 4181 RG_ALU:   1 SP: 3919 ZF: 0 |	load   <
  ALU_RES = ALU_RG
  TICK: 2807 PC:  57 ADDR:   0 MEM_OUT: 400000 ACC: -395819 LG_ALU: 4181 RG_ALU:   1 SP: 3919 ZF: 0 |	load   <
  ALU_RES -> ACC
  TICK: 2808 PC:  57 ADDR:   0 MEM_OUT: 400000 ACC: 1 LG_ALU: 4181 RG_ALU:   1 SP: 3919 ZF: 0 |	load   <
  ADDR -> PC
  SP -> ALU_LG
  TICK: 2810 PC:  60 ADDR:   0 MEM_OUT: 400000 ACC: 1 LG_ALU: 3919 RG_ALU:   1 SP: 3919 ZF: 0 |	push   <
  ALU_RES = SP - 1
  TICK: 2811 PC:  60 ADDR:   0 MEM_OUT: 400000 ACC: 1 LG_ALU: 3919 RG_ALU:   1 SP: 3919 ZF: 0 |	push   <
  ALU_RES -> SP
  TICK: 2812 PC:  60 ADDR:   0 MEM_OUT: 400000 ACC: 1 LG_ALU: 3919 RG_ALU:   1 SP: 3918 ZF: 0 |	push   <
  WRITE ACC -> MEM[ALU]
  TICK: 2812 PC:  60 ADDR:   0 MEM_OUT: 400000 ACC: 1 LG_ALU: 3919 RG_ALU:   1 SP: 3918 ZF: 0 |	push   <
  SP -> ALU_LG
  TICK: 2813 PC:  61 ADDR:   0 MEM_OUT: 400000 ACC: 1 LG_ALU: 3918 RG_ALU:   1 SP: 3918 ZF: 0 |	pop
  ALU_RES = ALU_LG
  TICK: 2814 PC:  61 ADDR:   0 MEM_OUT: 400000 ACC: 1 LG_ALU: 3918 RG_ALU:   1 SP: 3918 ZF: 0 |	pop
  READ MEM[ALU]
  TICK: 2815 PC:  61 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3918 RG_ALU:   1 SP: 3918 ZF: 0 |	pop
  ALU_RES = SP + 1
  TICK: 2816 PC:  61 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3918 RG_ALU:   1 SP: 3918 ZF: 0 |	pop
  ALU_RES -> SP
  TICK: 2817 PC:  61 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3918 RG_ALU:   1 SP: 3919 ZF: 0 |	pop
  MEM[ALU] -> ALU_RG
  TICK: 2817 PC:  61 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3918 RG_ALU:   1 SP: 3919 ZF: 0 |	pop
  ALU_RES = ALU_RG
  TICK: 2818 PC:  61 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3918 RG_ALU:   1 SP: 3919 ZF: 0 |	pop
  ALU_RES -> ACC
  TICK: 2819 PC:  61 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3918 RG_ALU:   1 SP: 3919 ZF: 0 |	pop
  ADDR -> PC
  ADDR -> PC
  ADDR -> ALU_RG
  TICK: 2822 PC:  24 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3918 RG_ALU:   6 SP: 3919 ZF: 0 |	load
  ALU_RES = ALU_RG
  TICK: 2823 PC:  24 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3918 RG_ALU:   6 SP: 3919 ZF: 0 |	load
  READ MEM[ALU]
  TICK: 2824 PC:  24 ADDR:   0 MEM_OUT: 4181 ACC: 1 LG_ALU: 3918 RG_ALU:   6 SP: 3919 ZF: 0 |	load
  MEM[ALU] -> ALU_RG
  TICK: 2825 PC:  24 ADDR:   0 MEM_OUT: 4181 ACC: 1 LG_ALU: 3918 RG_ALU: 4181 SP: 3919 ZF: 0 |	load
  ALU_RES = ALU_RG
  TICK: 2826 PC:  24 ADDR:   0 MEM_OUT: 4181 ACC: 1 LG_ALU: 3918 RG_ALU: 4181 SP: 3919 ZF: 0 |	load
  ALU_RES -> ACC
  TICK: 2827 PC:  24 ADDR:   0 MEM_OUT: 4181 ACC: 4181 LG_ALU: 3918 RG_ALU: 4181 SP: 3919 ZF: 0 |	load
  NUM -> ALU_RG
  TICK: 2828 PC:  25 ADDR:   0 MEM_OUT: 4181 ACC: 4181 LG_ALU: 3918 RG_ALU:   2 SP: 3919 ZF: 0 |	mod
  ACC -> ALU_LG
  TICK: 2828 PC:  25 ADDR:   0 MEM_OUT: 4181 ACC: 4181 LG_ALU: 4181 RG_ALU:   2 SP: 3919 ZF: 0 |	mod
  ALU_RES = ALU_LG % ALU_RG
  TICK: 2829 PC:  25 ADDR:   0 MEM_OUT: 4181 ACC: 4181 LG_ALU: 4181 RG_ALU:   2 SP: 3919 ZF: 0 |	mod
  ALU_RES -> ACC
  TICK: 2830 PC:  25 ADDR:   0 MEM_OUT: 4181 ACC: 1 LG_ALU: 4181 RG_ALU:   2 SP: 3919 ZF: 0 |	mod
  SP -> ALU_LG
  TICK: 2831 PC:  26 ADDR:   0 MEM_OUT: 4181 ACC: 1 LG_ALU: 3919 RG_ALU:   2 SP: 3919 ZF: 0 |	push
  ALU_RES = SP - 1
  TICK: 2832 PC:  26 ADDR:   0 MEM_OUT: 4181 ACC: 1 LG_ALU: 3919 RG_ALU:   2 SP: 3919 ZF: 0 |	push
  ALU_RES -> SP
  TICK: 2833 PC:  26 ADDR:   0 MEM_OUT: 4181 ACC: 1 LG_ALU: 3919 RG_ALU:   2 SP: 3918 ZF: 0 |	push
  WRITE ACC -> MEM[ALU]
  TICK: 2833 PC:  26 ADDR:   0 MEM_OUT: 4181 ACC: 1 LG_ALU: 3919 RG_ALU:   2 SP: 3918 ZF: 0 |	push
  NUM -> ALU_RG
  TICK: 2834 PC:  27 ADDR:   0 MEM_OUT: 4181 ACC: 1 LG_ALU: 3919 RG_ALU:   0 SP: 3918 ZF: 0 |	load   =
  ALU_RES = ALU_RG
  TICK: 2835 PC:  27 ADDR:   0 MEM_OUT: 4181 ACC: 1 LG_ALU: 3919 RG_ALU:   0 SP: 3918 ZF: 1 |	load   =
  ALU_RES -> ACC
  TICK: 2836 PC:  27 ADDR:   0 MEM_OUT: 4181 ACC: 0 LG_ALU: 3919 RG_ALU:   0 SP: 3918 ZF: 1 |	load   =
  SP -> ALU_LG
  TICK: 2837 PC:  28 ADDR:   0 MEM_OUT: 4181 ACC: 0 LG_ALU: 3918 RG_ALU:   0 SP: 3918 ZF: 1 |	sub   =
  ALU_RES = ALU_LG
  TICK: 2838 PC:  28 ADDR:   0 MEM_OUT: 4181 ACC: 0 LG_ALU: 3918 RG_ALU:   0 SP: 3918 ZF: 0 |	sub   =
  READ MEM[ALU]
  TICK: 2839 PC:  28 ADDR:   0 MEM_OUT: 1 ACC: 0 LG_ALU: 3918 RG_ALU:   0 SP: 3918 ZF: 0 |	sub   =
  MEM[ALU] -> ALU_RG
  TICK: 2840 PC:  28 ADDR:   0 MEM_OUT: 1 ACC: 0 LG_ALU: 3918 RG_ALU:   1 SP: 3918 ZF: 0 |	sub   =
  ALU_RES = SP + 1
  TICK: 2841 PC:  28 ADDR:   0 MEM_OUT: 1 ACC: 0 LG_ALU: 3918 RG_ALU:   1 SP: 3918 ZF: 0 |	sub   =
  ALU_RES -> SP
  TICK: 2842 PC:  28 ADDR:   0 MEM_OUT: 1 ACC: 0 LG_ALU: 3918 RG_ALU:   1 SP: 3919 ZF: 0 |	sub   =
  ACC -> ALU_LG
  TICK: 2842 PC:  28 ADDR:   0 MEM_OUT: 1 ACC: 0 LG_ALU:   0 RG_ALU:   1 SP: 3919 ZF: 0 |	sub   =
  ALU_RES = ALU_LG + ALU_RG
  TICK: 2843 PC:  28 ADDR:   0 MEM_OUT: 1 ACC: 0 LG_ALU:   0 RG_ALU:   1 SP: 3919 ZF: 0 |	sub   =
  ALU_RES -> ACC
  TICK: 2844 PC:  28 ADDR:   0 MEM_OUT: 1 ACC: -1 LG_ALU:   0 RG_ALU:   1 SP: 3919 ZF: 0 |	sub   =
  ADDR -> PC
  NUM -> ALU_RG
  TICK: 2846 PC:  32 ADDR:   0 MEM_OUT: 1 ACC: -1 LG_ALU:   0 RG_ALU:   0 SP: 3919 ZF: 0 |	load   =
  ALU_RES = ALU_RG
  TICK: 2847 PC:  32 ADDR:   0 MEM_OUT: 1 ACC: -1 LG_ALU:   0 RG_ALU:   0 SP: 3919 ZF: 1 |	load   =
  ALU_RES -> ACC
  TICK: 2848 PC:  32 ADDR:   0 MEM_OUT: 1 ACC: 0 LG_ALU:   0 RG_ALU:   0 SP: 3919 ZF: 1 |	load   =
  SP -> ALU_LG
  TICK: 2849 PC:  33 ADDR:   0 MEM_OUT: 1 ACC: 0 LG_ALU: 3919 RG_ALU:   0 SP: 3919 ZF: 1 |	push   =
  ALU_RES = SP - 1
  TICK: 2850 PC:  33 ADDR:   0 MEM_OUT: 1 ACC: 0 LG_ALU: 3919 RG_ALU:   0 SP: 3919 ZF: 0 |	push   =
  ALU_RES -> SP
  TICK: 2851 PC:  33 ADDR:   0 MEM_OUT: 1 ACC: 0 LG_ALU: 3919 RG_ALU:   0 SP: 3918 ZF: 0 |	push   =
  WRITE ACC -> MEM[ALU]
  TICK: 2851 PC:  33 ADDR:   0 MEM_OUT: 1 ACC: 0 LG_ALU: 3919 RG_ALU:   0 SP: 3918 ZF: 0 |	push   =
  SP -> ALU_LG
  TICK: 2852 PC:  34 ADDR:   0 MEM_OUT: 1 ACC: 0 LG_ALU: 3918 RG_ALU:   0 SP: 3918 ZF: 0 |	pop   if
  ALU_RES = ALU_LG
  TICK: 2853 PC:  34 ADDR:   0 MEM_OUT: 1 ACC: 0 LG_ALU: 3918 RG_ALU:   0 SP: 3918 ZF: 0 |	pop   if
  READ MEM[ALU]
  TICK: 2854 PC:  34 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3918 RG_ALU:   0 SP: 3918 ZF: 0 |	pop   if
  ALU_RES = SP + 1
  TICK: 2855 PC:  34 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3918 RG_ALU:   0 SP: 3918 ZF: 0 |	pop   if
  ALU_RES -> SP
  TICK: 2856 PC:  34 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3918 RG_ALU:   0 SP: 3919 ZF: 0 |	pop   if
  MEM[ALU] -> ALU_RG
  TICK: 2856 PC:  34 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3918 RG_ALU:   0 SP: 3919 ZF: 0 |	pop   if
  ALU_RES = ALU_RG
  TICK: 2857 PC:  34 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3918 RG_ALU:   0 SP: 3919 ZF: 1 |	pop   if
  ALU_RES -> ACC
  TICK: 2858 PC:  34 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3918 RG_ALU:   0 SP: 3919 ZF: 1 |	pop   if
  PC + 1 -> PC
  ADDR -> PC
  NUM -> ALU_RG
  TICK: 2860 PC:  20 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3918 RG_ALU:   0 SP: 3919 ZF: 1 |	load   +
  ALU_RES = ALU_RG
  TICK: 2861 PC:  20 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3918 RG_ALU:   0 SP: 3919 ZF: 1 |	load   +
  ALU_RES -> ACC
  TICK: 2862 PC:  20 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3918 RG_ALU:   0 SP: 3919 ZF: 1 |	load   +
  NUM -> ALU_RG
  TICK: 2863 PC:  21 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3918 RG_ALU:   0 SP: 3919 ZF: 1 |	add   +
  ACC -> ALU_LG
  TICK: 2863 PC:  21 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU:   0 RG_ALU:   0 SP: 3919 ZF: 1 |	add   +
  ALU_RES = ALU_LG + ALU_RG
  TICK: 2864 PC:  21 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU:   0 RG_ALU:   0 SP: 3919 ZF: 1 |	add   +
  ALU_RES -> ACC
  TICK: 2865 PC:  21 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU:   0 RG_ALU:   0 SP: 3919 ZF: 1 |	add   +
  SP -> ALU_LG
  TICK: 2866 PC:  22 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3919 RG_ALU:   0 SP: 3919 ZF: 1 |	push   +
  ALU_RES = SP - 1
  TICK: 2867 PC:  22 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3919 RG_ALU:   0 SP: 3919 ZF: 0 |	push   +
  ALU_RES -> SP
  TICK: 2868 PC:  22 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3919 RG_ALU:   0 SP: 3918 ZF: 0 |	push   +
  WRITE ACC -> MEM[ALU]
  TICK: 2868 PC:  22 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3919 RG_ALU:   0 SP: 3918 ZF: 0 |	push   +
  ADDR -> PC
  SP -> ALU_LG
  TICK: 2870 PC:  37 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3918 RG_ALU:   0 SP: 3918 ZF: 0 |	pop   if
  ALU_RES = ALU_LG
  TICK: 2871 PC:  37 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3918 RG_ALU:   0 SP: 3918 ZF: 0 |	pop   if
  READ MEM[ALU]
  TICK: 2872 PC:  37 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3918 RG_ALU:   0 SP: 3918 ZF: 0 |	pop   if
  ALU_RES = SP + 1
  TICK: 2873 PC:  37 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3918 RG_ALU:   0 SP: 3918 ZF: 0 |	pop   if
  ALU_RES -> SP
  TICK: 2874 PC:  37 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3918 RG_ALU:   0 SP: 3919 ZF: 0 |	pop   if
  MEM[ALU] -> ALU_RG
  TICK: 2874 PC:  37 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3918 RG_ALU:   0 SP: 3919 ZF: 0 |	pop   if
  ALU_RES = ALU_RG
  TICK: 2875 PC:  37 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3918 RG_ALU:   0 SP: 3919 ZF: 1 |	pop   if
  ALU_RES -> ACC
  TICK: 2876 PC:  37 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3918 RG_ALU:   0 SP: 3919 ZF: 1 |	pop   if
  SP -> ALU_LG
  TICK: 2877 PC:  38 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3919 RG_ALU:   0 SP: 3919 ZF: 1 |	push   if
  ALU_RES = SP - 1
  TICK: 2878 PC:  38 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3919 RG_ALU:   0 SP: 3919 ZF: 0 |	push   if
  ALU_RES -> SP
  TICK: 2879 PC:  38 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3919 RG_ALU:   0 SP: 3918 ZF: 0 |	push   if
  WRITE ACC -> MEM[ALU]
  TICK: 2879 PC:  38 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3919 RG_ALU:   0 SP: 3918 ZF: 0 |	push   if
  ADDR -> ALU_RG
  TICK: 2880 PC:  39 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3919 RG_ALU:   6 SP: 3918 ZF: 0 |	load   var
  ALU_RES = ALU_RG
  TICK: 2881 PC:  39 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3919 RG_ALU:   6 SP: 3918 ZF: 0 |	load   var
  READ MEM[ALU]
  TICK: 2882 PC:  39 ADDR:   0 MEM_OUT: 4181 ACC: 0 LG_ALU: 3919 RG_ALU:   6 SP: 3918 ZF: 0 |	load   var
  MEM[ALU] -> ALU_RG
  TICK: 2883 PC:  39 ADDR:   0 MEM_OUT: 4181 ACC: 0 LG_ALU: 3919 RG_ALU: 4181 SP: 3918 ZF: 0 |	load   var
  ALU_RES = ALU_RG
  TICK: 2884 PC:  39 ADDR:   0 MEM_OUT: 4181 ACC: 0 LG_ALU: 3919 RG_ALU: 4181 SP: 3918 ZF: 0 |	load   var
  ALU_RES -> ACC
  TICK: 2885 PC:  39 ADDR:   0 MEM_OUT: 4181 ACC: 4181 LG_ALU: 3919 RG_ALU: 4181 SP: 3918 ZF: 0 |	load   var
  ADDR -> ALU_RG
  TICK: 2886 PC:  40 ADDR:   0 MEM_OUT: 4181 ACC: 4181 LG_ALU: 3919 RG_ALU:   8 SP: 3918 ZF: 0 |	store   var
  ALU_RES = ALU_RG
  TICK: 2887 PC:  40 ADDR:   0 MEM_OUT: 4181 ACC: 4181 LG_ALU: 3919 RG_ALU:   8 SP: 3918 ZF: 0 |	store   var
  WRITE ACC -> MEM[ALU]
  TICK: 2888 PC:  40 ADDR:   0 MEM_OUT: 4181 ACC: 4181 LG_ALU: 3919 RG_ALU:   8 SP: 3918 ZF: 0 |	store   var
  NUM -> ALU_RG
  TICK: 2889 PC:  41 ADDR:   0 MEM_OUT: 4181 ACC: 4181 LG_ALU: 3919 RG_ALU:   1 SP: 3918 ZF: 0 |	load   var
  ALU_RES = ALU_RG
  TICK: 2890 PC:  41 ADDR:   0 MEM_OUT: 4181 ACC: 4181 LG_ALU: 3919 RG_ALU:   1 SP: 3918 ZF: 0 |	load   var
  ALU_RES -> ACC
  TICK: 2891 PC:  41 ADDR:   0 MEM_OUT: 4181 ACC: 1 LG_ALU: 3919 RG_ALU:   1 SP: 3918 ZF: 0 |	load   var
  SP -> ALU_LG
  TICK: 2892 PC:  42 ADDR:   0 MEM_OUT: 4181 ACC: 1 LG_ALU: 3918 RG_ALU:   1 SP: 3918 ZF: 0 |	push   var
  ALU_RES = SP - 1
  TICK: 2893 PC:  42 ADDR:   0 MEM_OUT: 4181 ACC: 1 LG_ALU: 3918 RG_ALU:   1 SP: 3918 ZF: 0 |	push   var
  ALU_RES -> SP
  TICK: 2894 PC:  42 ADDR:   0 MEM_OUT: 4181 ACC: 1 LG_ALU: 3918 RG_ALU:   1 SP: 3917 ZF: 0 |	push   var
  WRITE ACC -> MEM[ALU]
  TICK: 2894 PC:  42 ADDR:   0 MEM_OUT: 4181 ACC: 1 LG_ALU: 3918 RG_ALU:   1 SP: 3917 ZF: 0 |	push   var
  ADDR -> ALU_RG
  TICK: 2895 PC:  43 ADDR:   0 MEM_OUT: 4181 ACC: 1 LG_ALU: 3918 RG_ALU:   5 SP: 3917 ZF: 0 |	load   +
  ALU_RES = ALU_RG
  TICK: 2896 PC:  43 ADDR:   0 MEM_OUT: 4181 ACC: 1 LG_ALU: 3918 RG_ALU:   5 SP: 3917 ZF: 0 |	load   +
  READ MEM[ALU]
  TICK: 2897 PC:  43 ADDR:   0 MEM_OUT: 2584 ACC: 1 LG_ALU: 3918 RG_ALU:   5 SP: 3917 ZF: 0 |	load   +
  MEM[ALU] -> ALU_RG
  TICK: 2898 PC:  43 ADDR:   0 MEM_OUT: 2584 ACC: 1 LG_ALU: 3918 RG_ALU: 2584 SP: 3917 ZF: 0 |	load   +
  ALU_RES = ALU_RG
  TICK: 2899 PC:  43 ADDR:   0 MEM_OUT: 2584 ACC: 1 LG_ALU: 3918 RG_ALU: 2584 SP: 3917 ZF: 0 |	load   +
  ALU_RES -> ACC
  TICK: 2900 PC:  43 ADDR:   0 MEM_OUT: 2584 ACC: 2584 LG_ALU: 3918 RG_ALU: 2584 SP: 3917 ZF: 0 |	load   +
  ADDR -> ALU_RG
  TICK: 2901 PC:  44 ADDR:   0 MEM_OUT: 2584 ACC: 2584 LG_ALU: 3918 RG_ALU:   6 SP: 3917 ZF: 0 |	add   +
  ALU_RES = ALU_RG
  TICK: 2902 PC:  44 ADDR:   0 MEM_OUT: 2584 ACC: 2584 LG_ALU: 3918 RG_ALU:   6 SP: 3917 ZF: 0 |	add   +
  READ MEM[ALU]
  TICK: 2903 PC:  44 ADDR:   0 MEM_OUT: 4181 ACC: 2584 LG_ALU: 3918 RG_ALU:   6 SP: 3917 ZF: 0 |	add   +
  MEM[ALU] -> ALU_RG
  TICK: 2904 PC:  44 ADDR:   0 MEM_OUT: 4181 ACC: 2584 LG_ALU: 3918 RG_ALU: 4181 SP: 3917 ZF: 0 |	add   +
  ACC -> ALU_LG
  TICK: 2904 PC:  44 ADDR:   0 MEM_OUT: 4181 ACC: 2584 LG_ALU: 2584 RG_ALU: 4181 SP: 3917 ZF: 0 |	add   +
  ALU_RES = ALU_LG + ALU_RG
  TICK: 2905 PC:  44 ADDR:   0 MEM_OUT: 4181 ACC: 2584 LG_ALU: 2584 RG_ALU: 4181 SP: 3917 ZF: 0 |	add   +
  ALU_RES -> ACC
  TICK: 2906 PC:  44 ADDR:   0 MEM_OUT: 4181 ACC: 6765 LG_ALU: 2584 RG_ALU: 4181 SP: 3917 ZF: 0 |	add   +
  SP -> ALU_LG
  TICK: 2907 PC:  45 ADDR:   0 MEM_OUT: 4181 ACC: 6765 LG_ALU: 3917 RG_ALU: 4181 SP: 3917 ZF: 0 |	push   +
  ALU_RES = SP - 1
  TICK: 2908 PC:  45 ADDR:   0 MEM_OUT: 4181 ACC: 6765 LG_ALU: 3917 RG_ALU: 4181 SP: 3917 ZF: 0 |	push   +
  ALU_RES -> SP
  TICK: 2909 PC:  45 ADDR:   0 MEM_OUT: 4181 ACC: 6765 LG_ALU: 3917 RG_ALU: 4181 SP: 3916 ZF: 0 |	push   +
  WRITE ACC -> MEM[ALU]
  TICK: 2909 PC:  45 ADDR:   0 MEM_OUT: 4181 ACC: 6765 LG_ALU: 3917 RG_ALU: 4181 SP: 3916 ZF: 0 |	push   +
  SP -> ALU_LG
  TICK: 2910 PC:  46 ADDR:   0 MEM_OUT: 4181 ACC: 6765 LG_ALU: 3916 RG_ALU: 4181 SP: 3916 ZF: 0 |	pop   var
  ALU_RES = ALU_LG
  TICK: 2911 PC:  46 ADDR:   0 MEM_OUT: 4181 ACC: 6765 LG_ALU: 3916 RG_ALU: 4181 SP: 3916 ZF: 0 |	pop   var
  READ MEM[ALU]
  TICK: 2912 PC:  46 ADDR:   0 MEM_OUT: 6765 ACC: 6765 LG_ALU: 3916 RG_ALU: 4181 SP: 3916 ZF: 0 |	pop   var
  ALU_RES = SP + 1
  TICK: 2913 PC:  46 ADDR:   0 MEM_OUT: 6765 ACC: 6765 LG_ALU: 3916 RG_ALU: 4181 SP: 3916 ZF: 0 |	pop   var
  ALU_RES -> SP
  TICK: 2914 PC:  46 ADDR:   0 MEM_OUT: 6765 ACC: 6765 LG_ALU: 3916 RG_ALU: 4181 SP: 3917 ZF: 0 |	pop   var
  MEM[ALU] -> ALU_RG
  TICK: 2914 PC:  46 ADDR:   0 MEM_OUT: 6765 ACC: 6765 LG_ALU: 3916 RG_ALU: 6765 SP: 3917 ZF: 0 |	pop   var
  ALU_RES = ALU_RG
  TICK: 2915 PC:  46 ADDR:   0 MEM_OUT: 6765 ACC: 6765 LG_ALU: 3916 RG_ALU: 6765 SP: 3917 ZF: 0 |	pop   var
  ALU_RES -> ACC
  TICK: 2916 PC:  46 ADDR:   0 MEM_OUT: 6765 ACC: 6765 LG_ALU: 3916 RG_ALU: 6765 SP: 3917 ZF: 0 |	pop   var
  ADDR -> ALU_RG
  TICK: 2917 PC:  47 ADDR:   0 MEM_OUT: 6765 ACC: 6765 LG_ALU: 3916 RG_ALU:   6 SP: 3917 ZF: 0 |	store   var
  ALU_RES = ALU_RG
  TICK: 2918 PC:  47 ADDR:   0 MEM_OUT: 6765 ACC: 6765 LG_ALU: 3916 RG_ALU:   6 SP: 3917 ZF: 0 |	store   var
  WRITE ACC -> MEM[ALU]
  TICK: 2919 PC:  47 ADDR:   0 MEM_OUT: 6765 ACC: 6765 LG_ALU: 3916 RG_ALU:   6 SP: 3917 ZF: 0 |	store   var
  NUM -> ALU_RG
  TICK: 2920 PC:  48 ADDR:   0 MEM_OUT: 6765 ACC: 6765 LG_ALU: 3916 RG_ALU:   1 SP: 3917 ZF: 0 |	load   var
  ALU_RES = ALU_RG
  TICK: 2921 PC:  48 ADDR:   0 MEM_OUT: 6765 ACC: 6765 LG_ALU: 3916 RG_ALU:   1 SP: 3917 ZF: 0 |	load   var
  ALU_RES -> ACC
  TICK: 2922 PC:  48 ADDR:   0 MEM_OUT: 6765 ACC: 1 LG_ALU: 3916 RG_ALU:   1 SP: 3917 ZF: 0 |	load   var
  SP -> ALU_LG
  TICK: 2923 PC:  49 ADDR:   0 MEM_OUT: 6765 ACC: 1 LG_ALU: 3917 RG_ALU:   1 SP: 3917 ZF: 0 |	push   var
  ALU_RES = SP - 1
  TICK: 2924 PC:  49 ADDR:   0 MEM_OUT: 6765 ACC: 1 LG_ALU: 3917 RG_ALU:   1 SP: 3917 ZF: 0 |	push   var
  ALU_RES -> SP
  TICK: 2925 PC:  49 ADDR:   0 MEM_OUT: 6765 ACC: 1 LG_ALU: 3917 RG_ALU:   1 SP: 3916 ZF: 0 |	push   var
  WRITE ACC -> MEM[ALU]
  TICK: 2925 PC:  49 ADDR:   0 MEM_OUT: 6765 ACC: 1 LG_ALU: 3917 RG_ALU:   1 SP: 3916 ZF: 0 |	push   var
  ADDR -> ALU_RG
  TICK: 2926 PC:  50 ADDR:   0 MEM_OUT: 6765 ACC: 1 LG_ALU: 3917 RG_ALU:   8 SP: 3916 ZF: 0 |	load   var
  ALU_RES = ALU_RG
  TICK: 2927 PC:  50 ADDR:   0 MEM_OUT: 6765 ACC: 1 LG_ALU: 3917 RG_ALU:   8 SP: 3916 ZF: 0 |	load   var
  READ MEM[ALU]
  TICK: 2928 PC:  50 ADDR:   0 MEM_OUT: 4181 ACC: 1 LG_ALU: 3917 RG_ALU:   8 SP: 3916 ZF: 0 |	load   var
  MEM[ALU] -> ALU_RG
  TICK: 2929 PC:  50 ADDR:   0 MEM_OUT: 4181 ACC: 1 LG_ALU: 3917 RG_ALU: 4181 SP: 3916 ZF: 0 |	load   var
  ALU_RES = ALU_RG
  TICK: 2930 PC:  50 ADDR:   0 MEM_OUT: 4181 ACC: 1 LG_ALU: 3917 RG_ALU: 4181 SP: 3916 ZF: 0 |	load   var
  ALU_RES -> ACC
  TICK: 2931 PC:  50 ADDR:   0 MEM_OUT: 4181 ACC: 4181 LG_ALU: 3917 RG_ALU: 4181 SP: 3916 ZF: 0 |	load   var
  ADDR -> ALU_RG
  TICK: 2932 PC:  51 ADDR:   0 MEM_OUT: 4181 ACC: 4181 LG_ALU: 3917 RG_ALU:   5 SP: 3916 ZF: 0 |	store   var
  ALU_RES = ALU_RG
  TICK: 2933 PC:  51 ADDR:   0 MEM_OUT: 4181 ACC: 4181 LG_ALU: 3917 RG_ALU:   5 SP: 3916 ZF: 0 |	store   var
  WRITE ACC -> MEM[ALU]
  TICK: 2934 PC:  51 ADDR:   0 MEM_OUT: 4181 ACC: 4181 LG_ALU: 3917 RG_ALU:   5 SP: 3916 ZF: 0 |	store   var
  NUM -> ALU_RG
  TICK: 2935 PC:  52 ADDR:   0 MEM_OUT: 4181 ACC: 4181 LG_ALU: 3917 RG_ALU:   1 SP: 3916 ZF: 0 |	load   var
  ALU_RES = ALU_RG
  TICK: 2936 PC:  52 ADDR:   0 MEM_OUT: 4181 ACC: 4181 LG_ALU: 3917 RG_ALU:   1 SP: 3916 ZF: 0 |	load   var
  ALU_RES -> ACC
  TICK: 2937 PC:  52 ADDR:   0 MEM_OUT: 4181 ACC: 1 LG_ALU: 3917 RG_ALU:   1 SP: 3916 ZF: 0 |	load   var
  SP -> ALU_LG
  TICK: 2938 PC:  53 ADDR:   0 MEM_OUT: 4181 ACC: 1 LG_ALU: 3916 RG_ALU:   1 SP: 3916 ZF: 0 |	push   var
  ALU_RES = SP - 1
  TICK: 2939 PC:  53 ADDR:   0 MEM_OUT: 4181 ACC: 1 LG_ALU: 3916 RG_ALU:   1 SP: 3916 ZF: 0 |	push   var
  ALU_RES -> SP
  TICK: 2940 PC:  53 ADDR:   0 MEM_OUT: 4181 ACC: 1 LG_ALU: 3916 RG_ALU:   1 SP: 3915 ZF: 0 |	push   var
  WRITE ACC -> MEM[ALU]
  TICK: 2940 PC:  53 ADDR:   0 MEM_OUT: 4181 ACC: 1 LG_ALU: 3916 RG_ALU:   1 SP: 3915 ZF: 0 |	push   var
  ADDR -> ALU_RG
  TICK: 2941 PC:  54 ADDR:   0 MEM_OUT: 4181 ACC: 1 LG_ALU: 3916 RG_ALU:   6 SP: 3915 ZF: 0 |	load   <
  ALU_RES = ALU_RG
  TICK: 2942 PC:  54 ADDR:   0 MEM_OUT: 4181 ACC: 1 LG_ALU: 3916 RG_ALU:   6 SP: 3915 ZF: 0 |	load   <
  READ MEM[ALU]
  TICK: 2943 PC:  54 ADDR:   0 MEM_OUT: 6765 ACC: 1 LG_ALU: 3916 RG_ALU:   6 SP: 3915 ZF: 0 |	load   <
  MEM[ALU] -> ALU_RG
  TICK: 2944 PC:  54 ADDR:   0 MEM_OUT: 6765 ACC: 1 LG_ALU: 3916 RG_ALU: 6765 SP: 3915 ZF: 0 |	load   <
  ALU_RES = ALU_RG
  TICK: 2945 PC:  54 ADDR:   0 MEM_OUT: 6765 ACC: 1 LG_ALU: 3916 RG_ALU: 6765 SP: 3915 ZF: 0 |	load   <
  ALU_RES -> ACC
  TICK: 2946 PC:  54 ADDR:   0 MEM_OUT: 6765 ACC: 6765 LG_ALU: 3916 RG_ALU: 6765 SP: 3915 ZF: 0 |	load   <
  ADDR -> ALU_RG
  TICK: 2947 PC:  55 ADDR:   0 MEM_OUT: 6765 ACC: 6765 LG_ALU: 3916 RG_ALU:   7 SP: 3915 ZF: 0 |	sub   <
  ALU_RES = ALU_RG
  TICK: 2948 PC:  55 ADDR:   0 MEM_OUT: 6765 ACC: 6765 LG_ALU: 3916 RG_ALU:   7 SP: 3915 ZF: 0 |	sub   <
  READ MEM[ALU]
  TICK: 2949 PC:  55 ADDR:   0 MEM_OUT: 400000 ACC: 6765 LG_ALU: 3916 RG_ALU:   7 SP: 3915 ZF: 0 |	sub   <
  MEM[ALU] -> ALU_RG
  TICK: 2950 PC:  55 ADDR:   0 MEM_OUT: 400000 ACC: 6765 LG_ALU: 3916 RG_ALU: 400000 SP: 3915 ZF: 0 |	sub   <
  ACC -> ALU_LG
  TICK: 2950 PC:  55 ADDR:   0 MEM_OUT: 400000 ACC: 6765 LG_ALU: 6765 RG_ALU: 400000 SP: 3915 ZF: 0 |	sub   <
  ALU_RES = ALU_LG + ALU_RG
  TICK: 2951 PC:  55 ADDR:   0 MEM_OUT: 400000 ACC: 6765 LG_ALU: 6765 RG_ALU: 400000 SP: 3915 ZF: 0 |	sub   <
  ALU_RES -> ACC
  TICK: 2952 PC:  55 ADDR:   0 MEM_OUT: 400000 ACC: -393235 LG_ALU: 6765 RG_ALU: 400000 SP: 3915 ZF: 0 |	sub   <
  PC + 1 -> PC
  NUM -> ALU_RG
  TICK: 2953 PC:  57 ADDR:   0 MEM_OUT: 400000 ACC: -393235 LG_ALU: 6765 RG_ALU:   1 SP: 3915 ZF: 0 |	load   <
  ALU_RES = ALU_RG
  TICK: 2954 PC:  57 ADDR:   0 MEM_OUT: 400000 ACC: -393235 LG_ALU: 6765 RG_ALU:   1 SP: 3915 ZF: 0 |	load   <
  ALU_RES -> ACC
  TICK: 2955 PC:  57 ADDR:   0 MEM_OUT: 400000 ACC: 1 LG_ALU: 6765 RG_ALU:   1 SP: 3915 ZF: 0 |	load   <
  ADDR -> PC
  SP -> ALU_LG
  TICK: 2957 PC:  60 ADDR:   0 MEM_OUT: 400000 ACC: 1 LG_ALU: 3915 RG_ALU:   1 SP: 3915 ZF: 0 |	push   <
  ALU_RES = SP - 1
  TICK: 2958 PC:  60 ADDR:   0 MEM_OUT: 400000 ACC: 1 LG_ALU: 3915 RG_ALU:   1 SP: 3915 ZF: 0 |	push   <
  ALU_RES -> SP
  TICK: 2959 PC:  60 ADDR:   0 MEM_OUT: 400000 ACC: 1 LG_ALU: 3915 RG_ALU:   1 SP: 3914 ZF: 0 |	push   <
  WRITE ACC -> MEM[ALU]
  TICK: 2959 PC:  60 ADDR:   0 MEM_OUT: 400000 ACC: 1 LG_ALU: 3915 RG_ALU:   1 SP: 3914 ZF: 0 |	push   <
  SP -> ALU_LG
  TICK: 2960 PC:  61 ADDR:   0 MEM_OUT: 400000 ACC: 1 LG_ALU: 3914 RG_ALU:   1 SP: 3914 ZF: 0 |	pop
  ALU_RES = ALU_LG
  TICK: 2961 PC:  61 ADDR:   0 MEM_OUT: 400000 ACC: 1 LG_ALU: 3914 RG_ALU:   1 SP: 3914 ZF: 0 |	pop
  READ MEM[ALU]
  TICK: 2962 PC:  61 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3914 RG_ALU:   1 SP: 3914 ZF: 0 |	pop
  ALU_RES = SP + 1
  TICK: 2963 PC:  61 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3914 RG_ALU:   1 SP: 3914 ZF: 0 |	pop
  ALU_RES -> SP
  TICK: 2964 PC:  61 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3914 RG_ALU:   1 SP: 3915 ZF: 0 |	pop
  MEM[ALU] -> ALU_RG
  TICK: 2964 PC:  61 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3914 RG_ALU:   1 SP: 3915 ZF: 0 |	pop
  ALU_RES = ALU_RG
  TICK: 2965 PC:  61 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3914 RG_ALU:   1 SP: 3915 ZF: 0 |	pop
  ALU_RES -> ACC
  TICK: 2966 PC:  61 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3914 RG_ALU:   1 SP: 3915 ZF: 0 |	pop
  ADDR -> PC
  ADDR -> PC
  ADDR -> ALU_RG
  TICK: 2969 PC:  24 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3914 RG_ALU:   6 SP: 3915 ZF: 0 |	load
  ALU_RES = ALU_RG
  TICK: 2970 PC:  24 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3914 RG_ALU:   6 SP: 3915 ZF: 0 |	load
  READ MEM[ALU]
  TICK: 2971 PC:  24 ADDR:   0 MEM_OUT: 6765 ACC: 1 LG_ALU: 3914 RG_ALU:   6 SP: 3915 ZF: 0 |	load
  MEM[ALU] -> ALU_RG
  TICK: 2972 PC:  24 ADDR:   0 MEM_OUT: 6765 ACC: 1 LG_ALU: 3914 RG_ALU: 6765 SP: 3915 ZF: 0 |	load
  ALU_RES = ALU_RG
  TICK: 2973 PC:  24 ADDR:   0 MEM_OUT: 6765 ACC: 1 LG_ALU: 3914 RG_ALU: 6765 SP: 3915 ZF: 0 |	load
  ALU_RES -> ACC
  TICK: 2974 PC:  24 ADDR:   0 MEM_OUT: 6765 ACC: 6765 LG_ALU: 3914 RG_ALU: 6765 SP: 3915 ZF: 0 |	load
  NUM -> ALU_RG
  TICK: 2975 PC:  25 ADDR:   0 MEM_OUT: 6765 ACC: 6765 LG_ALU: 3914 RG_ALU:   2 SP: 3915 ZF: 0 |	mod
  ACC -> ALU_LG
  TICK: 2975 PC:  25 ADDR:   0 MEM_OUT: 6765 ACC: 6765 LG_ALU: 6765 RG_ALU:   2 SP: 3915 ZF: 0 |	mod
  ALU_RES = ALU_LG % ALU_RG
  TICK: 2976 PC:  25 ADDR:   0 MEM_OUT: 6765 ACC: 6765 LG_ALU: 6765 RG_ALU:   2 SP: 3915 ZF: 0 |	mod
  ALU_RES -> ACC
  TICK: 2977 PC:  25 ADDR:   0 MEM_OUT: 6765 ACC: 1 LG_ALU: 6765 RG_ALU:   2 SP: 3915 ZF: 0 |	mod
  SP -> ALU_LG
  TICK: 2978 PC:  26 ADDR:   0 MEM_OUT: 6765 ACC: 1 LG_ALU: 3915 RG_ALU:   2 SP: 3915 ZF: 0 |	push
  ALU_RES = SP - 1
  TICK: 2979 PC:  26 ADDR:   0 MEM_OUT: 6765 ACC: 1 LG_ALU: 3915 RG_ALU:   2 SP: 3915 ZF: 0 |	push
  ALU_RES -> SP
  TICK: 2980 PC:  26 ADDR:   0 MEM_OUT: 6765 ACC: 1 LG_ALU: 3915 RG_ALU:   2 SP: 3914 ZF: 0 |	push
  WRITE ACC -> MEM[ALU]
  TICK: 2980 PC:  26 ADDR:   0 MEM_OUT: 6765 ACC: 1 LG_ALU: 3915 RG_ALU:   2 SP: 3914 ZF: 0 |	push
  NUM -> ALU_RG
  TICK: 2981 PC:  27 ADDR:   0 MEM_OUT: 6765 ACC: 1 LG_ALU: 3915 RG_ALU:   0 SP: 3914 ZF: 0 |	load   =
  ALU_RES = ALU_RG
  TICK: 2982 PC:  27 ADDR:   0 MEM_OUT: 6765 ACC: 1 LG_ALU: 3915 RG_ALU:   0 SP: 3914 ZF: 1 |	load   =
  ALU_RES -> ACC
  TICK: 2983 PC:  27 ADDR:   0 MEM_OUT: 6765 ACC: 0 LG_ALU: 3915 RG_ALU:   0 SP: 3914 ZF: 1 |	load   =
  SP -> ALU_LG
  TICK: 2984 PC:  28 ADDR:   0 MEM_OUT: 6765 ACC: 0 LG_ALU: 3914 RG_ALU:   0 SP: 3914 ZF: 1 |	sub   =
  ALU_RES = ALU_LG
  TICK: 2985 PC:  28 ADDR:   0 MEM_OUT: 6765 ACC: 0 LG_ALU: 3914 RG_ALU:   0 SP: 3914 ZF: 0 |	sub   =
  READ MEM[ALU]
  TICK: 2986 PC:  28 ADDR:   0 MEM_OUT: 1 ACC: 0 LG_ALU: 3914 RG_ALU:   0 SP: 3914 ZF: 0 |	sub   =
  MEM[ALU] -> ALU_RG
  TICK: 2987 PC:  28 ADDR:   0 MEM_OUT: 1 ACC: 0 LG_ALU: 3914 RG_ALU:   1 SP: 3914 ZF: 0 |	sub   =
  ALU_RES = SP + 1
  TICK: 2988 PC:  28 ADDR:   0 MEM_OUT: 1 ACC: 0 LG_ALU: 3914 RG_ALU:   1 SP: 3914 ZF: 0 |	sub   =
  ALU_RES -> SP
  TICK: 2989 PC:  28 ADDR:   0 MEM_OUT: 1 ACC: 0 LG_ALU: 3914 RG_ALU:   1 SP: 3915 ZF: 0 |	sub   =
  ACC -> ALU_LG
  TICK: 2989 PC:  28 ADDR:   0 MEM_OUT: 1 ACC: 0 LG_ALU:   0 RG_ALU:   1 SP: 3915 ZF: 0 |	sub   =
  ALU_RES = ALU_LG + ALU_RG
  TICK: 2990 PC:  28 ADDR:   0 MEM_OUT: 1 ACC: 0 LG_ALU:   0 RG_ALU:   1 SP: 3915 ZF: 0 |	sub   =
  ALU_RES -> ACC
  TICK: 2991 PC:  28 ADDR:   0 MEM_OUT: 1 ACC: -1 LG_ALU:   0 RG_ALU:   1 SP: 3915 ZF: 0 |	sub   =
  ADDR -> PC
  NUM -> ALU_RG
  TICK: 2993 PC:  32 ADDR:   0 MEM_OUT: 1 ACC: -1 LG_ALU:   0 RG_ALU:   0 SP: 3915 ZF: 0 |	load   =
  ALU_RES = ALU_RG
  TICK: 2994 PC:  32 ADDR:   0 MEM_OUT: 1 ACC: -1 LG_ALU:   0 RG_ALU:   0 SP: 3915 ZF: 1 |	load   =
  ALU_RES -> ACC
  TICK: 2995 PC:  32 ADDR:   0 MEM_OUT: 1 ACC: 0 LG_ALU:   0 RG_ALU:   0 SP: 3915 ZF: 1 |	load   =
  SP -> ALU_LG
  TICK: 2996 PC:  33 ADDR:   0 MEM_OUT: 1 ACC: 0 LG_ALU: 3915 RG_ALU:   0 SP: 3915 ZF: 1 |	push   =
  ALU_RES = SP - 1
  TICK: 2997 PC:  33 ADDR:   0 MEM_OUT: 1 ACC: 0 LG_ALU: 3915 RG_ALU:   0 SP: 3915 ZF: 0 |	push   =
  ALU_RES -> SP
  TICK: 2998 PC:  33 ADDR:   0 MEM_OUT: 1 ACC: 0 LG_ALU: 3915 RG_ALU:   0 SP: 3914 ZF: 0 |	push   =
  WRITE ACC -> MEM[ALU]
  TICK: 2998 PC:  33 ADDR:   0 MEM_OUT: 1 ACC: 0 LG_ALU: 3915 RG_ALU:   0 SP: 3914 ZF: 0 |	push   =
  SP -> ALU_LG
  TICK: 2999 PC:  34 ADDR:   0 MEM_OUT: 1 ACC: 0 LG_ALU: 3914 RG_ALU:   0 SP: 3914 ZF: 0 |	pop   if
  ALU_RES = ALU_LG
  TICK: 3000 PC:  34 ADDR:   0 MEM_OUT: 1 ACC: 0 LG_ALU: 3914 RG_ALU:   0 SP: 3914 ZF: 0 |	pop   if
  READ MEM[ALU]
  TICK: 3001 PC:  34 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3914 RG_ALU:   0 SP: 3914 ZF: 0 |	pop   if
  ALU_RES = SP + 1
  TICK: 3002 PC:  34 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3914 RG_ALU:   0 SP: 3914 ZF: 0 |	pop   if
  ALU_RES -> SP
  TICK: 3003 PC:  34 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3914 RG_ALU:   0 SP: 3915 ZF: 0 |	pop   if
  MEM[ALU] -> ALU_RG
  TICK: 3003 PC:  34 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3914 RG_ALU:   0 SP: 3915 ZF: 0 |	pop   if
  ALU_RES = ALU_RG
  TICK: 3004 PC:  34 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3914 RG_ALU:   0 SP: 3915 ZF: 1 |	pop   if
  ALU_RES -> ACC
  TICK: 3005 PC:  34 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3914 RG_ALU:   0 SP: 3915 ZF: 1 |	pop   if
  PC + 1 -> PC
  ADDR -> PC
  NUM -> ALU_RG
  TICK: 3007 PC:  20 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3914 RG_ALU:   0 SP: 3915 ZF: 1 |	load   +
  ALU_RES = ALU_RG
  TICK: 3008 PC:  20 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3914 RG_ALU:   0 SP: 3915 ZF: 1 |	load   +
  ALU_RES -> ACC
  TICK: 3009 PC:  20 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3914 RG_ALU:   0 SP: 3915 ZF: 1 |	load   +
  NUM -> ALU_RG
  TICK: 3010 PC:  21 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3914 RG_ALU:   0 SP: 3915 ZF: 1 |	add   +
  ACC -> ALU_LG
  TICK: 3010 PC:  21 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU:   0 RG_ALU:   0 SP: 3915 ZF: 1 |	add   +
  ALU_RES = ALU_LG + ALU_RG
  TICK: 3011 PC:  21 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU:   0 RG_ALU:   0 SP: 3915 ZF: 1 |	add   +
  ALU_RES -> ACC
  TICK: 3012 PC:  21 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU:   0 RG_ALU:   0 SP: 3915 ZF: 1 |	add   +
  SP -> ALU_LG
  TICK: 3013 PC:  22 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3915 RG_ALU:   0 SP: 3915 ZF: 1 |	push   +
  ALU_RES = SP - 1
  TICK: 3014 PC:  22 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3915 RG_ALU:   0 SP: 3915 ZF: 0 |	push   +
  ALU_RES -> SP
  TICK: 3015 PC:  22 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3915 RG_ALU:   0 SP: 3914 ZF: 0 |	push   +
  WRITE ACC -> MEM[ALU]
  TICK: 3015 PC:  22 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3915 RG_ALU:   0 SP: 3914 ZF: 0 |	push   +
  ADDR -> PC
  SP -> ALU_LG
  TICK: 3017 PC:  37 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3914 RG_ALU:   0 SP: 3914 ZF: 0 |	pop   if
  ALU_RES = ALU_LG
  TICK: 3018 PC:  37 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3914 RG_ALU:   0 SP: 3914 ZF: 0 |	pop   if
  READ MEM[ALU]
  TICK: 3019 PC:  37 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3914 RG_ALU:   0 SP: 3914 ZF: 0 |	pop   if
  ALU_RES = SP + 1
  TICK: 3020 PC:  37 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3914 RG_ALU:   0 SP: 3914 ZF: 0 |	pop   if
  ALU_RES -> SP
  TICK: 3021 PC:  37 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3914 RG_ALU:   0 SP: 3915 ZF: 0 |	pop   if
  MEM[ALU] -> ALU_RG
  TICK: 3021 PC:  37 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3914 RG_ALU:   0 SP: 3915 ZF: 0 |	pop   if
  ALU_RES = ALU_RG
  TICK: 3022 PC:  37 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3914 RG_ALU:   0 SP: 3915 ZF: 1 |	pop   if
  ALU_RES -> ACC
  TICK: 3023 PC:  37 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3914 RG_ALU:   0 SP: 3915 ZF: 1 |	pop   if
  SP -> ALU_LG
  TICK: 3024 PC:  38 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3915 RG_ALU:   0 SP: 3915 ZF: 1 |	push   if
  ALU_RES = SP - 1
  TICK: 3025 PC:  38 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3915 RG_ALU:   0 SP: 3915 ZF: 0 |	push   if
  ALU_RES -> SP
  TICK: 3026 PC:  38 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3915 RG_ALU:   0 SP: 3914 ZF: 0 |	push   if
  WRITE ACC -> MEM[ALU]
  TICK: 3026 PC:  38 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3915 RG_ALU:   0 SP: 3914 ZF: 0 |	push   if
  ADDR -> ALU_RG
  TICK: 3027 PC:  39 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3915 RG_ALU:   6 SP: 3914 ZF: 0 |	load   var
  ALU_RES = ALU_RG
  TICK: 3028 PC:  39 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3915 RG_ALU:   6 SP: 3914 ZF: 0 |	load   var
  READ MEM[ALU]
  TICK: 3029 PC:  39 ADDR:   0 MEM_OUT: 6765 ACC: 0 LG_ALU: 3915 RG_ALU:   6 SP: 3914 ZF: 0 |	load   var
  MEM[ALU] -> ALU_RG
  TICK: 3030 PC:  39 ADDR:   0 MEM_OUT: 6765 ACC: 0 LG_ALU: 3915 RG_ALU: 6765 SP: 3914 ZF: 0 |	load   var
  ALU_RES = ALU_RG
  TICK: 3031 PC:  39 ADDR:   0 MEM_OUT: 6765 ACC: 0 LG_ALU: 3915 RG_ALU: 6765 SP: 3914 ZF: 0 |	load   var
  ALU_RES -> ACC
  TICK: 3032 PC:  39 ADDR:   0 MEM_OUT: 6765 ACC: 6765 LG_ALU: 3915 RG_ALU: 6765 SP: 3914 ZF: 0 |	load   var
  ADDR -> ALU_RG
  TICK: 3033 PC:  40 ADDR:   0 MEM_OUT: 6765 ACC: 6765 LG_ALU: 3915 RG_ALU:   8 SP: 3914 ZF: 0 |	store   var
  ALU_RES = ALU_RG
  TICK: 3034 PC:  40 ADDR:   0 MEM_OUT: 6765 ACC: 6765 LG_ALU: 3915 RG_ALU:   8 SP: 3914 ZF: 0 |	store   var
  WRITE ACC -> MEM[ALU]
  TICK: 3035 PC:  40 ADDR:   0 MEM_OUT: 6765 ACC: 6765 LG_ALU: 3915 RG_ALU:   8 SP: 3914 ZF: 0 |	store   var
  NUM -> ALU_RG
  TICK: 3036 PC:  41 ADDR:   0 MEM_OUT: 6765 ACC: 6765 LG_ALU: 3915 RG_ALU:   1 SP: 3914 ZF: 0 |	load   var
  ALU_RES = ALU_RG
  TICK: 3037 PC:  41 ADDR:   0 MEM_OUT: 6765 ACC: 6765 LG_ALU: 3915 RG_ALU:   1 SP: 3914 ZF: 0 |	load   var
  ALU_RES -> ACC
  TICK: 3038 PC:  41 ADDR:   0 MEM_OUT: 6765 ACC: 1 LG_ALU: 3915 RG_ALU:   1 SP: 3914 ZF: 0 |	load   var
  SP -> ALU_LG
  TICK: 3039 PC:  42 ADDR:   0 MEM_OUT: 6765 ACC: 1 LG_ALU: 3914 RG_ALU:   1 SP: 3914 ZF: 0 |	push   var
  ALU_RES = SP - 1
  TICK: 3040 PC:  42 ADDR:   0 MEM_OUT: 6765 ACC: 1 LG_ALU: 3914 RG_ALU:   1 SP: 3914 ZF: 0 |	push   var
  ALU_RES -> SP
  TICK: 3041 PC:  42 ADDR:   0 MEM_OUT: 6765 ACC: 1 LG_ALU: 3914 RG_ALU:   1 SP: 3913 ZF: 0 |	push   var
  WRITE ACC -> MEM[ALU]
  TICK: 3041 PC:  42 ADDR:   0 MEM_OUT: 6765 ACC: 1 LG_ALU: 3914 RG_ALU:   1 SP: 3913 ZF: 0 |	push   var
  ADDR -> ALU_RG
  TICK: 3042 PC:  43 ADDR:   0 MEM_OUT: 6765 ACC: 1 LG_ALU: 3914 RG_ALU:   5 SP: 3913 ZF: 0 |	load   +
  ALU_RES = ALU_RG
  TICK: 3043 PC:  43 ADDR:   0 MEM_OUT: 6765 ACC: 1 LG_ALU: 3914 RG_ALU:   5 SP: 3913 ZF: 0 |	load   +
  READ MEM[ALU]
  TICK: 3044 PC:  43 ADDR:   0 MEM_OUT: 4181 ACC: 1 LG_ALU: 3914 RG_ALU:   5 SP: 3913 ZF: 0 |	load   +
  MEM[ALU] -> ALU_RG
  TICK: 3045 PC:  43 ADDR:   0 MEM_OUT: 4181 ACC: 1 LG_ALU: 3914 RG_ALU: 4181 SP: 3913 ZF: 0 |	load   +
  ALU_RES = ALU_RG
  TICK: 3046 PC:  43 ADDR:   0 MEM_OUT: 4181 ACC: 1 LG_ALU: 3914 RG_ALU: 4181 SP: 3913 ZF: 0 |	load   +
  ALU_RES -> ACC
  TICK: 3047 PC:  43 ADDR:   0 MEM_OUT: 4181 ACC: 4181 LG_ALU: 3914 RG_ALU: 4181 SP: 3913 ZF: 0 |	load   +
  ADDR -> ALU_RG
  TICK: 3048 PC:  44 ADDR:   0 MEM_OUT: 4181 ACC: 4181 LG_ALU: 3914 RG_ALU:   6 SP: 3913 ZF: 0 |	add   +
  ALU_RES = ALU_RG
  TICK: 3049 PC:  44 ADDR:   0 MEM_OUT: 4181 ACC: 4181 LG_ALU: 3914 RG_ALU:   6 SP: 3913 ZF: 0 |	add   +
  READ MEM[ALU]
  TICK: 3050 PC:  44 ADDR:   0 MEM_OUT: 6765 ACC: 4181 LG_ALU: 3914 RG_ALU:   6 SP: 3913 ZF: 0 |	add   +
  MEM[ALU] -> ALU_RG
  TICK: 3051 PC:  44 ADDR:   0 MEM_OUT: 6765 ACC: 4181 LG_ALU: 3914 RG_ALU: 6765 SP: 3913 ZF: 0 |	add   +
  ACC -> ALU_LG
  TICK: 3051 PC:  44 ADDR:   0 MEM_OUT: 6765 ACC: 4181 LG_ALU: 4181 RG_ALU: 6765 SP: 3913 ZF: 0 |	add   +
  ALU_RES = ALU_LG + ALU_RG
  TICK: 3052 PC:  44 ADDR:   0 MEM_OUT: 6765 ACC: 4181 LG_ALU: 4181 RG_ALU: 6765 SP: 3913 ZF: 0 |	add   +
  ALU_RES -> ACC
  TICK: 3053 PC:  44 ADDR:   0 MEM_OUT: 6765 ACC: 10946 LG_ALU: 4181 RG_ALU: 6765 SP: 3913 ZF: 0 |	add   +
  SP -> ALU_LG
  TICK: 3054 PC:  45 ADDR:   0 MEM_OUT: 6765 ACC: 10946 LG_ALU: 3913 RG_ALU: 6765 SP: 3913 ZF: 0 |	push   +
  ALU_RES = SP - 1
  TICK: 3055 PC:  45 ADDR:   0 MEM_OUT: 6765 ACC: 10946 LG_ALU: 3913 RG_ALU: 6765 SP: 3913 ZF: 0 |	push   +
  ALU_RES -> SP
  TICK: 3056 PC:  45 ADDR:   0 MEM_OUT: 6765 ACC: 10946 LG_ALU: 3913 RG_ALU: 6765 SP: 3912 ZF: 0 |	push   +
  WRITE ACC -> MEM[ALU]
  TICK: 3056 PC:  45 ADDR:   0 MEM_OUT: 6765 ACC: 10946 LG_ALU: 3913 RG_ALU: 6765 SP: 3912 ZF: 0 |	push   +
  SP -> ALU_LG
  TICK: 3057 PC:  46 ADDR:   0 MEM_OUT: 6765 ACC: 10946 LG_ALU: 3912 RG_ALU: 6765 SP: 3912 ZF: 0 |	pop   var
  ALU_RES = ALU_LG
  TICK: 3058 PC:  46 ADDR:   0 MEM_OUT: 6765 ACC: 10946 LG_ALU: 3912 RG_ALU: 6765 SP: 3912 ZF: 0 |	pop   var
  READ MEM[ALU]
  TICK: 3059 PC:  46 ADDR:   0 MEM_OUT: 10946 ACC: 10946 LG_ALU: 3912 RG_ALU: 6765 SP: 3912 ZF: 0 |	pop   var
  ALU_RES = SP + 1
  TICK: 3060 PC:  46 ADDR:   0 MEM_OUT: 10946 ACC: 10946 LG_ALU: 3912 RG_ALU: 6765 SP: 3912 ZF: 0 |	pop   var
  ALU_RES -> SP
  TICK: 3061 PC:  46 ADDR:   0 MEM_OUT: 10946 ACC: 10946 LG_ALU: 3912 RG_ALU: 6765 SP: 3913 ZF: 0 |	pop   var
  MEM[ALU] -> ALU_RG
  TICK: 3061 PC:  46 ADDR:   0 MEM_OUT: 10946 ACC: 10946 LG_ALU: 3912 RG_ALU: 10946 SP: 3913 ZF: 0 |	pop   var
  ALU_RES = ALU_RG
  TICK: 3062 PC:  46 ADDR:   0 MEM_OUT: 10946 ACC: 10946 LG_ALU: 3912 RG_ALU: 10946 SP: 3913 ZF: 0 |	pop   var
  ALU_RES -> ACC
  TICK: 3063 PC:  46 ADDR:   0 MEM_OUT: 10946 ACC: 10946 LG_ALU: 3912 RG_ALU: 10946 SP: 3913 ZF: 0 |	pop   var
  ADDR -> ALU_RG
  TICK: 3064 PC:  47 ADDR:   0 MEM_OUT: 10946 ACC: 10946 LG_ALU: 3912 RG_ALU:   6 SP: 3913 ZF: 0 |	store   var
  ALU_RES = ALU_RG
  TICK: 3065 PC:  47 ADDR:   0 MEM_OUT: 10946 ACC: 10946 LG_ALU: 3912 RG_ALU:   6 SP: 3913 ZF: 0 |	store   var
  WRITE ACC -> MEM[ALU]
  TICK: 3066 PC:  47 ADDR:   0 MEM_OUT: 10946 ACC: 10946 LG_ALU: 3912 RG_ALU:   6 SP: 3913 ZF: 0 |	store   var
  NUM -> ALU_RG
  TICK: 3067 PC:  48 ADDR:   0 MEM_OUT: 10946 ACC: 10946 LG_ALU: 3912 RG_ALU:   1 SP: 3913 ZF: 0 |	load   var
  ALU_RES = ALU_RG
  TICK: 3068 PC:  48 ADDR:   0 MEM_OUT: 10946 ACC: 10946 LG_ALU: 3912 RG_ALU:   1 SP: 3913 ZF: 0 |	load   var
  ALU_RES -> ACC
  TICK: 3069 PC:  48 ADDR:   0 MEM_OUT: 10946 ACC: 1 LG_ALU: 3912 RG_ALU:   1 SP: 3913 ZF: 0 |	load   var
  SP -> ALU_LG
  TICK: 3070 PC:  49 ADDR:   0 MEM_OUT: 10946 ACC: 1 LG_ALU: 3913 RG_ALU:   1 SP: 3913 ZF: 0 |	push   var
  ALU_RES = SP - 1
  TICK: 3071 PC:  49 ADDR:   0 MEM_OUT: 10946 ACC: 1 LG_ALU: 3913 RG_ALU:   1 SP: 3913 ZF: 0 |	push   var
  ALU_RES -> SP
  TICK: 3072 PC:  49 ADDR:   0 MEM_OUT: 10946 ACC: 1 LG_ALU: 3913 RG_ALU:   1 SP: 3912 ZF: 0 |	push   var
  WRITE ACC -> MEM[ALU]
  TICK: 3072 PC:  49 ADDR:   0 MEM_OUT: 10946 ACC: 1 LG_ALU: 3913 RG_ALU:   1 SP: 3912 ZF: 0 |	push   var
  ADDR -> ALU_RG
  TICK: 3073 PC:  50 ADDR:   0 MEM_OUT: 10946 ACC: 1 LG_ALU: 3913 RG_ALU:   8 SP: 3912 ZF: 0 |	load   var
  ALU_RES = ALU_RG
  TICK: 3074 PC:  50 ADDR:   0 MEM_OUT: 10946 ACC: 1 LG_ALU: 3913 RG_ALU:   8 SP: 3912 ZF: 0 |	load   var
  READ MEM[ALU]
  TICK: 3075 PC:  50 ADDR:   0 MEM_OUT: 6765 ACC: 1 LG_ALU: 3913 RG_ALU:   8 SP: 3912 ZF: 0 |	load   var
  MEM[ALU] -> ALU_RG
  TICK: 3076 PC:  50 ADDR:   0 MEM_OUT: 6765 ACC: 1 LG_ALU: 3913 RG_ALU: 6765 SP: 3912 ZF: 0 |	load   var
  ALU_RES = ALU_RG
  TICK: 3077 PC:  50 ADDR:   0 MEM_OUT: 6765 ACC: 1 LG_ALU: 3913 RG_ALU: 6765 SP: 3912 ZF: 0 |	load   var
  ALU_RES -> ACC
  TICK: 3078 PC:  50 ADDR:   0 MEM_OUT: 6765 ACC: 6765 LG_ALU: 3913 RG_ALU: 6765 SP: 3912 ZF: 0 |	load   var
  ADDR -> ALU_RG
  TICK: 3079 PC:  51 ADDR:   0 MEM_OUT: 6765 ACC: 6765 LG_ALU: 3913 RG_ALU:   5 SP: 3912 ZF: 0 |	store   var
  ALU_RES = ALU_RG
  TICK: 3080 PC:  51 ADDR:   0 MEM_OUT: 6765 ACC: 6765 LG_ALU: 3913 RG_ALU:   5 SP: 3912 ZF: 0 |	store   var
  WRITE ACC -> MEM[ALU]
  TICK: 3081 PC:  51 ADDR:   0 MEM_OUT: 6765 ACC: 6765 LG_ALU: 3913 RG_ALU:   5 SP: 3912 ZF: 0 |	store   var
  NUM -> ALU_RG
  TICK: 3082 PC:  52 ADDR:   0 MEM_OUT: 6765 ACC: 6765 LG_ALU: 3913 RG_ALU:   1 SP: 3912 ZF: 0 |	load   var
  ALU_RES = ALU_RG
  TICK: 3083 PC:  52 ADDR:   0 MEM_OUT: 6765 ACC: 6765 LG_ALU: 3913 RG_ALU:   1 SP: 3912 ZF: 0 |	load   var
  ALU_RES -> ACC
  TICK: 3084 PC:  52 ADDR:   0 MEM_OUT: 6765 ACC: 1 LG_ALU: 3913 RG_ALU:   1 SP: 3912 ZF: 0 |	load   var
  SP -> ALU_LG
  TICK: 3085 PC:  53 ADDR:   0 MEM_OUT: 6765 ACC: 1 LG_ALU: 3912 RG_ALU:   1 SP: 3912 ZF: 0 |	push   var
  ALU_RES = SP - 1
  TICK: 3086 PC:  53 ADDR:   0 MEM_OUT: 6765 ACC: 1 LG_ALU: 3912 RG_ALU:   1 SP: 3912 ZF: 0 |	push   var
  ALU_RES -> SP
  TICK: 3087 PC:  53 ADDR:   0 MEM_OUT: 6765 ACC: 1 LG_ALU: 3912 RG_ALU:   1 SP: 3911 ZF: 0 |	push   var
  WRITE ACC -> MEM[ALU]
  TICK: 3087 PC:  53 ADDR:   0 MEM_OUT: 6765 ACC: 1 LG_ALU: 3912 RG_ALU:   1 SP: 3911 ZF: 0 |	push   var
  ADDR -> ALU_RG
  TICK: 3088 PC:  54 ADDR:   0 MEM_OUT: 6765 ACC: 1 LG_ALU: 3912 RG_ALU:   6 SP: 3911 ZF: 0 |	load   <
  ALU_RES = ALU_RG
  TICK: 3089 PC:  54 ADDR:   0 MEM_OUT: 6765 ACC: 1 LG_ALU: 3912 RG_ALU:   6 SP: 3911 ZF: 0 |	load   <
  READ MEM[ALU]
  TICK: 3090 PC:  54 ADDR:   0 MEM_OUT: 10946 ACC: 1 LG_ALU: 3912 RG_ALU:   6 SP: 3911 ZF: 0 |	load   <
  MEM[ALU] -> ALU_RG
  TICK: 3091 PC:  54 ADDR:   0 MEM_OUT: 10946 ACC: 1 LG_ALU: 3912 RG_ALU: 10946 SP: 3911 ZF: 0 |	load   <
  ALU_RES = ALU_RG
  TICK: 3092 PC:  54 ADDR:   0 MEM_OUT: 10946 ACC: 1 LG_ALU: 3912 RG_ALU: 10946 SP: 3911 ZF: 0 |	load   <
  ALU_RES -> ACC
  TICK: 3093 PC:  54 ADDR:   0 MEM_OUT: 10946 ACC: 10946 LG_ALU: 3912 RG_ALU: 10946 SP: 3911 ZF: 0 |	load   <
  ADDR -> ALU_RG
  TICK: 3094 PC:  55 ADDR:   0 MEM_OUT: 10946 ACC: 10946 LG_ALU: 3912 RG_ALU:   7 SP: 3911 ZF: 0 |	sub   <
  ALU_RES = ALU_RG
  TICK: 3095 PC:  55 ADDR:   0 MEM_OUT: 10946 ACC: 10946 LG_ALU: 3912 RG_ALU:   7 SP: 3911 ZF: 0 |	sub   <
  READ MEM[ALU]
  TICK: 3096 PC:  55 ADDR:   0 MEM_OUT: 400000 ACC: 10946 LG_ALU: 3912 RG_ALU:   7 SP: 3911 ZF: 0 |	sub   <
  MEM[ALU] -> ALU_RG
  TICK: 3097 PC:  55 ADDR:   0 MEM_OUT: 400000 ACC: 10946 LG_ALU: 3912 RG_ALU: 400000 SP: 3911 ZF: 0 |	sub   <
  ACC -> ALU_LG
  TICK: 3097 PC:  55 ADDR:   0 MEM_OUT: 400000 ACC: 10946 LG_ALU: 10946 RG_ALU: 400000 SP: 3911 ZF: 0 |	sub   <
  ALU_RES = ALU_LG + ALU_RG
  TICK: 3098 PC:  55 ADDR:   0 MEM_OUT: 400000 ACC: 10946 LG_ALU: 10946 RG_ALU: 400000 SP: 3911 ZF: 0 |	sub   <
  ALU_RES -> ACC
  TICK: 3099 PC:  55 ADDR:   0 MEM_OUT: 400000 ACC: -389054 LG_ALU: 10946 RG_ALU: 400000 SP: 3911 ZF: 0 |	sub   <
  PC + 1 -> PC
  NUM -> ALU_RG
  TICK: 3100 PC:  57 ADDR:   0 MEM_OUT: 400000 ACC: -389054 LG_ALU: 10946 RG_ALU:   1 SP: 3911 ZF: 0 |	load   <
  ALU_RES = ALU_RG
  TICK: 3101 PC:  57 ADDR:   0 MEM_OUT: 400000 ACC: -389054 LG_ALU: 10946 RG_ALU:   1 SP: 3911 ZF: 0 |	load   <
  ALU_RES -> ACC
  TICK: 3102 PC:  57 ADDR:   0 MEM_OUT: 400000 ACC: 1 LG_ALU: 10946 RG_ALU:   1 SP: 3911 ZF: 0 |	load   <
  ADDR -> PC
  SP -> ALU_LG
  TICK: 3104 PC:  60 ADDR:   0 MEM_OUT: 400000 ACC: 1 LG_ALU: 3911 RG_ALU:   1 SP: 3911 ZF: 0 |	push   <
  ALU_RES = SP - 1
  TICK: 3105 PC:  60 ADDR:   0 MEM_OUT: 400000 ACC: 1 LG_ALU: 3911 RG_ALU:   1 SP: 3911 ZF: 0 |	push   <
  ALU_RES -> SP
  TICK: 3106 PC:  60 ADDR:   0 MEM_OUT: 400000 ACC: 1 LG_ALU: 3911 RG_ALU:   1 SP: 3910 ZF: 0 |	push   <
  WRITE ACC -> MEM[ALU]
  TICK: 3106 PC:  60 ADDR:   0 MEM_OUT: 400000 ACC: 1 LG_ALU: 3911 RG_ALU:   1 SP: 3910 ZF: 0 |	push   <
  SP -> ALU_LG
  TICK: 3107 PC:  61 ADDR:   0 MEM_OUT: 400000 ACC: 1 LG_ALU: 3910 RG_ALU:   1 SP: 3910 ZF: 0 |	pop
  ALU_RES = ALU_LG
  TICK: 3108 PC:  61 ADDR:   0 MEM_OUT: 400000 ACC: 1 LG_ALU: 3910 RG_ALU:   1 SP: 3910 ZF: 0 |	pop
  READ MEM[ALU]
  TICK: 3109 PC:  61 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3910 RG_ALU:   1 SP: 3910 ZF: 0 |	pop
  ALU_RES = SP + 1
  TICK: 3110 PC:  61 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3910 RG_ALU:   1 SP: 3910 ZF: 0 |	pop
  ALU_RES -> SP
  TICK: 3111 PC:  61 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3910 RG_ALU:   1 SP: 3911 ZF: 0 |	pop
  MEM[ALU] -> ALU_RG
  TICK: 3111 PC:  61 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3910 RG_ALU:   1 SP: 3911 ZF: 0 |	pop
  ALU_RES = ALU_RG
  TICK: 3112 PC:  61 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3910 RG_ALU:   1 SP: 3911 ZF: 0 |	pop
  ALU_RES -> ACC
  TICK: 3113 PC:  61 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3910 RG_ALU:   1 SP: 3911 ZF: 0 |	pop
  ADDR -> PC
  ADDR -> PC
  ADDR -> ALU_RG
  TICK: 3116 PC:  24 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3910 RG_ALU:   6 SP: 3911 ZF: 0 |	load
  ALU_RES = ALU_RG
  TICK: 3117 PC:  24 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3910 RG_ALU:   6 SP: 3911 ZF: 0 |	load
  READ MEM[ALU]
  TICK: 3118 PC:  24 ADDR:   0 MEM_OUT: 10946 ACC: 1 LG_ALU: 3910 RG_ALU:   6 SP: 3911 ZF: 0 |	load
  MEM[ALU] -> ALU_RG
  TICK: 3119 PC:  24 ADDR:   0 MEM_OUT: 10946 ACC: 1 LG_ALU: 3910 RG_ALU: 10946 SP: 3911 ZF: 0 |	load
  ALU_RES = ALU_RG
  TICK: 3120 PC:  24 ADDR:   0 MEM_OUT: 10946 ACC: 1 LG_ALU: 3910 RG_ALU: 10946 SP: 3911 ZF: 0 |	load
  ALU_RES -> ACC
  TICK: 3121 PC:  24 ADDR:   0 MEM_OUT: 10946 ACC: 10946 LG_ALU: 3910 RG_ALU: 10946 SP: 3911 ZF: 0 |	load
  NUM -> ALU_RG
  TICK: 3122 PC:  25 ADDR:   0 MEM_OUT: 10946 ACC: 10946 LG_ALU: 3910 RG_ALU:   2 SP: 3911 ZF: 0 |	mod
  ACC -> ALU_LG
  TICK: 3122 PC:  25 ADDR:   0 MEM_OUT: 10946 ACC: 10946 LG_ALU: 10946 RG_ALU:   2 SP: 3911 ZF: 0 |	mod
  ALU_RES = ALU_LG % ALU_RG
  TICK: 3123 PC:  25 ADDR:   0 MEM_OUT: 10946 ACC: 10946 LG_ALU: 10946 RG_ALU:   2 SP: 3911 ZF: 1 |	mod
  ALU_RES -> ACC
  TICK: 3124 PC:  25 ADDR:   0 MEM_OUT: 10946 ACC: 0 LG_ALU: 10946 RG_ALU:   2 SP: 3911 ZF: 1 |	mod
  SP -> ALU_LG
  TICK: 3125 PC:  26 ADDR:   0 MEM_OUT: 10946 ACC: 0 LG_ALU: 3911 RG_ALU:   2 SP: 3911 ZF: 1 |	push
  ALU_RES = SP - 1
  TICK: 3126 PC:  26 ADDR:   0 MEM_OUT: 10946 ACC: 0 LG_ALU: 3911 RG_ALU:   2 SP: 3911 ZF: 0 |	push
  ALU_RES -> SP
  TICK: 3127 PC:  26 ADDR:   0 MEM_OUT: 10946 ACC: 0 LG_ALU: 3911 RG_ALU:   2 SP: 3910 ZF: 0 |	push
  WRITE ACC -> MEM[ALU]
  TICK: 3127 PC:  26 ADDR:   0 MEM_OUT: 10946 ACC: 0 LG_ALU: 3911 RG_ALU:   2 SP: 3910 ZF: 0 |	push
  NUM -> ALU_RG
  TICK: 3128 PC:  27 ADDR:   0 MEM_OUT: 10946 ACC: 0 LG_ALU: 3911 RG_ALU:   0 SP: 3910 ZF: 0 |	load   =
  ALU_RES = ALU_RG
  TICK: 3129 PC:  27 ADDR:   0 MEM_OUT: 10946 ACC: 0 LG_ALU: 3911 RG_ALU:   0 SP: 3910 ZF: 1 |	load   =
  ALU_RES -> ACC
  TICK: 3130 PC:  27 ADDR:   0 MEM_OUT: 10946 ACC: 0 LG_ALU: 3911 RG_ALU:   0 SP: 3910 ZF: 1 |	load   =
  SP -> ALU_LG
  TICK: 3131 PC:  28 ADDR:   0 MEM_OUT: 10946 ACC: 0 LG_ALU: 3910 RG_ALU:   0 SP: 3910 ZF: 1 |	sub   =
  ALU_RES = ALU_LG
  TICK: 3132 PC:  28 ADDR:   0 MEM_OUT: 10946 ACC: 0 LG_ALU: 3910 RG_ALU:   0 SP: 3910 ZF: 0 |	sub   =
  READ MEM[ALU]
  TICK: 3133 PC:  28 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3910 RG_ALU:   0 SP: 3910 ZF: 0 |	sub   =
  MEM[ALU] -> ALU_RG
  TICK: 3134 PC:  28 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3910 RG_ALU:   0 SP: 3910 ZF: 0 |	sub   =
  ALU_RES = SP + 1
  TICK: 3135 PC:  28 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3910 RG_ALU:   0 SP: 3910 ZF: 0 |	sub   =
  ALU_RES -> SP
  TICK: 3136 PC:  28 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3910 RG_ALU:   0 SP: 3911 ZF: 0 |	sub   =
  ACC -> ALU_LG
  TICK: 3136 PC:  28 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU:   0 RG_ALU:   0 SP: 3911 ZF: 0 |	sub   =
  ALU_RES = ALU_LG + ALU_RG
  TICK: 3137 PC:  28 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU:   0 RG_ALU:   0 SP: 3911 ZF: 1 |	sub   =
  ALU_RES -> ACC
  TICK: 3138 PC:  28 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU:   0 RG_ALU:   0 SP: 3911 ZF: 1 |	sub   =
  PC + 1 -> PC
  NUM -> ALU_RG
  TICK: 3139 PC:  30 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU:   0 RG_ALU:   1 SP: 3911 ZF: 1 |	load   =
  ALU_RES = ALU_RG
  TICK: 3140 PC:  30 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU:   0 RG_ALU:   1 SP: 3911 ZF: 0 |	load   =
  ALU_RES -> ACC
  TICK: 3141 PC:  30 ADDR:   0 MEM_OUT: 0 ACC: 1 LG_ALU:   0 RG_ALU:   1 SP: 3911 ZF: 0 |	load   =
  ADDR -> PC
  SP -> ALU_LG
  TICK: 3143 PC:  33 ADDR:   0 MEM_OUT: 0 ACC: 1 LG_ALU: 3911 RG_ALU:   1 SP: 3911 ZF: 0 |	push   =
  ALU_RES = SP - 1
  TICK: 3144 PC:  33 ADDR:   0 MEM_OUT: 0 ACC: 1 LG_ALU: 3911 RG_ALU:   1 SP: 3911 ZF: 0 |	push   =
  ALU_RES -> SP
  TICK: 3145 PC:  33 ADDR:   0 MEM_OUT: 0 ACC: 1 LG_ALU: 3911 RG_ALU:   1 SP: 3910 ZF: 0 |	push   =
  WRITE ACC -> MEM[ALU]
  TICK: 3145 PC:  33 ADDR:   0 MEM_OUT: 0 ACC: 1 LG_ALU: 3911 RG_ALU:   1 SP: 3910 ZF: 0 |	push   =
  SP -> ALU_LG
  TICK: 3146 PC:  34 ADDR:   0 MEM_OUT: 0 ACC: 1 LG_ALU: 3910 RG_ALU:   1 SP: 3910 ZF: 0 |	pop   if
  ALU_RES = ALU_LG
  TICK: 3147 PC:  34 ADDR:   0 MEM_OUT: 0 ACC: 1 LG_ALU: 3910 RG_ALU:   1 SP: 3910 ZF: 0 |	pop   if
  READ MEM[ALU]
  TICK: 3148 PC:  34 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3910 RG_ALU:   1 SP: 3910 ZF: 0 |	pop   if
  ALU_RES = SP + 1
  TICK: 3149 PC:  34 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3910 RG_ALU:   1 SP: 3910 ZF: 0 |	pop   if
  ALU_RES -> SP
  TICK: 3150 PC:  34 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3910 RG_ALU:   1 SP: 3911 ZF: 0 |	pop   if
  MEM[ALU] -> ALU_RG
  TICK: 3150 PC:  34 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3910 RG_ALU:   1 SP: 3911 ZF: 0 |	pop   if
  ALU_RES = ALU_RG
  TICK: 3151 PC:  34 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3910 RG_ALU:   1 SP: 3911 ZF: 0 |	pop   if
  ALU_RES -> ACC
  TICK: 3152 PC:  34 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3910 RG_ALU:   1 SP: 3911 ZF: 0 |	pop   if
  ADDR -> PC
  ADDR -> ALU_RG
  TICK: 3154 PC:   7 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3910 RG_ALU:   6 SP: 3911 ZF: 0 |	load   print
  ALU_RES = ALU_RG
  TICK: 3155 PC:   7 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3910 RG_ALU:   6 SP: 3911 ZF: 0 |	load   print
  READ MEM[ALU]
  TICK: 3156 PC:   7 ADDR:   0 MEM_OUT: 10946 ACC: 1 LG_ALU: 3910 RG_ALU:   6 SP: 3911 ZF: 0 |	load   print
  MEM[ALU] -> ALU_RG
  TICK: 3157 PC:   7 ADDR:   0 MEM_OUT: 10946 ACC: 1 LG_ALU: 3910 RG_ALU: 10946 SP: 3911 ZF: 0 |	load   print
  ALU_RES = ALU_RG
  TICK: 3158 PC:   7 ADDR:   0 MEM_OUT: 10946 ACC: 1 LG_ALU: 3910 RG_ALU: 10946 SP: 3911 ZF: 0 |	load   print
  ALU_RES -> ACC
  TICK: 3159 PC:   7 ADDR:   0 MEM_OUT: 10946 ACC: 10946 LG_ALU: 3910 RG_ALU: 10946 SP: 3911 ZF: 0 |	load   print
  get IO module port
  TICK: 3160 PC:   8 ADDR:   0 MEM_OUT: 10946 ACC: 10946 LG_ALU: 3910 RG_ALU: 10946 SP: 3911 ZF: 0 |	output   print
  ACC -> OUTPUT 
  TICK: 3161 PC:   8 ADDR:   0 MEM_OUT: 10946 ACC: 10946 LG_ALU: 3910 RG_ALU: 10946 SP: 3911 ZF: 0 |	output   print
  NUM -> ALU_RG
  TICK: 3162 PC:   9 ADDR:   0 MEM_OUT: 10946 ACC: 10946 LG_ALU: 3910 RG_ALU:   1 SP: 3911 ZF: 0 |	load   print
  ALU_RES = ALU_RG
  TICK: 3163 PC:   9 ADDR:   0 MEM_OUT: 10946 ACC: 10946 LG_ALU: 3910 RG_ALU:   1 SP: 3911 ZF: 0 |	load   print
  ALU_RES -> ACC
  TICK: 3164 PC:   9 ADDR:   0 MEM_OUT: 10946 ACC: 1 LG_ALU: 3910 RG_ALU:   1 SP: 3911 ZF: 0 |	load   print
  SP -> ALU_LG
  TICK: 3165 PC:  10 ADDR:   0 MEM_OUT: 10946 ACC: 1 LG_ALU: 3911 RG_ALU:   1 SP: 3911 ZF: 0 |	push   print
  ALU_RES = SP - 1
  TICK: 3166 PC:  10 ADDR:   0 MEM_OUT: 10946 ACC: 1 LG_ALU: 3911 RG_ALU:   1 SP: 3911 ZF: 0 |	push   print
  ALU_RES -> SP
  TICK: 3167 PC:  10 ADDR:   0 MEM_OUT: 10946 ACC: 1 LG_ALU: 3911 RG_ALU:   1 SP: 3910 ZF: 0 |	push   print
  WRITE ACC -> MEM[ALU]
  TICK: 3167 PC:  10 ADDR:   0 MEM_OUT: 10946 ACC: 1 LG_ALU: 3911 RG_ALU:   1 SP: 3910 ZF: 0 |	push   print
  NUM -> ALU_RG
  TICK: 3168 PC:  11 ADDR:   0 MEM_OUT: 10946 ACC: 1 LG_ALU: 3911 RG_ALU:  95 SP: 3910 ZF: 0 |	load   print
  ALU_RES = ALU_RG
  TICK: 3169 PC:  11 ADDR:   0 MEM_OUT: 10946 ACC: 1 LG_ALU: 3911 RG_ALU:  95 SP: 3910 ZF: 0 |	load   print
  ALU_RES -> ACC
  TICK: 3170 PC:  11 ADDR:   0 MEM_OUT: 10946 ACC: 95 LG_ALU: 3911 RG_ALU:  95 SP: 3910 ZF: 0 |	load   print
  get IO module port
  TICK: 3171 PC:  12 ADDR:   0 MEM_OUT: 10946 ACC: 95 LG_ALU: 3911 RG_ALU:  95 SP: 3910 ZF: 0 |	output   print
  ACC -> OUTPUT 
  TICK: 3172 PC:  12 ADDR:   0 MEM_OUT: 10946 ACC: 95 LG_ALU: 3911 RG_ALU:  95 SP: 3910 ZF: 0 |	output   print
  NUM -> ALU_RG
  TICK: 3173 PC:  13 ADDR:   0 MEM_OUT: 10946 ACC: 95 LG_ALU: 3911 RG_ALU:   0 SP: 3910 ZF: 0 |	load   print
  ALU_RES = ALU_RG
  TICK: 3174 PC:  13 ADDR:   0 MEM_OUT: 10946 ACC: 95 LG_ALU: 3911 RG_ALU:   0 SP: 3910 ZF: 1 |	load   print
  ALU_RES -> ACC
  TICK: 3175 PC:  13 ADDR:   0 MEM_OUT: 10946 ACC: 0 LG_ALU: 3911 RG_ALU:   0 SP: 3910 ZF: 1 |	load   print
  get IO module port
  TICK: 3176 PC:  14 ADDR:   0 MEM_OUT: 10946 ACC: 0 LG_ALU: 3911 RG_ALU:   0 SP: 3910 ZF: 1 |	output   print
  ACC -> OUTPUT 
  TICK: 3177 PC:  14 ADDR:   0 MEM_OUT: 10946 ACC: 0 LG_ALU: 3911 RG_ALU:   0 SP: 3910 ZF: 1 |	output   print
  NUM -> ALU_RG
  TICK: 3178 PC:  15 ADDR:   0 MEM_OUT: 10946 ACC: 0 LG_ALU: 3911 RG_ALU:   0 SP: 3910 ZF: 1 |	load   print
  ALU_RES = ALU_RG
  TICK: 3179 PC:  15 ADDR:   0 MEM_OUT: 10946 ACC: 0 LG_ALU: 3911 RG_ALU:   0 SP: 3910 ZF: 1 |	load   print
  ALU_RES -> ACC
  TICK: 3180 PC:  15 ADDR:   0 MEM_OUT: 10946 ACC: 0 LG_ALU: 3911 RG_ALU:   0 SP: 3910 ZF: 1 |	load   print
  get IO module port
  TICK: 3181 PC:  16 ADDR:   0 MEM_OUT: 10946 ACC: 0 LG_ALU: 3911 RG_ALU:   0 SP: 3910 ZF: 1 |	output   print
  ACC -> OUTPUT 
  TICK: 3182 PC:  16 ADDR:   0 MEM_OUT: 10946 ACC: 0 LG_ALU: 3911 RG_ALU:   0 SP: 3910 ZF: 1 |	output   print
  NUM -> ALU_RG
  TICK: 3183 PC:  17 ADDR:   0 MEM_OUT: 10946 ACC: 0 LG_ALU: 3911 RG_ALU:   1 SP: 3910 ZF: 1 |	load   print
  ALU_RES = ALU_RG
  TICK: 3184 PC:  17 ADDR:   0 MEM_OUT: 10946 ACC: 0 LG_ALU: 3911 RG_ALU:   1 SP: 3910 ZF: 0 |	load   print
  ALU_RES -> ACC
  TICK: 3185 PC:  17 ADDR:   0 MEM_OUT: 10946 ACC: 1 LG_ALU: 3911 RG_ALU:   1 SP: 3910 ZF: 0 |	load   print
  SP -> ALU_LG
  TICK: 3186 PC:  18 ADDR:   0 MEM_OUT: 10946 ACC: 1 LG_ALU: 3910 RG_ALU:   1 SP: 3910 ZF: 0 |	push   print
  ALU_RES = SP - 1
  TICK: 3187 PC:  18 ADDR:   0 MEM_OUT: 10946 ACC: 1 LG_ALU: 3910 RG_ALU:   1 SP: 3910 ZF: 0 |	push   print
  ALU_RES -> SP
  TICK: 3188 PC:  18 ADDR:   0 MEM_OUT: 10946 ACC: 1 LG_ALU: 3910 RG_ALU:   1 SP: 3909 ZF: 0 |	push   print
  WRITE ACC -> MEM[ALU]
  TICK: 3188 PC:  18 ADDR:   0 MEM_OUT: 10946 ACC: 1 LG_ALU: 3910 RG_ALU:   1 SP: 3909 ZF: 0 |	push   print
  ADDR -> PC
  SP -> ALU_LG
  TICK: 3190 PC:  37 ADDR:   0 MEM_OUT: 10946 ACC: 1 LG_ALU: 3909 RG_ALU:   1 SP: 3909 ZF: 0 |	pop   if
  ALU_RES = ALU_LG
  TICK: 3191 PC:  37 ADDR:   0 MEM_OUT: 10946 ACC: 1 LG_ALU: 3909 RG_ALU:   1 SP: 3909 ZF: 0 |	pop   if
  READ MEM[ALU]
  TICK: 3192 PC:  37 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3909 RG_ALU:   1 SP: 3909 ZF: 0 |	pop   if
  ALU_RES = SP + 1
  TICK: 3193 PC:  37 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3909 RG_ALU:   1 SP: 3909 ZF: 0 |	pop   if
  ALU_RES -> SP
  TICK: 3194 PC:  37 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3909 RG_ALU:   1 SP: 3910 ZF: 0 |	pop   if
  MEM[ALU] -> ALU_RG
  TICK: 3194 PC:  37 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3909 RG_ALU:   1 SP: 3910 ZF: 0 |	pop   if
  ALU_RES = ALU_RG
  TICK: 3195 PC:  37 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3909 RG_ALU:   1 SP: 3910 ZF: 0 |	pop   if
  ALU_RES -> ACC
  TICK: 3196 PC:  37 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3909 RG_ALU:   1 SP: 3910 ZF: 0 |	pop   if
  SP -> ALU_LG
  TICK: 3197 PC:  38 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3910 RG_ALU:   1 SP: 3910 ZF: 0 |	push   if
  ALU_RES = SP - 1
  TICK: 3198 PC:  38 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3910 RG_ALU:   1 SP: 3910 ZF: 0 |	push   if
  ALU_RES -> SP
  TICK: 3199 PC:  38 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3910 RG_ALU:   1 SP: 3909 ZF: 0 |	push   if
  WRITE ACC -> MEM[ALU]
  TICK: 3199 PC:  38 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3910 RG_ALU:   1 SP: 3909 ZF: 0 |	push   if
  ADDR -> ALU_RG
  TICK: 3200 PC:  39 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3910 RG_ALU:   6 SP: 3909 ZF: 0 |	load   var
  ALU_RES = ALU_RG
  TICK: 3201 PC:  39 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3910 RG_ALU:   6 SP: 3909 ZF: 0 |	load   var
  READ MEM[ALU]
  TICK: 3202 PC:  39 ADDR:   0 MEM_OUT: 10946 ACC: 1 LG_ALU: 3910 RG_ALU:   6 SP: 3909 ZF: 0 |	load   var
  MEM[ALU] -> ALU_RG
  TICK: 3203 PC:  39 ADDR:   0 MEM_OUT: 10946 ACC: 1 LG_ALU: 3910 RG_ALU: 10946 SP: 3909 ZF: 0 |	load   var
  ALU_RES = ALU_RG
  TICK: 3204 PC:  39 ADDR:   0 MEM_OUT: 10946 ACC: 1 LG_ALU: 3910 RG_ALU: 10946 SP: 3909 ZF: 0 |	load   var
  ALU_RES -> ACC
  TICK: 3205 PC:  39 ADDR:   0 MEM_OUT: 10946 ACC: 10946 LG_ALU: 3910 RG_ALU: 10946 SP: 3909 ZF: 0 |	load   var
  ADDR -> ALU_RG
  TICK: 3206 PC:  40 ADDR:   0 MEM_OUT: 10946 ACC: 10946 LG_ALU: 3910 RG_ALU:   8 SP: 3909 ZF: 0 |	store   var
  ALU_RES = ALU_RG
  TICK: 3207 PC:  40 ADDR:   0 MEM_OUT: 10946 ACC: 10946 LG_ALU: 3910 RG_ALU:   8 SP: 3909 ZF: 0 |	store   var
  WRITE ACC -> MEM[ALU]
  TICK: 3208 PC:  40 ADDR:   0 MEM_OUT: 10946 ACC: 10946 LG_ALU: 3910 RG_ALU:   8 SP: 3909 ZF: 0 |	store   var
  NUM -> ALU_RG
  TICK: 3209 PC:  41 ADDR:   0 MEM_OUT: 10946 ACC: 10946 LG_ALU: 3910 RG_ALU:   1 SP: 3909 ZF: 0 |	load   var
  ALU_RES = ALU_RG
  TICK: 3210 PC:  41 ADDR:   0 MEM_OUT: 10946 ACC: 10946 LG_ALU: 3910 RG_ALU:   1 SP: 3909 ZF: 0 |	load   var
  ALU_RES -> ACC
  TICK: 3211 PC:  41 ADDR:   0 MEM_OUT: 10946 ACC: 1 LG_ALU: 3910 RG_ALU:   1 SP: 3909 ZF: 0 |	load   var
  SP -> ALU_LG
  TICK: 3212 PC:  42 ADDR:   0 MEM_OUT: 10946 ACC: 1 LG_ALU: 3909 RG_ALU:   1 SP: 3909 ZF: 0 |	push   var
  ALU_RES = SP - 1
  TICK: 3213 PC:  42 ADDR:   0 MEM_OUT: 10946 ACC: 1 LG_ALU: 3909 RG_ALU:   1 SP: 3909 ZF: 0 |	push   var
  ALU_RES -> SP
  TICK: 3214 PC:  42 ADDR:   0 MEM_OUT: 10946 ACC: 1 LG_ALU: 3909 RG_ALU:   1 SP: 3908 ZF: 0 |	push   var
  WRITE ACC -> MEM[ALU]
  TICK: 3214 PC:  42 ADDR:   0 MEM_OUT: 10946 ACC: 1 LG_ALU: 3909 RG_ALU:   1 SP: 3908 ZF: 0 |	push   var
  ADDR -> ALU_RG
  TICK: 3215 PC:  43 ADDR:   0 MEM_OUT: 10946 ACC: 1 LG_ALU: 3909 RG_ALU:   5 SP: 3908 ZF: 0 |	load   +
  ALU_RES = ALU_RG
  TICK: 3216 PC:  43 ADDR:   0 MEM_OUT: 10946 ACC: 1 LG_ALU: 3909 RG_ALU:   5 SP: 3908 ZF: 0 |	load   +
  READ MEM[ALU]
  TICK: 3217 PC:  43 ADDR:   0 MEM_OUT: 6765 ACC: 1 LG_ALU: 3909 RG_ALU:   5 SP: 3908 ZF: 0 |	load   +
  MEM[ALU] -> ALU_RG
  TICK: 3218 PC:  43 ADDR:   0 MEM_OUT: 6765 ACC: 1 LG_ALU: 3909 RG_ALU: 6765 SP: 3908 ZF: 0 |	load   +
  ALU_RES = ALU_RG
  TICK: 3219 PC:  43 ADDR:   0 MEM_OUT: 6765 ACC: 1 LG_ALU: 3909 RG_ALU: 6765 SP: 3908 ZF: 0 |	load   +
  ALU_RES -> ACC
  TICK: 3220 PC:  43 ADDR:   0 MEM_OUT: 6765 ACC: 6765 LG_ALU: 3909 RG_ALU: 6765 SP: 3908 ZF: 0 |	load   +
  ADDR -> ALU_RG
  TICK: 3221 PC:  44 ADDR:   0 MEM_OUT: 6765 ACC: 6765 LG_ALU: 3909 RG_ALU:   6 SP: 3908 ZF: 0 |	add   +
  ALU_RES = ALU_RG
  TICK: 3222 PC:  44 ADDR:   0 MEM_OUT: 6765 ACC: 6765 LG_ALU: 3909 RG_ALU:   6 SP: 3908 ZF: 0 |	add   +
  READ MEM[ALU]
  TICK: 3223 PC:  44 ADDR:   0 MEM_OUT: 10946 ACC: 6765 LG_ALU: 3909 RG_ALU:   6 SP: 3908 ZF: 0 |	add   +
  MEM[ALU] -> ALU_RG
  TICK: 3224 PC:  44 ADDR:   0 MEM_OUT: 10946 ACC: 6765 LG_ALU: 3909 RG_ALU: 10946 SP: 3908 ZF: 0 |	add   +
  ACC -> ALU_LG
  TICK: 3224 PC:  44 ADDR:   0 MEM_OUT: 10946 ACC: 6765 LG_ALU: 6765 RG_ALU: 10946 SP: 3908 ZF: 0 |	add   +
  ALU_RES = ALU_LG + ALU_RG
  TICK: 3225 PC:  44 ADDR:   0 MEM_OUT: 10946 ACC: 6765 LG_ALU: 6765 RG_ALU: 10946 SP: 3908 ZF: 0 |	add   +
  ALU_RES -> ACC
  TICK: 3226 PC:  44 ADDR:   0 MEM_OUT: 10946 ACC: 17711 LG_ALU: 6765 RG_ALU: 10946 SP: 3908 ZF: 0 |	add   +
  SP -> ALU_LG
  TICK: 3227 PC:  45 ADDR:   0 MEM_OUT: 10946 ACC: 17711 LG_ALU: 3908 RG_ALU: 10946 SP: 3908 ZF: 0 |	push   +
  ALU_RES = SP - 1
  TICK: 3228 PC:  45 ADDR:   0 MEM_OUT: 10946 ACC: 17711 LG_ALU: 3908 RG_ALU: 10946 SP: 3908 ZF: 0 |	push   +
  ALU_RES -> SP
  TICK: 3229 PC:  45 ADDR:   0 MEM_OUT: 10946 ACC: 17711 LG_ALU: 3908 RG_ALU: 10946 SP: 3907 ZF: 0 |	push   +
  WRITE ACC -> MEM[ALU]
  TICK: 3229 PC:  45 ADDR:   0 MEM_OUT: 10946 ACC: 17711 LG_ALU: 3908 RG_ALU: 10946 SP: 3907 ZF: 0 |	push   +
  SP -> ALU_LG
  TICK: 3230 PC:  46 ADDR:   0 MEM_OUT: 10946 ACC: 17711 LG_ALU: 3907 RG_ALU: 10946 SP: 3907 ZF: 0 |	pop   var
  ALU_RES = ALU_LG
  TICK: 3231 PC:  46 ADDR:   0 MEM_OUT: 10946 ACC: 17711 LG_ALU: 3907 RG_ALU: 10946 SP: 3907 ZF: 0 |	pop   var
  READ MEM[ALU]
  TICK: 3232 PC:  46 ADDR:   0 MEM_OUT: 17711 ACC: 17711 LG_ALU: 3907 RG_ALU: 10946 SP: 3907 ZF: 0 |	pop   var
  ALU_RES = SP + 1
  TICK: 3233 PC:  46 ADDR:   0 MEM_OUT: 17711 ACC: 17711 LG_ALU: 3907 RG_ALU: 10946 SP: 3907 ZF: 0 |	pop   var
  ALU_RES -> SP
  TICK: 3234 PC:  46 ADDR:   0 MEM_OUT: 17711 ACC: 17711 LG_ALU: 3907 RG_ALU: 10946 SP: 3908 ZF: 0 |	pop   var
  MEM[ALU] -> ALU_RG
  TICK: 3234 PC:  46 ADDR:   0 MEM_OUT: 17711 ACC: 17711 LG_ALU: 3907 RG_ALU: 17711 SP: 3908 ZF: 0 |	pop   var
  ALU_RES = ALU_RG
  TICK: 3235 PC:  46 ADDR:   0 MEM_OUT: 17711 ACC: 17711 LG_ALU: 3907 RG_ALU: 17711 SP: 3908 ZF: 0 |	pop   var
  ALU_RES -> ACC
  TICK: 3236 PC:  46 ADDR:   0 MEM_OUT: 17711 ACC: 17711 LG_ALU: 3907 RG_ALU: 17711 SP: 3908 ZF: 0 |	pop   var
  ADDR -> ALU_RG
  TICK: 3237 PC:  47 ADDR:   0 MEM_OUT: 17711 ACC: 17711 LG_ALU: 3907 RG_ALU:   6 SP: 3908 ZF: 0 |	store   var
  ALU_RES = ALU_RG
  TICK: 3238 PC:  47 ADDR:   0 MEM_OUT: 17711 ACC: 17711 LG_ALU: 3907 RG_ALU:   6 SP: 3908 ZF: 0 |	store   var
  WRITE ACC -> MEM[ALU]
  TICK: 3239 PC:  47 ADDR:   0 MEM_OUT: 17711 ACC: 17711 LG_ALU: 3907 RG_ALU:   6 SP: 3908 ZF: 0 |	store   var
  NUM -> ALU_RG
  TICK: 3240 PC:  48 ADDR:   0 MEM_OUT: 17711 ACC: 17711 LG_ALU: 3907 RG_ALU:   1 SP: 3908 ZF: 0 |	load   var
  ALU_RES = ALU_RG
  TICK: 3241 PC:  48 ADDR:   0 MEM_OUT: 17711 ACC: 17711 LG_ALU: 3907 RG_ALU:   1 SP: 3908 ZF: 0 |	load   var
  ALU_RES -> ACC
  TICK: 3242 PC:  48 ADDR:   0 MEM_OUT: 17711 ACC: 1 LG_ALU: 3907 RG_ALU:   1 SP: 3908 ZF: 0 |	load   var
  SP -> ALU_LG
  TICK: 3243 PC:  49 ADDR:   0 MEM_OUT: 17711 ACC: 1 LG_ALU: 3908 RG_ALU:   1 SP: 3908 ZF: 0 |	push   var
  ALU_RES = SP - 1
  TICK: 3244 PC:  49 ADDR:   0 MEM_OUT: 17711 ACC: 1 LG_ALU: 3908 RG_ALU:   1 SP: 3908 ZF: 0 |	push   var
  ALU_RES -> SP
  TICK: 3245 PC:  49 ADDR:   0 MEM_OUT: 17711 ACC: 1 LG_ALU: 3908 RG_ALU:   1 SP: 3907 ZF: 0 |	push   var
  WRITE ACC -> MEM[ALU]
  TICK: 3245 PC:  49 ADDR:   0 MEM_OUT: 17711 ACC: 1 LG_ALU: 3908 RG_ALU:   1 SP: 3907 ZF: 0 |	push   var
  ADDR -> ALU_RG
  TICK: 3246 PC:  50 ADDR:   0 MEM_OUT: 17711 ACC: 1 LG_ALU: 3908 RG_ALU:   8 SP: 3907 ZF: 0 |	load   var
  ALU_RES = ALU_RG
  TICK: 3247 PC:  50 ADDR:   0 MEM_OUT: 17711 ACC: 1 LG_ALU: 3908 RG_ALU:   8 SP: 3907 ZF: 0 |	load   var
  READ MEM[ALU]
  TICK: 3248 PC:  50 ADDR:   0 MEM_OUT: 10946 ACC: 1 LG_ALU: 3908 RG_ALU:   8 SP: 3907 ZF: 0 |	load   var
  MEM[ALU] -> ALU_RG
  TICK: 3249 PC:  50 ADDR:   0 MEM_OUT: 10946 ACC: 1 LG_ALU: 3908 RG_ALU: 10946 SP: 3907 ZF: 0 |	load   var
  ALU_RES = ALU_RG
  TICK: 3250 PC:  50 ADDR:   0 MEM_OUT: 10946 ACC: 1 LG_ALU: 3908 RG_ALU: 10946 SP: 3907 ZF: 0 |	load   var
  ALU_RES -> ACC
  TICK: 3251 PC:  50 ADDR:   0 MEM_OUT: 10946 ACC: 10946 LG_ALU: 3908 RG_ALU: 10946 SP: 3907 ZF: 0 |	load   var
  ADDR -> ALU_RG
  TICK: 3252 PC:  51 ADDR:   0 MEM_OUT: 10946 ACC: 10946 LG_ALU: 3908 RG_ALU:   5 SP: 3907 ZF: 0 |	store   var
  ALU_RES = ALU_RG
  TICK: 3253 PC:  51 ADDR:   0 MEM_OUT: 10946 ACC: 10946 LG_ALU: 3908 RG_ALU:   5 SP: 3907 ZF: 0 |	store   var
  WRITE ACC -> MEM[ALU]
  TICK: 3254 PC:  51 ADDR:   0 MEM_OUT: 10946 ACC: 10946 LG_ALU: 3908 RG_ALU:   5 SP: 3907 ZF: 0 |	store   var
  NUM -> ALU_RG
  TICK: 3255 PC:  52 ADDR:   0 MEM_OUT: 10946 ACC: 10946 LG_ALU: 3908 RG_ALU:   1 SP: 3907 ZF: 0 |	load   var
  ALU_RES = ALU_RG
  TICK: 3256 PC:  52 ADDR:   0 MEM_OUT: 10946 ACC: 10946 LG_ALU: 3908 RG_ALU:   1 SP: 3907 ZF: 0 |	load   var
  ALU_RES -> ACC
  TICK: 3257 PC:  52 ADDR:   0 MEM_OUT: 10946 ACC: 1 LG_ALU: 3908 RG_ALU:   1 SP: 3907 ZF: 0 |	load   var
  SP -> ALU_LG
  TICK: 3258 PC:  53 ADDR:   0 MEM_OUT: 10946 ACC: 1 LG_ALU: 3907 RG_ALU:   1 SP: 3907 ZF: 0 |	push   var
  ALU_RES = SP - 1
  TICK: 3259 PC:  53 ADDR:   0 MEM_OUT: 10946 ACC: 1 LG_ALU: 3907 RG_ALU:   1 SP: 3907 ZF: 0 |	push   var
  ALU_RES -> SP
  TICK: 3260 PC:  53 ADDR:   0 MEM_OUT: 10946 ACC: 1 LG_ALU: 3907 RG_ALU:   1 SP: 3906 ZF: 0 |	push   var
  WRITE ACC -> MEM[ALU]
  TICK: 3260 PC:  53 ADDR:   0 MEM_OUT: 10946 ACC: 1 LG_ALU: 3907 RG_ALU:   1 SP: 3906 ZF: 0 |	push   var
  ADDR -> ALU_RG
  TICK: 3261 PC:  54 ADDR:   0 MEM_OUT: 10946 ACC: 1 LG_ALU: 3907 RG_ALU:   6 SP: 3906 ZF: 0 |	load   <
  ALU_RES = ALU_RG
  TICK: 3262 PC:  54 ADDR:   0 MEM_OUT: 10946 ACC: 1 LG_ALU: 3907 RG_ALU:   6 SP: 3906 ZF: 0 |	load   <
  READ MEM[ALU]
  TICK: 3263 PC:  54 ADDR:   0 MEM_OUT: 17711 ACC: 1 LG_ALU: 3907 RG_ALU:   6 SP: 3906 ZF: 0 |	load   <
  MEM[ALU] -> ALU_RG
  TICK: 3264 PC:  54 ADDR:   0 MEM_OUT: 17711 ACC: 1 LG_ALU: 3907 RG_ALU: 17711 SP: 3906 ZF: 0 |	load   <
  ALU_RES = ALU_RG
  TICK: 3265 PC:  54 ADDR:   0 MEM_OUT: 17711 ACC: 1 LG_ALU: 3907 RG_ALU: 17711 SP: 3906 ZF: 0 |	load   <
  ALU_RES -> ACC
  TICK: 3266 PC:  54 ADDR:   0 MEM_OUT: 17711 ACC: 17711 LG_ALU: 3907 RG_ALU: 17711 SP: 3906 ZF: 0 |	load   <
  ADDR -> ALU_RG
  TICK: 3267 PC:  55 ADDR:   0 MEM_OUT: 17711 ACC: 17711 LG_ALU: 3907 RG_ALU:   7 SP: 3906 ZF: 0 |	sub   <
  ALU_RES = ALU_RG
  TICK: 3268 PC:  55 ADDR:   0 MEM_OUT: 17711 ACC: 17711 LG_ALU: 3907 RG_ALU:   7 SP: 3906 ZF: 0 |	sub   <
  READ MEM[ALU]
  TICK: 3269 PC:  55 ADDR:   0 MEM_OUT: 400000 ACC: 17711 LG_ALU: 3907 RG_ALU:   7 SP: 3906 ZF: 0 |	sub   <
  MEM[ALU] -> ALU_RG
  TICK: 3270 PC:  55 ADDR:   0 MEM_OUT: 400000 ACC: 17711 LG_ALU: 3907 RG_ALU: 400000 SP: 3906 ZF: 0 |	sub   <
  ACC -> ALU_LG
  TICK: 3270 PC:  55 ADDR:   0 MEM_OUT: 400000 ACC: 17711 LG_ALU: 17711 RG_ALU: 400000 SP: 3906 ZF: 0 |	sub   <
  ALU_RES = ALU_LG + ALU_RG
  TICK: 3271 PC:  55 ADDR:   0 MEM_OUT: 400000 ACC: 17711 LG_ALU: 17711 RG_ALU: 400000 SP: 3906 ZF: 0 |	sub   <
  ALU_RES -> ACC
  TICK: 3272 PC:  55 ADDR:   0 MEM_OUT: 400000 ACC: -382289 LG_ALU: 17711 RG_ALU: 400000 SP: 3906 ZF: 0 |	sub   <
  PC + 1 -> PC
  NUM -> ALU_RG
  TICK: 3273 PC:  57 ADDR:   0 MEM_OUT: 400000 ACC: -382289 LG_ALU: 17711 RG_ALU:   1 SP: 3906 ZF: 0 |	load   <
  ALU_RES = ALU_RG
  TICK: 3274 PC:  57 ADDR:   0 MEM_OUT: 400000 ACC: -382289 LG_ALU: 17711 RG_ALU:   1 SP: 3906 ZF: 0 |	load   <
  ALU_RES -> ACC
  TICK: 3275 PC:  57 ADDR:   0 MEM_OUT: 400000 ACC: 1 LG_ALU: 17711 RG_ALU:   1 SP: 3906 ZF: 0 |	load   <
  ADDR -> PC
  SP -> ALU_LG
  TICK: 3277 PC:  60 ADDR:   0 MEM_OUT: 400000 ACC: 1 LG_ALU: 3906 RG_ALU:   1 SP: 3906 ZF: 0 |	push   <
  ALU_RES = SP - 1
  TICK: 3278 PC:  60 ADDR:   0 MEM_OUT: 400000 ACC: 1 LG_ALU: 3906 RG_ALU:   1 SP: 3906 ZF: 0 |	push   <
  ALU_RES -> SP
  TICK: 3279 PC:  60 ADDR:   0 MEM_OUT: 400000 ACC: 1 LG_ALU: 3906 RG_ALU:   1 SP: 3905 ZF: 0 |	push   <
  WRITE ACC -> MEM[ALU]
  TICK: 3279 PC:  60 ADDR:   0 MEM_OUT: 400000 ACC: 1 LG_ALU: 3906 RG_ALU:   1 SP: 3905 ZF: 0 |	push   <
  SP -> ALU_LG
  TICK: 3280 PC:  61 ADDR:   0 MEM_OUT: 400000 ACC: 1 LG_ALU: 3905 RG_ALU:   1 SP: 3905 ZF: 0 |	pop
  ALU_RES = ALU_LG
  TICK: 3281 PC:  61 ADDR:   0 MEM_OUT: 400000 ACC: 1 LG_ALU: 3905 RG_ALU:   1 SP: 3905 ZF: 0 |	pop
  READ MEM[ALU]
  TICK: 3282 PC:  61 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3905 RG_ALU:   1 SP: 3905 ZF: 0 |	pop
  ALU_RES = SP + 1
  TICK: 3283 PC:  61 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3905 RG_ALU:   1 SP: 3905 ZF: 0 |	pop
  ALU_RES -> SP
  TICK: 3284 PC:  61 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3905 RG_ALU:   1 SP: 3906 ZF: 0 |	pop
  MEM[ALU] -> ALU_RG
  TICK: 3284 PC:  61 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3905 RG_ALU:   1 SP: 3906 ZF: 0 |	pop
  ALU_RES = ALU_RG
  TICK: 3285 PC:  61 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3905 RG_ALU:   1 SP: 3906 ZF: 0 |	pop
  ALU_RES -> ACC
  TICK: 3286 PC:  61 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3905 RG_ALU:   1 SP: 3906 ZF: 0 |	pop
  ADDR -> PC
  ADDR -> PC
  ADDR -> ALU_RG
  TICK: 3289 PC:  24 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3905 RG_ALU:   6 SP: 3906 ZF: 0 |	load
  ALU_RES = ALU_RG
  TICK: 3290 PC:  24 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3905 RG_ALU:   6 SP: 3906 ZF: 0 |	load
  READ MEM[ALU]
  TICK: 3291 PC:  24 ADDR:   0 MEM_OUT: 17711 ACC: 1 LG_ALU: 3905 RG_ALU:   6 SP: 3906 ZF: 0 |	load
  MEM[ALU] -> ALU_RG
  TICK: 3292 PC:  24 ADDR:   0 MEM_OUT: 17711 ACC: 1 LG_ALU: 3905 RG_ALU: 17711 SP: 3906 ZF: 0 |	load
  ALU_RES = ALU_RG
  TICK: 3293 PC:  24 ADDR:   0 MEM_OUT: 17711 ACC: 1 LG_ALU: 3905 RG_ALU: 17711 SP: 3906 ZF: 0 |	load
  ALU_RES -> ACC
  TICK: 3294 PC:  24 ADDR:   0 MEM_OUT: 17711 ACC: 17711 LG_ALU: 3905 RG_ALU: 17711 SP: 3906 ZF: 0 |	load
  NUM -> ALU_RG
  TICK: 3295 PC:  25 ADDR:   0 MEM_OUT: 17711 ACC: 17711 LG_ALU: 3905 RG_ALU:   2 SP: 3906 ZF: 0 |	mod
  ACC -> ALU_LG
  TICK: 3295 PC:  25 ADDR:   0 MEM_OUT: 17711 ACC: 17711 LG_ALU: 17711 RG_ALU:   2 SP: 3906 ZF: 0 |	mod
  ALU_RES = ALU_LG % ALU_RG
  TICK: 3296 PC:  25 ADDR:   0 MEM_OUT: 17711 ACC: 17711 LG_ALU: 17711 RG_ALU:   2 SP: 3906 ZF: 0 |	mod
  ALU_RES -> ACC
  TICK: 3297 PC:  25 ADDR:   0 MEM_OUT: 17711 ACC: 1 LG_ALU: 17711 RG_ALU:   2 SP: 3906 ZF: 0 |	mod
  SP -> ALU_LG
  TICK: 3298 PC:  26 ADDR:   0 MEM_OUT: 17711 ACC: 1 LG_ALU: 3906 RG_ALU:   2 SP: 3906 ZF: 0 |	push
  ALU_RES = SP - 1
  TICK: 3299 PC:  26 ADDR:   0 MEM_OUT: 17711 ACC: 1 LG_ALU: 3906 RG_ALU:   2 SP: 3906 ZF: 0 |	push
  ALU_RES -> SP
  TICK: 3300 PC:  26 ADDR:   0 MEM_OUT: 17711 ACC: 1 LG_ALU: 3906 RG_ALU:   2 SP: 3905 ZF: 0 |	push
  WRITE ACC -> MEM[ALU]
  TICK: 3300 PC:  26 ADDR:   0 MEM_OUT: 17711 ACC: 1 LG_ALU: 3906 RG_ALU:   2 SP: 3905 ZF: 0 |	push
  NUM -> ALU_RG
  TICK: 3301 PC:  27 ADDR:   0 MEM_OUT: 17711 ACC: 1 LG_ALU: 3906 RG_ALU:   0 SP: 3905 ZF: 0 |	load   =
  ALU_RES = ALU_RG
  TICK: 3302 PC:  27 ADDR:   0 MEM_OUT: 17711 ACC: 1 LG_ALU: 3906 RG_ALU:   0 SP: 3905 ZF: 1 |	load   =
  ALU_RES -> ACC
  TICK: 3303 PC:  27 ADDR:   0 MEM_OUT: 17711 ACC: 0 LG_ALU: 3906 RG_ALU:   0 SP: 3905 ZF: 1 |	load   =
  SP -> ALU_LG
  TICK: 3304 PC:  28 ADDR:   0 MEM_OUT: 17711 ACC: 0 LG_ALU: 3905 RG_ALU:   0 SP: 3905 ZF: 1 |	sub   =
  ALU_RES = ALU_LG
  TICK: 3305 PC:  28 ADDR:   0 MEM_OUT: 17711 ACC: 0 LG_ALU: 3905 RG_ALU:   0 SP: 3905 ZF: 0 |	sub   =
  READ MEM[ALU]
  TICK: 3306 PC:  28 ADDR:   0 MEM_OUT: 1 ACC: 0 LG_ALU: 3905 RG_ALU:   0 SP: 3905 ZF: 0 |	sub   =
  MEM[ALU] -> ALU_RG
  TICK: 3307 PC:  28 ADDR:   0 MEM_OUT: 1 ACC: 0 LG_ALU: 3905 RG_ALU:   1 SP: 3905 ZF: 0 |	sub   =
  ALU_RES = SP + 1
  TICK: 3308 PC:  28 ADDR:   0 MEM_OUT: 1 ACC: 0 LG_ALU: 3905 RG_ALU:   1 SP: 3905 ZF: 0 |	sub   =
  ALU_RES -> SP
  TICK: 3309 PC:  28 ADDR:   0 MEM_OUT: 1 ACC: 0 LG_ALU: 3905 RG_ALU:   1 SP: 3906 ZF: 0 |	sub   =
  ACC -> ALU_LG
  TICK: 3309 PC:  28 ADDR:   0 MEM_OUT: 1 ACC: 0 LG_ALU:   0 RG_ALU:   1 SP: 3906 ZF: 0 |	sub   =
  ALU_RES = ALU_LG + ALU_RG
  TICK: 3310 PC:  28 ADDR:   0 MEM_OUT: 1 ACC: 0 LG_ALU:   0 RG_ALU:   1 SP: 3906 ZF: 0 |	sub   =
  ALU_RES -> ACC
  TICK: 3311 PC:  28 ADDR:   0 MEM_OUT: 1 ACC: -1 LG_ALU:   0 RG_ALU:   1 SP: 3906 ZF: 0 |	sub   =
  ADDR -> PC
  NUM -> ALU_RG
  TICK: 3313 PC:  32 ADDR:   0 MEM_OUT: 1 ACC: -1 LG_ALU:   0 RG_ALU:   0 SP: 3906 ZF: 0 |	load   =
  ALU_RES = ALU_RG
  TICK: 3314 PC:  32 ADDR:   0 MEM_OUT: 1 ACC: -1 LG_ALU:   0 RG_ALU:   0 SP: 3906 ZF: 1 |	load   =
  ALU_RES -> ACC
  TICK: 3315 PC:  32 ADDR:   0 MEM_OUT: 1 ACC: 0 LG_ALU:   0 RG_ALU:   0 SP: 3906 ZF: 1 |	load   =
  SP -> ALU_LG
  TICK: 3316 PC:  33 ADDR:   0 MEM_OUT: 1 ACC: 0 LG_ALU: 3906 RG_ALU:   0 SP: 3906 ZF: 1 |	push   =
  ALU_RES = SP - 1
  TICK: 3317 PC:  33 ADDR:   0 MEM_OUT: 1 ACC: 0 LG_ALU: 3906 RG_ALU:   0 SP: 3906 ZF: 0 |	push   =
  ALU_RES -> SP
  TICK: 3318 PC:  33 ADDR:   0 MEM_OUT: 1 ACC: 0 LG_ALU: 3906 RG_ALU:   0 SP: 3905 ZF: 0 |	push   =
  WRITE ACC -> MEM[ALU]
  TICK: 3318 PC:  33 ADDR:   0 MEM_OUT: 1 ACC: 0 LG_ALU: 3906 RG_ALU:   0 SP: 3905 ZF: 0 |	push   =
  SP -> ALU_LG
  TICK: 3319 PC:  34 ADDR:   0 MEM_OUT: 1 ACC: 0 LG_ALU: 3905 RG_ALU:   0 SP: 3905 ZF: 0 |	pop   if
  ALU_RES = ALU_LG
  TICK: 3320 PC:  34 ADDR:   0 MEM_OUT: 1 ACC: 0 LG_ALU: 3905 RG_ALU:   0 SP: 3905 ZF: 0 |	pop   if
  READ MEM[ALU]
  TICK: 3321 PC:  34 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3905 RG_ALU:   0 SP: 3905 ZF: 0 |	pop   if
  ALU_RES = SP + 1
  TICK: 3322 PC:  34 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3905 RG_ALU:   0 SP: 3905 ZF: 0 |	pop   if
  ALU_RES -> SP
  TICK: 3323 PC:  34 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3905 RG_ALU:   0 SP: 3906 ZF: 0 |	pop   if
  MEM[ALU] -> ALU_RG
  TICK: 3323 PC:  34 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3905 RG_ALU:   0 SP: 3906 ZF: 0 |	pop   if
  ALU_RES = ALU_RG
  TICK: 3324 PC:  34 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3905 RG_ALU:   0 SP: 3906 ZF: 1 |	pop   if
  ALU_RES -> ACC
  TICK: 3325 PC:  34 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3905 RG_ALU:   0 SP: 3906 ZF: 1 |	pop   if
  PC + 1 -> PC
  ADDR -> PC
  NUM -> ALU_RG
  TICK: 3327 PC:  20 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3905 RG_ALU:   0 SP: 3906 ZF: 1 |	load   +
  ALU_RES = ALU_RG
  TICK: 3328 PC:  20 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3905 RG_ALU:   0 SP: 3906 ZF: 1 |	load   +
  ALU_RES -> ACC
  TICK: 3329 PC:  20 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3905 RG_ALU:   0 SP: 3906 ZF: 1 |	load   +
  NUM -> ALU_RG
  TICK: 3330 PC:  21 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3905 RG_ALU:   0 SP: 3906 ZF: 1 |	add   +
  ACC -> ALU_LG
  TICK: 3330 PC:  21 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU:   0 RG_ALU:   0 SP: 3906 ZF: 1 |	add   +
  ALU_RES = ALU_LG + ALU_RG
  TICK: 3331 PC:  21 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU:   0 RG_ALU:   0 SP: 3906 ZF: 1 |	add   +
  ALU_RES -> ACC
  TICK: 3332 PC:  21 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU:   0 RG_ALU:   0 SP: 3906 ZF: 1 |	add   +
  SP -> ALU_LG
  TICK: 3333 PC:  22 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3906 RG_ALU:   0 SP: 3906 ZF: 1 |	push   +
  ALU_RES = SP - 1
  TICK: 3334 PC:  22 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3906 RG_ALU:   0 SP: 3906 ZF: 0 |	push   +
  ALU_RES -> SP
  TICK: 3335 PC:  22 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3906 RG_ALU:   0 SP: 3905 ZF: 0 |	push   +
  WRITE ACC -> MEM[ALU]
  TICK: 3335 PC:  22 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3906 RG_ALU:   0 SP: 3905 ZF: 0 |	push   +
  ADDR -> PC
  SP -> ALU_LG
  TICK: 3337 PC:  37 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3905 RG_ALU:   0 SP: 3905 ZF: 0 |	pop   if
  ALU_RES = ALU_LG
  TICK: 3338 PC:  37 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3905 RG_ALU:   0 SP: 3905 ZF: 0 |	pop   if
  READ MEM[ALU]
  TICK: 3339 PC:  37 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3905 RG_ALU:   0 SP: 3905 ZF: 0 |	pop   if
  ALU_RES = SP + 1
  TICK: 3340 PC:  37 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3905 RG_ALU:   0 SP: 3905 ZF: 0 |	pop   if
  ALU_RES -> SP
  TICK: 3341 PC:  37 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3905 RG_ALU:   0 SP: 3906 ZF: 0 |	pop   if
  MEM[ALU] -> ALU_RG
  TICK: 3341 PC:  37 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3905 RG_ALU:   0 SP: 3906 ZF: 0 |	pop   if
  ALU_RES = ALU_RG
  TICK: 3342 PC:  37 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3905 RG_ALU:   0 SP: 3906 ZF: 1 |	pop   if
  ALU_RES -> ACC
  TICK: 3343 PC:  37 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3905 RG_ALU:   0 SP: 3906 ZF: 1 |	pop   if
  SP -> ALU_LG
  TICK: 3344 PC:  38 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3906 RG_ALU:   0 SP: 3906 ZF: 1 |	push   if
  ALU_RES = SP - 1
  TICK: 3345 PC:  38 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3906 RG_ALU:   0 SP: 3906 ZF: 0 |	push   if
  ALU_RES -> SP
  TICK: 3346 PC:  38 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3906 RG_ALU:   0 SP: 3905 ZF: 0 |	push   if
  WRITE ACC -> MEM[ALU]
  TICK: 3346 PC:  38 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3906 RG_ALU:   0 SP: 3905 ZF: 0 |	push   if
  ADDR -> ALU_RG
  TICK: 3347 PC:  39 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3906 RG_ALU:   6 SP: 3905 ZF: 0 |	load   var
  ALU_RES = ALU_RG
  TICK: 3348 PC:  39 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3906 RG_ALU:   6 SP: 3905 ZF: 0 |	load   var
  READ MEM[ALU]
  TICK: 3349 PC:  39 ADDR:   0 MEM_OUT: 17711 ACC: 0 LG_ALU: 3906 RG_ALU:   6 SP: 3905 ZF: 0 |	load   var
  MEM[ALU] -> ALU_RG
  TICK: 3350 PC:  39 ADDR:   0 MEM_OUT: 17711 ACC: 0 LG_ALU: 3906 RG_ALU: 17711 SP: 3905 ZF: 0 |	load   var
  ALU_RES = ALU_RG
  TICK: 3351 PC:  39 ADDR:   0 MEM_OUT: 17711 ACC: 0 LG_ALU: 3906 RG_ALU: 17711 SP: 3905 ZF: 0 |	load   var
  ALU_RES -> ACC
  TICK: 3352 PC:  39 ADDR:   0 MEM_OUT: 17711 ACC: 17711 LG_ALU: 3906 RG_ALU: 17711 SP: 3905 ZF: 0 |	load   var
  ADDR -> ALU_RG
  TICK: 3353 PC:  40 ADDR:   0 MEM_OUT: 17711 ACC: 17711 LG_ALU: 3906 RG_ALU:   8 SP: 3905 ZF: 0 |	store   var
  ALU_RES = ALU_RG
  TICK: 3354 PC:  40 ADDR:   0 MEM_OUT: 17711 ACC: 17711 LG_ALU: 3906 RG_ALU:   8 SP: 3905 ZF: 0 |	store   var
  WRITE ACC -> MEM[ALU]
  TICK: 3355 PC:  40 ADDR:   0 MEM_OUT: 17711 ACC: 17711 LG_ALU: 3906 RG_ALU:   8 SP: 3905 ZF: 0 |	store   var
  NUM -> ALU_RG
  TICK: 3356 PC:  41 ADDR:   0 MEM_OUT: 17711 ACC: 17711 LG_ALU: 3906 RG_ALU:   1 SP: 3905 ZF: 0 |	load   var
  ALU_RES = ALU_RG
  TICK: 3357 PC:  41 ADDR:   0 MEM_OUT: 17711 ACC: 17711 LG_ALU: 3906 RG_ALU:   1 SP: 3905 ZF: 0 |	load   var
  ALU_RES -> ACC
  TICK: 3358 PC:  41 ADDR:   0 MEM_OUT: 17711 ACC: 1 LG_ALU: 3906 RG_ALU:   1 SP: 3905 ZF: 0 |	load   var
  SP -> ALU_LG
  TICK: 3359 PC:  42 ADDR:   0 MEM_OUT: 17711 ACC: 1 LG_ALU: 3905 RG_ALU:   1 SP: 3905 ZF: 0 |	push   var
  ALU_RES = SP - 1
  TICK: 3360 PC:  42 ADDR:   0 MEM_OUT: 17711 ACC: 1 LG_ALU: 3905 RG_ALU:   1 SP: 3905 ZF: 0 |	push   var
  ALU_RES -> SP
  TICK: 3361 PC:  42 ADDR:   0 MEM_OUT: 17711 ACC: 1 LG_ALU: 3905 RG_ALU:   1 SP: 3904 ZF: 0 |	push   var
  WRITE ACC -> MEM[ALU]
  TICK: 3361 PC:  42 ADDR:   0 MEM_OUT: 17711 ACC: 1 LG_ALU: 3905 RG_ALU:   1 SP: 3904 ZF: 0 |	push   var
  ADDR -> ALU_RG
  TICK: 3362 PC:  43 ADDR:   0 MEM_OUT: 17711 ACC: 1 LG_ALU: 3905 RG_ALU:   5 SP: 3904 ZF: 0 |	load   +
  ALU_RES = ALU_RG
  TICK: 3363 PC:  43 ADDR:   0 MEM_OUT: 17711 ACC: 1 LG_ALU: 3905 RG_ALU:   5 SP: 3904 ZF: 0 |	load   +
  READ MEM[ALU]
  TICK: 3364 PC:  43 ADDR:   0 MEM_OUT: 10946 ACC: 1 LG_ALU: 3905 RG_ALU:   5 SP: 3904 ZF: 0 |	load   +
  MEM[ALU] -> ALU_RG
  TICK: 3365 PC:  43 ADDR:   0 MEM_OUT: 10946 ACC: 1 LG_ALU: 3905 RG_ALU: 10946 SP: 3904 ZF: 0 |	load   +
  ALU_RES = ALU_RG
  TICK: 3366 PC:  43 ADDR:   0 MEM_OUT: 10946 ACC: 1 LG_ALU: 3905 RG_ALU: 10946 SP: 3904 ZF: 0 |	load   +
  ALU_RES -> ACC
  TICK: 3367 PC:  43 ADDR:   0 MEM_OUT: 10946 ACC: 10946 LG_ALU: 3905 RG_ALU: 10946 SP: 3904 ZF: 0 |	load   +
  ADDR -> ALU_RG
  TICK: 3368 PC:  44 ADDR:   0 MEM_OUT: 10946 ACC: 10946 LG_ALU: 3905 RG_ALU:   6 SP: 3904 ZF: 0 |	add   +
  ALU_RES = ALU_RG
  TICK: 3369 PC:  44 ADDR:   0 MEM_OUT: 10946 ACC: 10946 LG_ALU: 3905 RG_ALU:   6 SP: 3904 ZF: 0 |	add   +
  READ MEM[ALU]
  TICK: 3370 PC:  44 ADDR:   0 MEM_OUT: 17711 ACC: 10946 LG_ALU: 3905 RG_ALU:   6 SP: 3904 ZF: 0 |	add   +
  MEM[ALU] -> ALU_RG
  TICK: 3371 PC:  44 ADDR:   0 MEM_OUT: 17711 ACC: 10946 LG_ALU: 3905 RG_ALU: 17711 SP: 3904 ZF: 0 |	add   +
  ACC -> ALU_LG
  TICK: 3371 PC:  44 ADDR:   0 MEM_OUT: 17711 ACC: 10946 LG_ALU: 10946 RG_ALU: 17711 SP: 3904 ZF: 0 |	add   +
  ALU_RES = ALU_LG + ALU_RG
  TICK: 3372 PC:  44 ADDR:   0 MEM_OUT: 17711 ACC: 10946 LG_ALU: 10946 RG_ALU: 17711 SP: 3904 ZF: 0 |	add   +
  ALU_RES -> ACC
  TICK: 3373 PC:  44 ADDR:   0 MEM_OUT: 17711 ACC: 28657 LG_ALU: 10946 RG_ALU: 17711 SP: 3904 ZF: 0 |	add   +
  SP -> ALU_LG
  TICK: 3374 PC:  45 ADDR:   0 MEM_OUT: 17711 ACC: 28657 LG_ALU: 3904 RG_ALU: 17711 SP: 3904 ZF: 0 |	push   +
  ALU_RES = SP - 1
  TICK: 3375 PC:  45 ADDR:   0 MEM_OUT: 17711 ACC: 28657 LG_ALU: 3904 RG_ALU: 17711 SP: 3904 ZF: 0 |	push   +
  ALU_RES -> SP
  TICK: 3376 PC:  45 ADDR:   0 MEM_OUT: 17711 ACC: 28657 LG_ALU: 3904 RG_ALU: 17711 SP: 3903 ZF: 0 |	push   +
  WRITE ACC -> MEM[ALU]
  TICK: 3376 PC:  45 ADDR:   0 MEM_OUT: 17711 ACC: 28657 LG_ALU: 3904 RG_ALU: 17711 SP: 3903 ZF: 0 |	push   +
  SP -> ALU_LG
  TICK: 3377 PC:  46 ADDR:   0 MEM_OUT: 17711 ACC: 28657 LG_ALU: 3903 RG_ALU: 17711 SP: 3903 ZF: 0 |	pop   var
  ALU_RES = ALU_LG
  TICK: 3378 PC:  46 ADDR:   0 MEM_OUT: 17711 ACC: 28657 LG_ALU: 3903 RG_ALU: 17711 SP: 3903 ZF: 0 |	pop   var
  READ MEM[ALU]
  TICK: 3379 PC:  46 ADDR:   0 MEM_OUT: 28657 ACC: 28657 LG_ALU: 3903 RG_ALU: 17711 SP: 3903 ZF: 0 |	pop   var
  ALU_RES = SP + 1
  TICK: 3380 PC:  46 ADDR:   0 MEM_OUT: 28657 ACC: 28657 LG_ALU: 3903 RG_ALU: 17711 SP: 3903 ZF: 0 |	pop   var
  ALU_RES -> SP
  TICK: 3381 PC:  46 ADDR:   0 MEM_OUT: 28657 ACC: 28657 LG_ALU: 3903 RG_ALU: 17711 SP: 3904 ZF: 0 |	pop   var
  MEM[ALU] -> ALU_RG
  TICK: 3381 PC:  46 ADDR:   0 MEM_OUT: 28657 ACC: 28657 LG_ALU: 3903 RG_ALU: 28657 SP: 3904 ZF: 0 |	pop   var
  ALU_RES = ALU_RG
  TICK: 3382 PC:  46 ADDR:   0 MEM_OUT: 28657 ACC: 28657 LG_ALU: 3903 RG_ALU: 28657 SP: 3904 ZF: 0 |	pop   var
  ALU_RES -> ACC
  TICK: 3383 PC:  46 ADDR:   0 MEM_OUT: 28657 ACC: 28657 LG_ALU: 3903 RG_ALU: 28657 SP: 3904 ZF: 0 |	pop   var
  ADDR -> ALU_RG
  TICK: 3384 PC:  47 ADDR:   0 MEM_OUT: 28657 ACC: 28657 LG_ALU: 3903 RG_ALU:   6 SP: 3904 ZF: 0 |	store   var
  ALU_RES = ALU_RG
  TICK: 3385 PC:  47 ADDR:   0 MEM_OUT: 28657 ACC: 28657 LG_ALU: 3903 RG_ALU:   6 SP: 3904 ZF: 0 |	store   var
  WRITE ACC -> MEM[ALU]
  TICK: 3386 PC:  47 ADDR:   0 MEM_OUT: 28657 ACC: 28657 LG_ALU: 3903 RG_ALU:   6 SP: 3904 ZF: 0 |	store   var
  NUM -> ALU_RG
  TICK: 3387 PC:  48 ADDR:   0 MEM_OUT: 28657 ACC: 28657 LG_ALU: 3903 RG_ALU:   1 SP: 3904 ZF: 0 |	load   var
  ALU_RES = ALU_RG
  TICK: 3388 PC:  48 ADDR:   0 MEM_OUT: 28657 ACC: 28657 LG_ALU: 3903 RG_ALU:   1 SP: 3904 ZF: 0 |	load   var
  ALU_RES -> ACC
  TICK: 3389 PC:  48 ADDR:   0 MEM_OUT: 28657 ACC: 1 LG_ALU: 3903 RG_ALU:   1 SP: 3904 ZF: 0 |	load   var
  SP -> ALU_LG
  TICK: 3390 PC:  49 ADDR:   0 MEM_OUT: 28657 ACC: 1 LG_ALU: 3904 RG_ALU:   1 SP: 3904 ZF: 0 |	push   var
  ALU_RES = SP - 1
  TICK: 3391 PC:  49 ADDR:   0 MEM_OUT: 28657 ACC: 1 LG_ALU: 3904 RG_ALU:   1 SP: 3904 ZF: 0 |	push   var
  ALU_RES -> SP
  TICK: 3392 PC:  49 ADDR:   0 MEM_OUT: 28657 ACC: 1 LG_ALU: 3904 RG_ALU:   1 SP: 3903 ZF: 0 |	push   var
  WRITE ACC -> MEM[ALU]
  TICK: 3392 PC:  49 ADDR:   0 MEM_OUT: 28657 ACC: 1 LG_ALU: 3904 RG_ALU:   1 SP: 3903 ZF: 0 |	push   var
  ADDR -> ALU_RG
  TICK: 3393 PC:  50 ADDR:   0 MEM_OUT: 28657 ACC: 1 LG_ALU: 3904 RG_ALU:   8 SP: 3903 ZF: 0 |	load   var
  ALU_RES = ALU_RG
  TICK: 3394 PC:  50 ADDR:   0 MEM_OUT: 28657 ACC: 1 LG_ALU: 3904 RG_ALU:   8 SP: 3903 ZF: 0 |	load   var
  READ MEM[ALU]
  TICK: 3395 PC:  50 ADDR:   0 MEM_OUT: 17711 ACC: 1 LG_ALU: 3904 RG_ALU:   8 SP: 3903 ZF: 0 |	load   var
  MEM[ALU] -> ALU_RG
  TICK: 3396 PC:  50 ADDR:   0 MEM_OUT: 17711 ACC: 1 LG_ALU: 3904 RG_ALU: 17711 SP: 3903 ZF: 0 |	load   var
  ALU_RES = ALU_RG
  TICK: 3397 PC:  50 ADDR:   0 MEM_OUT: 17711 ACC: 1 LG_ALU: 3904 RG_ALU: 17711 SP: 3903 ZF: 0 |	load   var
  ALU_RES -> ACC
  TICK: 3398 PC:  50 ADDR:   0 MEM_OUT: 17711 ACC: 17711 LG_ALU: 3904 RG_ALU: 17711 SP: 3903 ZF: 0 |	load   var
  ADDR -> ALU_RG
  TICK: 3399 PC:  51 ADDR:   0 MEM_OUT: 17711 ACC: 17711 LG_ALU: 3904 RG_ALU:   5 SP: 3903 ZF: 0 |	store   var
  ALU_RES = ALU_RG
  TICK: 3400 PC:  51 ADDR:   0 MEM_OUT: 17711 ACC: 17711 LG_ALU: 3904 RG_ALU:   5 SP: 3903 ZF: 0 |	store   var
  WRITE ACC -> MEM[ALU]
  TICK: 3401 PC:  51 ADDR:   0 MEM_OUT: 17711 ACC: 17711 LG_ALU: 3904 RG_ALU:   5 SP: 3903 ZF: 0 |	store   var
  NUM -> ALU_RG
  TICK: 3402 PC:  52 ADDR:   0 MEM_OUT: 17711 ACC: 17711 LG_ALU: 3904 RG_ALU:   1 SP: 3903 ZF: 0 |	load   var
  ALU_RES = ALU_RG
  TICK: 3403 PC:  52 ADDR:   0 MEM_OUT: 17711 ACC: 17711 LG_ALU: 3904 RG_ALU:   1 SP: 3903 ZF: 0 |	load   var
  ALU_RES -> ACC
  TICK: 3404 PC:  52 ADDR:   0 MEM_OUT: 17711 ACC: 1 LG_ALU: 3904 RG_ALU:   1 SP: 3903 ZF: 0 |	load   var
  SP -> ALU_LG
  TICK: 3405 PC:  53 ADDR:   0 MEM_OUT: 17711 ACC: 1 LG_ALU: 3903 RG_ALU:   1 SP: 3903 ZF: 0 |	push   var
  ALU_RES = SP - 1
  TICK: 3406 PC:  53 ADDR:   0 MEM_OUT: 17711 ACC: 1 LG_ALU: 3903 RG_ALU:   1 SP: 3903 ZF: 0 |	push   var
  ALU_RES -> SP
  TICK: 3407 PC:  53 ADDR:   0 MEM_OUT: 17711 ACC: 1 LG_ALU: 3903 RG_ALU:   1 SP: 3902 ZF: 0 |	push   var
  WRITE ACC -> MEM[ALU]
  TICK: 3407 PC:  53 ADDR:   0 MEM_OUT: 17711 ACC: 1 LG_ALU: 3903 RG_ALU:   1 SP: 3902 ZF: 0 |	push   var
  ADDR -> ALU_RG
  TICK: 3408 PC:  54 ADDR:   0 MEM_OUT: 17711 ACC: 1 LG_ALU: 3903 RG_ALU:   6 SP: 3902 ZF: 0 |	load   <
  ALU_RES = ALU_RG
  TICK: 3409 PC:  54 ADDR:   0 MEM_OUT: 17711 ACC: 1 LG_ALU: 3903 RG_ALU:   6 SP: 3902 ZF: 0 |	load   <
  READ MEM[ALU]
  TICK: 3410 PC:  54 ADDR:   0 MEM_OUT: 28657 ACC: 1 LG_ALU: 3903 RG_ALU:   6 SP: 3902 ZF: 0 |	load   <
  MEM[ALU] -> ALU_RG
  TICK: 3411 PC:  54 ADDR:   0 MEM_OUT: 28657 ACC: 1 LG_ALU: 3903 RG_ALU: 28657 SP: 3902 ZF: 0 |	load   <
  ALU_RES = ALU_RG
  TICK: 3412 PC:  54 ADDR:   0 MEM_OUT: 28657 ACC: 1 LG_ALU: 3903 RG_ALU: 28657 SP: 3902 ZF: 0 |	load   <
  ALU_RES -> ACC
  TICK: 3413 PC:  54 ADDR:   0 MEM_OUT: 28657 ACC: 28657 LG_ALU: 3903 RG_ALU: 28657 SP: 3902 ZF: 0 |	load   <
  ADDR -> ALU_RG
  TICK: 3414 PC:  55 ADDR:   0 MEM_OUT: 28657 ACC: 28657 LG_ALU: 3903 RG_ALU:   7 SP: 3902 ZF: 0 |	sub   <
  ALU_RES = ALU_RG
  TICK: 3415 PC:  55 ADDR:   0 MEM_OUT: 28657 ACC: 28657 LG_ALU: 3903 RG_ALU:   7 SP: 3902 ZF: 0 |	sub   <
  READ MEM[ALU]
  TICK: 3416 PC:  55 ADDR:   0 MEM_OUT: 400000 ACC: 28657 LG_ALU: 3903 RG_ALU:   7 SP: 3902 ZF: 0 |	sub   <
  MEM[ALU] -> ALU_RG
  TICK: 3417 PC:  55 ADDR:   0 MEM_OUT: 400000 ACC: 28657 LG_ALU: 3903 RG_ALU: 400000 SP: 3902 ZF: 0 |	sub   <
  ACC -> ALU_LG
  TICK: 3417 PC:  55 ADDR:   0 MEM_OUT: 400000 ACC: 28657 LG_ALU: 28657 RG_ALU: 400000 SP: 3902 ZF: 0 |	sub   <
  ALU_RES = ALU_LG + ALU_RG
  TICK: 3418 PC:  55 ADDR:   0 MEM_OUT: 400000 ACC: 28657 LG_ALU: 28657 RG_ALU: 400000 SP: 3902 ZF: 0 |	sub   <
  ALU_RES -> ACC
  TICK: 3419 PC:  55 ADDR:   0 MEM_OUT: 400000 ACC: -371343 LG_ALU: 28657 RG_ALU: 400000 SP: 3902 ZF: 0 |	sub   <
  PC + 1 -> PC
  NUM -> ALU_RG
  TICK: 3420 PC:  57 ADDR:   0 MEM_OUT: 400000 ACC: -371343 LG_ALU: 28657 RG_ALU:   1 SP: 3902 ZF: 0 |	load   <
  ALU_RES = ALU_RG
  TICK: 3421 PC:  57 ADDR:   0 MEM_OUT: 400000 ACC: -371343 LG_ALU: 28657 RG_ALU:   1 SP: 3902 ZF: 0 |	load   <
  ALU_RES -> ACC
  TICK: 3422 PC:  57 ADDR:   0 MEM_OUT: 400000 ACC: 1 LG_ALU: 28657 RG_ALU:   1 SP: 3902 ZF: 0 |	load   <
  ADDR -> PC
  SP -> ALU_LG
  TICK: 3424 PC:  60 ADDR:   0 MEM_OUT: 400000 ACC: 1 LG_ALU: 3902 RG_ALU:   1 SP: 3902 ZF: 0 |	push   <
  ALU_RES = SP - 1
  TICK: 3425 PC:  60 ADDR:   0 MEM_OUT: 400000 ACC: 1 LG_ALU: 3902 RG_ALU:   1 SP: 3902 ZF: 0 |	push   <
  ALU_RES -> SP
  TICK: 3426 PC:  60 ADDR:   0 MEM_OUT: 400000 ACC: 1 LG_ALU: 3902 RG_ALU:   1 SP: 3901 ZF: 0 |	push   <
  WRITE ACC -> MEM[ALU]
  TICK: 3426 PC:  60 ADDR:   0 MEM_OUT: 400000 ACC: 1 LG_ALU: 3902 RG_ALU:   1 SP: 3901 ZF: 0 |	push   <
  SP -> ALU_LG
  TICK: 3427 PC:  61 ADDR:   0 MEM_OUT: 400000 ACC: 1 LG_ALU: 3901 RG_ALU:   1 SP: 3901 ZF: 0 |	pop
  ALU_RES = ALU_LG
  TICK: 3428 PC:  61 ADDR:   0 MEM_OUT: 400000 ACC: 1 LG_ALU: 3901 RG_ALU:   1 SP: 3901 ZF: 0 |	pop
  READ MEM[ALU]
  TICK: 3429 PC:  61 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3901 RG_ALU:   1 SP: 3901 ZF: 0 |	pop
  ALU_RES = SP + 1
  TICK: 3430 PC:  61 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3901 RG_ALU:   1 SP: 3901 ZF: 0 |	pop
  ALU_RES -> SP
  TICK: 3431 PC:  61 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3901 RG_ALU:   1 SP: 3902 ZF: 0 |	pop
  MEM[ALU] -> ALU_RG
  TICK: 3431 PC:  61 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3901 RG_ALU:   1 SP: 3902 ZF: 0 |	pop
  ALU_RES = ALU_RG
  TICK: 3432 PC:  61 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3901 RG_ALU:   1 SP: 3902 ZF: 0 |	pop
  ALU_RES -> ACC
  TICK: 3433 PC:  61 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3901 RG_ALU:   1 SP: 3902 ZF: 0 |	pop
  ADDR -> PC
  ADDR -> PC
  ADDR -> ALU_RG
  TICK: 3436 PC:  24 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3901 RG_ALU:   6 SP: 3902 ZF: 0 |	load
  ALU_RES = ALU_RG
  TICK: 3437 PC:  24 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3901 RG_ALU:   6 SP: 3902 ZF: 0 |	load
  READ MEM[ALU]
  TICK: 3438 PC:  24 ADDR:   0 MEM_OUT: 28657 ACC: 1 LG_ALU: 3901 RG_ALU:   6 SP: 3902 ZF: 0 |	load
  MEM[ALU] -> ALU_RG
  TICK: 3439 PC:  24 ADDR:   0 MEM_OUT: 28657 ACC: 1 LG_ALU: 3901 RG_ALU: 28657 SP: 3902 ZF: 0 |	load
  ALU_RES = ALU_RG
  TICK: 3440 PC:  24 ADDR:   0 MEM_OUT: 28657 ACC: 1 LG_ALU: 3901 RG_ALU: 28657 SP: 3902 ZF: 0 |	load
  ALU_RES -> ACC
  TICK: 3441 PC:  24 ADDR:   0 MEM_OUT: 28657 ACC: 28657 LG_ALU: 3901 RG_ALU: 28657 SP: 3902 ZF: 0 |	load
  NUM -> ALU_RG
  TICK: 3442 PC:  25 ADDR:   0 MEM_OUT: 28657 ACC: 28657 LG_ALU: 3901 RG_ALU:   2 SP: 3902 ZF: 0 |	mod
  ACC -> ALU_LG
  TICK: 3442 PC:  25 ADDR:   0 MEM_OUT: 28657 ACC: 28657 LG_ALU: 28657 RG_ALU:   2 SP: 3902 ZF: 0 |	mod
  ALU_RES = ALU_LG % ALU_RG
  TICK: 3443 PC:  25 ADDR:   0 MEM_OUT: 28657 ACC: 28657 LG_ALU: 28657 RG_ALU:   2 SP: 3902 ZF: 0 |	mod
  ALU_RES -> ACC
  TICK: 3444 PC:  25 ADDR:   0 MEM_OUT: 28657 ACC: 1 LG_ALU: 28657 RG_ALU:   2 SP: 3902 ZF: 0 |	mod
  SP -> ALU_LG
  TICK: 3445 PC:  26 ADDR:   0 MEM_OUT: 28657 ACC: 1 LG_ALU: 3902 RG_ALU:   2 SP: 3902 ZF: 0 |	push
  ALU_RES = SP - 1
  TICK: 3446 PC:  26 ADDR:   0 MEM_OUT: 28657 ACC: 1 LG_ALU: 3902 RG_ALU:   2 SP: 3902 ZF: 0 |	push
  ALU_RES -> SP
  TICK: 3447 PC:  26 ADDR:   0 MEM_OUT: 28657 ACC: 1 LG_ALU: 3902 RG_ALU:   2 SP: 3901 ZF: 0 |	push
  WRITE ACC -> MEM[ALU]
  TICK: 3447 PC:  26 ADDR:   0 MEM_OUT: 28657 ACC: 1 LG_ALU: 3902 RG_ALU:   2 SP: 3901 ZF: 0 |	push
  NUM -> ALU_RG
  TICK: 3448 PC:  27 ADDR:   0 MEM_OUT: 28657 ACC: 1 LG_ALU: 3902 RG_ALU:   0 SP: 3901 ZF: 0 |	load   =
  ALU_RES = ALU_RG
  TICK: 3449 PC:  27 ADDR:   0 MEM_OUT: 28657 ACC: 1 LG_ALU: 3902 RG_ALU:   0 SP: 3901 ZF: 1 |	load   =
  ALU_RES -> ACC
  TICK: 3450 PC:  27 ADDR:   0 MEM_OUT: 28657 ACC: 0 LG_ALU: 3902 RG_ALU:   0 SP: 3901 ZF: 1 |	load   =
  SP -> ALU_LG
  TICK: 3451 PC:  28 ADDR:   0 MEM_OUT: 28657 ACC: 0 LG_ALU: 3901 RG_ALU:   0 SP: 3901 ZF: 1 |	sub   =
  ALU_RES = ALU_LG
  TICK: 3452 PC:  28 ADDR:   0 MEM_OUT: 28657 ACC: 0 LG_ALU: 3901 RG_ALU:   0 SP: 3901 ZF: 0 |	sub   =
  READ MEM[ALU]
  TICK: 3453 PC:  28 ADDR:   0 MEM_OUT: 1 ACC: 0 LG_ALU: 3901 RG_ALU:   0 SP: 3901 ZF: 0 |	sub   =
  MEM[ALU] -> ALU_RG
  TICK: 3454 PC:  28 ADDR:   0 MEM_OUT: 1 ACC: 0 LG_ALU: 3901 RG_ALU:   1 SP: 3901 ZF: 0 |	sub   =
  ALU_RES = SP + 1
  TICK: 3455 PC:  28 ADDR:   0 MEM_OUT: 1 ACC: 0 LG_ALU: 3901 RG_ALU:   1 SP: 3901 ZF: 0 |	sub   =
  ALU_RES -> SP
  TICK: 3456 PC:  28 ADDR:   0 MEM_OUT: 1 ACC: 0 LG_ALU: 3901 RG_ALU:   1 SP: 3902 ZF: 0 |	sub   =
  ACC -> ALU_LG
  TICK: 3456 PC:  28 ADDR:   0 MEM_OUT: 1 ACC: 0 LG_ALU:   0 RG_ALU:   1 SP: 3902 ZF: 0 |	sub   =
  ALU_RES = ALU_LG + ALU_RG
  TICK: 3457 PC:  28 ADDR:   0 MEM_OUT: 1 ACC: 0 LG_ALU:   0 RG_ALU:   1 SP: 3902 ZF: 0 |	sub   =
  ALU_RES -> ACC
  TICK: 3458 PC:  28 ADDR:   0 MEM_OUT: 1 ACC: -1 LG_ALU:   0 RG_ALU:   1 SP: 3902 ZF: 0 |	sub   =
  ADDR -> PC
  NUM -> ALU_RG
  TICK: 3460 PC:  32 ADDR:   0 MEM_OUT: 1 ACC: -1 LG_ALU:   0 RG_ALU:   0 SP: 3902 ZF: 0 |	load   =
  ALU_RES = ALU_RG
  TICK: 3461 PC:  32 ADDR:   0 MEM_OUT: 1 ACC: -1 LG_ALU:   0 RG_ALU:   0 SP: 3902 ZF: 1 |	load   =
  ALU_RES -> ACC
  TICK: 3462 PC:  32 ADDR:   0 MEM_OUT: 1 ACC: 0 LG_ALU:   0 RG_ALU:   0 SP: 3902 ZF: 1 |	load   =
  SP -> ALU_LG
  TICK: 3463 PC:  33 ADDR:   0 MEM_OUT: 1 ACC: 0 LG_ALU: 3902 RG_ALU:   0 SP: 3902 ZF: 1 |	push   =
  ALU_RES = SP - 1
  TICK: 3464 PC:  33 ADDR:   0 MEM_OUT: 1 ACC: 0 LG_ALU: 3902 RG_ALU:   0 SP: 3902 ZF: 0 |	push   =
  ALU_RES -> SP
  TICK: 3465 PC:  33 ADDR:   0 MEM_OUT: 1 ACC: 0 LG_ALU: 3902 RG_ALU:   0 SP: 3901 ZF: 0 |	push   =
  WRITE ACC -> MEM[ALU]
  TICK: 3465 PC:  33 ADDR:   0 MEM_OUT: 1 ACC: 0 LG_ALU: 3902 RG_ALU:   0 SP: 3901 ZF: 0 |	push   =
  SP -> ALU_LG
  TICK: 3466 PC:  34 ADDR:   0 MEM_OUT: 1 ACC: 0 LG_ALU: 3901 RG_ALU:   0 SP: 3901 ZF: 0 |	pop   if
  ALU_RES = ALU_LG
  TICK: 3467 PC:  34 ADDR:   0 MEM_OUT: 1 ACC: 0 LG_ALU: 3901 RG_ALU:   0 SP: 3901 ZF: 0 |	pop   if
  READ MEM[ALU]
  TICK: 3468 PC:  34 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3901 RG_ALU:   0 SP: 3901 ZF: 0 |	pop   if
  ALU_RES = SP + 1
  TICK: 3469 PC:  34 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3901 RG_ALU:   0 SP: 3901 ZF: 0 |	pop   if
  ALU_RES -> SP
  TICK: 3470 PC:  34 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3901 RG_ALU:   0 SP: 3902 ZF: 0 |	pop   if
  MEM[ALU] -> ALU_RG
  TICK: 3470 PC:  34 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3901 RG_ALU:   0 SP: 3902 ZF: 0 |	pop   if
  ALU_RES = ALU_RG
  TICK: 3471 PC:  34 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3901 RG_ALU:   0 SP: 3902 ZF: 1 |	pop   if
  ALU_RES -> ACC
  TICK: 3472 PC:  34 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3901 RG_ALU:   0 SP: 3902 ZF: 1 |	pop   if
  PC + 1 -> PC
  ADDR -> PC
  NUM -> ALU_RG
  TICK: 3474 PC:  20 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3901 RG_ALU:   0 SP: 3902 ZF: 1 |	load   +
  ALU_RES = ALU_RG
  TICK: 3475 PC:  20 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3901 RG_ALU:   0 SP: 3902 ZF: 1 |	load   +
  ALU_RES -> ACC
  TICK: 3476 PC:  20 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3901 RG_ALU:   0 SP: 3902 ZF: 1 |	load   +
  NUM -> ALU_RG
  TICK: 3477 PC:  21 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3901 RG_ALU:   0 SP: 3902 ZF: 1 |	add   +
  ACC -> ALU_LG
  TICK: 3477 PC:  21 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU:   0 RG_ALU:   0 SP: 3902 ZF: 1 |	add   +
  ALU_RES = ALU_LG + ALU_RG
  TICK: 3478 PC:  21 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU:   0 RG_ALU:   0 SP: 3902 ZF: 1 |	add   +
  ALU_RES -> ACC
  TICK: 3479 PC:  21 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU:   0 RG_ALU:   0 SP: 3902 ZF: 1 |	add   +
  SP -> ALU_LG
  TICK: 3480 PC:  22 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3902 RG_ALU:   0 SP: 3902 ZF: 1 |	push   +
  ALU_RES = SP - 1
  TICK: 3481 PC:  22 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3902 RG_ALU:   0 SP: 3902 ZF: 0 |	push   +
  ALU_RES -> SP
  TICK: 3482 PC:  22 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3902 RG_ALU:   0 SP: 3901 ZF: 0 |	push   +
  WRITE ACC -> MEM[ALU]
  TICK: 3482 PC:  22 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3902 RG_ALU:   0 SP: 3901 ZF: 0 |	push   +
  ADDR -> PC
  SP -> ALU_LG
  TICK: 3484 PC:  37 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3901 RG_ALU:   0 SP: 3901 ZF: 0 |	pop   if
  ALU_RES = ALU_LG
  TICK: 3485 PC:  37 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3901 RG_ALU:   0 SP: 3901 ZF: 0 |	pop   if
  READ MEM[ALU]
  TICK: 3486 PC:  37 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3901 RG_ALU:   0 SP: 3901 ZF: 0 |	pop   if
  ALU_RES = SP + 1
  TICK: 3487 PC:  37 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3901 RG_ALU:   0 SP: 3901 ZF: 0 |	pop   if
  ALU_RES -> SP
  TICK: 3488 PC:  37 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3901 RG_ALU:   0 SP: 3902 ZF: 0 |	pop   if
  MEM[ALU] -> ALU_RG
  TICK: 3488 PC:  37 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3901 RG_ALU:   0 SP: 3902 ZF: 0 |	pop   if
  ALU_RES = ALU_RG
  TICK: 3489 PC:  37 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3901 RG_ALU:   0 SP: 3902 ZF: 1 |	pop   if
  ALU_RES -> ACC
  TICK: 3490 PC:  37 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3901 RG_ALU:   0 SP: 3902 ZF: 1 |	pop   if
  SP -> ALU_LG
  TICK: 3491 PC:  38 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3902 RG_ALU:   0 SP: 3902 ZF: 1 |	push   if
  ALU_RES = SP - 1
  TICK: 3492 PC:  38 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3902 RG_ALU:   0 SP: 3902 ZF: 0 |	push   if
  ALU_RES -> SP
  TICK: 3493 PC:  38 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3902 RG_ALU:   0 SP: 3901 ZF: 0 |	push   if
  WRITE ACC -> MEM[ALU]
  TICK: 3493 PC:  38 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3902 RG_ALU:   0 SP: 3901 ZF: 0 |	push   if
  ADDR -> ALU_RG
  TICK: 3494 PC:  39 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3902 RG_ALU:   6 SP: 3901 ZF: 0 |	load   var
  ALU_RES = ALU_RG
  TICK: 3495 PC:  39 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3902 RG_ALU:   6 SP: 3901 ZF: 0 |	load   var
  READ MEM[ALU]
  TICK: 3496 PC:  39 ADDR:   0 MEM_OUT: 28657 ACC: 0 LG_ALU: 3902 RG_ALU:   6 SP: 3901 ZF: 0 |	load   var
  MEM[ALU] -> ALU_RG
  TICK: 3497 PC:  39 ADDR:   0 MEM_OUT: 28657 ACC: 0 LG_ALU: 3902 RG_ALU: 28657 SP: 3901 ZF: 0 |	load   var
  ALU_RES = ALU_RG
  TICK: 3498 PC:  39 ADDR:   0 MEM_OUT: 28657 ACC: 0 LG_ALU: 3902 RG_ALU: 28657 SP: 3901 ZF: 0 |	load   var
  ALU_RES -> ACC
  TICK: 3499 PC:  39 ADDR:   0 MEM_OUT: 28657 ACC: 28657 LG_ALU: 3902 RG_ALU: 28657 SP: 3901 ZF: 0 |	load   var
  ADDR -> ALU_RG
  TICK: 3500 PC:  40 ADDR:   0 MEM_OUT: 28657 ACC: 28657 LG_ALU: 3902 RG_ALU:   8 SP: 3901 ZF: 0 |	store   var
  ALU_RES = ALU_RG
  TICK: 3501 PC:  40 ADDR:   0 MEM_OUT: 28657 ACC: 28657 LG_ALU: 3902 RG_ALU:   8 SP: 3901 ZF: 0 |	store   var
  WRITE ACC -> MEM[ALU]
  TICK: 3502 PC:  40 ADDR:   0 MEM_OUT: 28657 ACC: 28657 LG_ALU: 3902 RG_ALU:   8 SP: 3901 ZF: 0 |	store   var
  NUM -> ALU_RG
  TICK: 3503 PC:  41 ADDR:   0 MEM_OUT: 28657 ACC: 28657 LG_ALU: 3902 RG_ALU:   1 SP: 3901 ZF: 0 |	load   var
  ALU_RES = ALU_RG
  TICK: 3504 PC:  41 ADDR:   0 MEM_OUT: 28657 ACC: 28657 LG_ALU: 3902 RG_ALU:   1 SP: 3901 ZF: 0 |	load   var
  ALU_RES -> ACC
  TICK: 3505 PC:  41 ADDR:   0 MEM_OUT: 28657 ACC: 1 LG_ALU: 3902 RG_ALU:   1 SP: 3901 ZF: 0 |	load   var
  SP -> ALU_LG
  TICK: 3506 PC:  42 ADDR:   0 MEM_OUT: 28657 ACC: 1 LG_ALU: 3901 RG_ALU:   1 SP: 3901 ZF: 0 |	push   var
  ALU_RES = SP - 1
  TICK: 3507 PC:  42 ADDR:   0 MEM_OUT: 28657 ACC: 1 LG_ALU: 3901 RG_ALU:   1 SP: 3901 ZF: 0 |	push   var
  ALU_RES -> SP
  TICK: 3508 PC:  42 ADDR:   0 MEM_OUT: 28657 ACC: 1 LG_ALU: 3901 RG_ALU:   1 SP: 3900 ZF: 0 |	push   var
  WRITE ACC -> MEM[ALU]
  TICK: 3508 PC:  42 ADDR:   0 MEM_OUT: 28657 ACC: 1 LG_ALU: 3901 RG_ALU:   1 SP: 3900 ZF: 0 |	push   var
  ADDR -> ALU_RG
  TICK: 3509 PC:  43 ADDR:   0 MEM_OUT: 28657 ACC: 1 LG_ALU: 3901 RG_ALU:   5 SP: 3900 ZF: 0 |	load   +
  ALU_RES = ALU_RG
  TICK: 3510 PC:  43 ADDR:   0 MEM_OUT: 28657 ACC: 1 LG_ALU: 3901 RG_ALU:   5 SP: 3900 ZF: 0 |	load   +
  READ MEM[ALU]
  TICK: 3511 PC:  43 ADDR:   0 MEM_OUT: 17711 ACC: 1 LG_ALU: 3901 RG_ALU:   5 SP: 3900 ZF: 0 |	load   +
  MEM[ALU] -> ALU_RG
  TICK: 3512 PC:  43 ADDR:   0 MEM_OUT: 17711 ACC: 1 LG_ALU: 3901 RG_ALU: 17711 SP: 3900 ZF: 0 |	load   +
  ALU_RES = ALU_RG
  TICK: 3513 PC:  43 ADDR:   0 MEM_OUT: 17711 ACC: 1 LG_ALU: 3901 RG_ALU: 17711 SP: 3900 ZF: 0 |	load   +
  ALU_RES -> ACC
  TICK: 3514 PC:  43 ADDR:   0 MEM_OUT: 17711 ACC: 17711 LG_ALU: 3901 RG_ALU: 17711 SP: 3900 ZF: 0 |	load   +
  ADDR -> ALU_RG
  TICK: 3515 PC:  44 ADDR:   0 MEM_OUT: 17711 ACC: 17711 LG_ALU: 3901 RG_ALU:   6 SP: 3900 ZF: 0 |	add   +
  ALU_RES = ALU_RG
  TICK: 3516 PC:  44 ADDR:   0 MEM_OUT: 17711 ACC: 17711 LG_ALU: 3901 RG_ALU:   6 SP: 3900 ZF: 0 |	add   +
  READ MEM[ALU]
  TICK: 3517 PC:  44 ADDR:   0 MEM_OUT: 28657 ACC: 17711 LG_ALU: 3901 RG_ALU:   6 SP: 3900 ZF: 0 |	add   +
  MEM[ALU] -> ALU_RG
  TICK: 3518 PC:  44 ADDR:   0 MEM_OUT: 28657 ACC: 17711 LG_ALU: 3901 RG_ALU: 28657 SP: 3900 ZF: 0 |	add   +
  ACC -> ALU_LG
  TICK: 3518 PC:  44 ADDR:   0 MEM_OUT: 28657 ACC: 17711 LG_ALU: 17711 RG_ALU: 28657 SP: 3900 ZF: 0 |	add   +
  ALU_RES = ALU_LG + ALU_RG
  TICK: 3519 PC:  44 ADDR:   0 MEM_OUT: 28657 ACC: 17711 LG_ALU: 17711 RG_ALU: 28657 SP: 3900 ZF: 0 |	add   +
  ALU_RES -> ACC
  TICK: 3520 PC:  44 ADDR:   0 MEM_OUT: 28657 ACC: 46368 LG_ALU: 17711 RG_ALU: 28657 SP: 3900 ZF: 0 |	add   +
  SP -> ALU_LG
  TICK: 3521 PC:  45 ADDR:   0 MEM_OUT: 28657 ACC: 46368 LG_ALU: 3900 RG_ALU: 28657 SP: 3900 ZF: 0 |	push   +
  ALU_RES = SP - 1
  TICK: 3522 PC:  45 ADDR:   0 MEM_OUT: 28657 ACC: 46368 LG_ALU: 3900 RG_ALU: 28657 SP: 3900 ZF: 0 |	push   +
  ALU_RES -> SP
  TICK: 3523 PC:  45 ADDR:   0 MEM_OUT: 28657 ACC: 46368 LG_ALU: 3900 RG_ALU: 28657 SP: 3899 ZF: 0 |	push   +
  WRITE ACC -> MEM[ALU]
  TICK: 3523 PC:  45 ADDR:   0 MEM_OUT: 28657 ACC: 46368 LG_ALU: 3900 RG_ALU: 28657 SP: 3899 ZF: 0 |	push   +
  SP -> ALU_LG
  TICK: 3524 PC:  46 ADDR:   0 MEM_OUT: 28657 ACC: 46368 LG_ALU: 3899 RG_ALU: 28657 SP: 3899 ZF: 0 |	pop   var
  ALU_RES = ALU_LG
  TICK: 3525 PC:  46 ADDR:   0 MEM_OUT: 28657 ACC: 46368 LG_ALU: 3899 RG_ALU: 28657 SP: 3899 ZF: 0 |	pop   var
  READ MEM[ALU]
  TICK: 3526 PC:  46 ADDR:   0 MEM_OUT: 46368 ACC: 46368 LG_ALU: 3899 RG_ALU: 28657 SP: 3899 ZF: 0 |	pop   var
  ALU_RES = SP + 1
  TICK: 3527 PC:  46 ADDR:   0 MEM_OUT: 46368 ACC: 46368 LG_ALU: 3899 RG_ALU: 28657 SP: 3899 ZF: 0 |	pop   var
  ALU_RES -> SP
  TICK: 3528 PC:  46 ADDR:   0 MEM_OUT: 46368 ACC: 46368 LG_ALU: 3899 RG_ALU: 28657 SP: 3900 ZF: 0 |	pop   var
  MEM[ALU] -> ALU_RG
  TICK: 3528 PC:  46 ADDR:   0 MEM_OUT: 46368 ACC: 46368 LG_ALU: 3899 RG_ALU: 46368 SP: 3900 ZF: 0 |	pop   var
  ALU_RES = ALU_RG
  TICK: 3529 PC:  46 ADDR:   0 MEM_OUT: 46368 ACC: 46368 LG_ALU: 3899 RG_ALU: 46368 SP: 3900 ZF: 0 |	pop   var
  ALU_RES -> ACC
  TICK: 3530 PC:  46 ADDR:   0 MEM_OUT: 46368 ACC: 46368 LG_ALU: 3899 RG_ALU: 46368 SP: 3900 ZF: 0 |	pop   var
  ADDR -> ALU_RG
  TICK: 3531 PC:  47 ADDR:   0 MEM_OUT: 46368 ACC: 46368 LG_ALU: 3899 RG_ALU:   6 SP: 3900 ZF: 0 |	store   var
  ALU_RES = ALU_RG
  TICK: 3532 PC:  47 ADDR:   0 MEM_OUT: 46368 ACC: 46368 LG_ALU: 3899 RG_ALU:   6 SP: 3900 ZF: 0 |	store   var
  WRITE ACC -> MEM[ALU]
  TICK: 3533 PC:  47 ADDR:   0 MEM_OUT: 46368 ACC: 46368 LG_ALU: 3899 RG_ALU:   6 SP: 3900 ZF: 0 |	store   var
  NUM -> ALU_RG
  TICK: 3534 PC:  48 ADDR:   0 MEM_OUT: 46368 ACC: 46368 LG_ALU: 3899 RG_ALU:   1 SP: 3900 ZF: 0 |	load   var
  ALU_RES = ALU_RG
  TICK: 3535 PC:  48 ADDR:   0 MEM_OUT: 46368 ACC: 46368 LG_ALU: 3899 RG_ALU:   1 SP: 3900 ZF: 0 |	load   var
  ALU_RES -> ACC
  TICK: 3536 PC:  48 ADDR:   0 MEM_OUT: 46368 ACC: 1 LG_ALU: 3899 RG_ALU:   1 SP: 3900 ZF: 0 |	load   var
  SP -> ALU_LG
  TICK: 3537 PC:  49 ADDR:   0 MEM_OUT: 46368 ACC: 1 LG_ALU: 3900 RG_ALU:   1 SP: 3900 ZF: 0 |	push   var
  ALU_RES = SP - 1
  TICK: 3538 PC:  49 ADDR:   0 MEM_OUT: 46368 ACC: 1 LG_ALU: 3900 RG_ALU:   1 SP: 3900 ZF: 0 |	push   var
  ALU_RES -> SP
  TICK: 3539 PC:  49 ADDR:   0 MEM_OUT: 46368 ACC: 1 LG_ALU: 3900 RG_ALU:   1 SP: 3899 ZF: 0 |	push   var
  WRITE ACC -> MEM[ALU]
  TICK: 3539 PC:  49 ADDR:   0 MEM_OUT: 46368 ACC: 1 LG_ALU: 3900 RG_ALU:   1 SP: 3899 ZF: 0 |	push   var
  ADDR -> ALU_RG
  TICK: 3540 PC:  50 ADDR:   0 MEM_OUT: 46368 ACC: 1 LG_ALU: 3900 RG_ALU:   8 SP: 3899 ZF: 0 |	load   var
  ALU_RES = ALU_RG
  TICK: 3541 PC:  50 ADDR:   0 MEM_OUT: 46368 ACC: 1 LG_ALU: 3900 RG_ALU:   8 SP: 3899 ZF: 0 |	load   var
  READ MEM[ALU]
  TICK: 3542 PC:  50 ADDR:   0 MEM_OUT: 28657 ACC: 1 LG_ALU: 3900 RG_ALU:   8 SP: 3899 ZF: 0 |	load   var
  MEM[ALU] -> ALU_RG
  TICK: 3543 PC:  50 ADDR:   0 MEM_OUT: 28657 ACC: 1 LG_ALU: 3900 RG_ALU: 28657 SP: 3899 ZF: 0 |	load   var
  ALU_RES = ALU_RG
  TICK: 3544 PC:  50 ADDR:   0 MEM_OUT: 28657 ACC: 1 LG_ALU: 3900 RG_ALU: 28657 SP: 3899 ZF: 0 |	load   var
  ALU_RES -> ACC
  TICK: 3545 PC:  50 ADDR:   0 MEM_OUT: 28657 ACC: 28657 LG_ALU: 3900 RG_ALU: 28657 SP: 3899 ZF: 0 |	load   var
  ADDR -> ALU_RG
  TICK: 3546 PC:  51 ADDR:   0 MEM_OUT: 28657 ACC: 28657 LG_ALU: 3900 RG_ALU:   5 SP: 3899 ZF: 0 |	store   var
  ALU_RES = ALU_RG
  TICK: 3547 PC:  51 ADDR:   0 MEM_OUT: 28657 ACC: 28657 LG_ALU: 3900 RG_ALU:   5 SP: 3899 ZF: 0 |	store   var
  WRITE ACC -> MEM[ALU]
  TICK: 3548 PC:  51 ADDR:   0 MEM_OUT: 28657 ACC: 28657 LG_ALU: 3900 RG_ALU:   5 SP: 3899 ZF: 0 |	store   var
  NUM -> ALU_RG
  TICK: 3549 PC:  52 ADDR:   0 MEM_OUT: 28657 ACC: 28657 LG_ALU: 3900 RG_ALU:   1 SP: 3899 ZF: 0 |	load   var
  ALU_RES = ALU_RG
  TICK: 3550 PC:  52 ADDR:   0 MEM_OUT: 28657 ACC: 28657 LG_ALU: 3900 RG_ALU:   1 SP: 3899 ZF: 0 |	load   var
  ALU_RES -> ACC
  TICK: 3551 PC:  52 ADDR:   0 MEM_OUT: 28657 ACC: 1 LG_ALU: 3900 RG_ALU:   1 SP: 3899 ZF: 0 |	load   var
  SP -> ALU_LG
  TICK: 3552 PC:  53 ADDR:   0 MEM_OUT: 28657 ACC: 1 LG_ALU: 3899 RG_ALU:   1 SP: 3899 ZF: 0 |	push   var
  ALU_RES = SP - 1
  TICK: 3553 PC:  53 ADDR:   0 MEM_OUT: 28657 ACC: 1 LG_ALU: 3899 RG_ALU:   1 SP: 3899 ZF: 0 |	push   var
  ALU_RES -> SP
  TICK: 3554 PC:  53 ADDR:   0 MEM_OUT: 28657 ACC: 1 LG_ALU: 3899 RG_ALU:   1 SP: 3898 ZF: 0 |	push   var
  WRITE ACC -> MEM[ALU]
  TICK: 3554 PC:  53 ADDR:   0 MEM_OUT: 28657 ACC: 1 LG_ALU: 3899 RG_ALU:   1 SP: 3898 ZF: 0 |	push   var
  ADDR -> ALU_RG
  TICK: 3555 PC:  54 ADDR:   0 MEM_OUT: 28657 ACC: 1 LG_ALU: 3899 RG_ALU:   6 SP: 3898 ZF: 0 |	load   <
  ALU_RES = ALU_RG
  TICK: 3556 PC:  54 ADDR:   0 MEM_OUT: 28657 ACC: 1 LG_ALU: 3899 RG_ALU:   6 SP: 3898 ZF: 0 |	load   <
  READ MEM[ALU]
  TICK: 3557 PC:  54 ADDR:   0 MEM_OUT: 46368 ACC: 1 LG_ALU: 3899 RG_ALU:   6 SP: 3898 ZF: 0 |	load   <
  MEM[ALU] -> ALU_RG
  TICK: 3558 PC:  54 ADDR:   0 MEM_OUT: 46368 ACC: 1 LG_ALU: 3899 RG_ALU: 46368 SP: 3898 ZF: 0 |	load   <
  ALU_RES = ALU_RG
  TICK: 3559 PC:  54 ADDR:   0 MEM_OUT: 46368 ACC: 1 LG_ALU: 3899 RG_ALU: 46368 SP: 3898 ZF: 0 |	load   <
  ALU_RES -> ACC
  TICK: 3560 PC:  54 ADDR:   0 MEM_OUT: 46368 ACC: 46368 LG_ALU: 3899 RG_ALU: 46368 SP: 3898 ZF: 0 |	load   <
  ADDR -> ALU_RG
  TICK: 3561 PC:  55 ADDR:   0 MEM_OUT: 46368 ACC: 46368 LG_ALU: 3899 RG_ALU:   7 SP: 3898 ZF: 0 |	sub   <
  ALU_RES = ALU_RG
  TICK: 3562 PC:  55 ADDR:   0 MEM_OUT: 46368 ACC: 46368 LG_ALU: 3899 RG_ALU:   7 SP: 3898 ZF: 0 |	sub   <
  READ MEM[ALU]
  TICK: 3563 PC:  55 ADDR:   0 MEM_OUT: 400000 ACC: 46368 LG_ALU: 3899 RG_ALU:   7 SP: 3898 ZF: 0 |	sub   <
  MEM[ALU] -> ALU_RG
  TICK: 3564 PC:  55 ADDR:   0 MEM_OUT: 400000 ACC: 46368 LG_ALU: 3899 RG_ALU: 400000 SP: 3898 ZF: 0 |	sub   <
  ACC -> ALU_LG
  TICK: 3564 PC:  55 ADDR:   0 MEM_OUT: 400000 ACC: 46368 LG_ALU: 46368 RG_ALU: 400000 SP: 3898 ZF: 0 |	sub   <
  ALU_RES = ALU_LG + ALU_RG
  TICK: 3565 PC:  55 ADDR:   0 MEM_OUT: 400000 ACC: 46368 LG_ALU: 46368 RG_ALU: 400000 SP: 3898 ZF: 0 |	sub   <
  ALU_RES -> ACC
  TICK: 3566 PC:  55 ADDR:   0 MEM_OUT: 400000 ACC: -353632 LG_ALU: 46368 RG_ALU: 400000 SP: 3898 ZF: 0 |	sub   <
  PC + 1 -> PC
  NUM -> ALU_RG
  TICK: 3567 PC:  57 ADDR:   0 MEM_OUT: 400000 ACC: -353632 LG_ALU: 46368 RG_ALU:   1 SP: 3898 ZF: 0 |	load   <
  ALU_RES = ALU_RG
  TICK: 3568 PC:  57 ADDR:   0 MEM_OUT: 400000 ACC: -353632 LG_ALU: 46368 RG_ALU:   1 SP: 3898 ZF: 0 |	load   <
  ALU_RES -> ACC
  TICK: 3569 PC:  57 ADDR:   0 MEM_OUT: 400000 ACC: 1 LG_ALU: 46368 RG_ALU:   1 SP: 3898 ZF: 0 |	load   <
  ADDR -> PC
  SP -> ALU_LG
  TICK: 3571 PC:  60 ADDR:   0 MEM_OUT: 400000 ACC: 1 LG_ALU: 3898 RG_ALU:   1 SP: 3898 ZF: 0 |	push   <
  ALU_RES = SP - 1
  TICK: 3572 PC:  60 ADDR:   0 MEM_OUT: 400000 ACC: 1 LG_ALU: 3898 RG_ALU:   1 SP: 3898 ZF: 0 |	push   <
  ALU_RES -> SP
  TICK: 3573 PC:  60 ADDR:   0 MEM_OUT: 400000 ACC: 1 LG_ALU: 3898 RG_ALU:   1 SP: 3897 ZF: 0 |	push   <
  WRITE ACC -> MEM[ALU]
  TICK: 3573 PC:  60 ADDR:   0 MEM_OUT: 400000 ACC: 1 LG_ALU: 3898 RG_ALU:   1 SP: 3897 ZF: 0 |	push   <
  SP -> ALU_LG
  TICK: 3574 PC:  61 ADDR:   0 MEM_OUT: 400000 ACC: 1 LG_ALU: 3897 RG_ALU:   1 SP: 3897 ZF: 0 |	pop
  ALU_RES = ALU_LG
  TICK: 3575 PC:  61 ADDR:   0 MEM_OUT: 400000 ACC: 1 LG_ALU: 3897 RG_ALU:   1 SP: 3897 ZF: 0 |	pop
  READ MEM[ALU]
  TICK: 3576 PC:  61 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3897 RG_ALU:   1 SP: 3897 ZF: 0 |	pop
  ALU_RES = SP + 1
  TICK: 3577 PC:  61 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3897 RG_ALU:   1 SP: 3897 ZF: 0 |	pop
  ALU_RES -> SP
  TICK: 3578 PC:  61 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3897 RG_ALU:   1 SP: 3898 ZF: 0 |	pop
  MEM[ALU] -> ALU_RG
  TICK: 3578 PC:  61 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3897 RG_ALU:   1 SP: 3898 ZF: 0 |	pop
  ALU_RES = ALU_RG
  TICK: 3579 PC:  61 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3897 RG_ALU:   1 SP: 3898 ZF: 0 |	pop
  ALU_RES -> ACC
  TICK: 3580 PC:  61 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3897 RG_ALU:   1 SP: 3898 ZF: 0 |	pop
  ADDR -> PC
  ADDR -> PC
  ADDR -> ALU_RG
  TICK: 3583 PC:  24 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3897 RG_ALU:   6 SP: 3898 ZF: 0 |	load
  ALU_RES = ALU_RG
  TICK: 3584 PC:  24 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3897 RG_ALU:   6 SP: 3898 ZF: 0 |	load
  READ MEM[ALU]
  TICK: 3585 PC:  24 ADDR:   0 MEM_OUT: 46368 ACC: 1 LG_ALU: 3897 RG_ALU:   6 SP: 3898 ZF: 0 |	load
  MEM[ALU] -> ALU_RG
  TICK: 3586 PC:  24 ADDR:   0 MEM_OUT: 46368 ACC: 1 LG_ALU: 3897 RG_ALU: 46368 SP: 3898 ZF: 0 |	load
  ALU_RES = ALU_RG
  TICK: 3587 PC:  24 ADDR:   0 MEM_OUT: 46368 ACC: 1 LG_ALU: 3897 RG_ALU: 46368 SP: 3898 ZF: 0 |	load
  ALU_RES -> ACC
  TICK: 3588 PC:  24 ADDR:   0 MEM_OUT: 46368 ACC: 46368 LG_ALU: 3897 RG_ALU: 46368 SP: 3898 ZF: 0 |	load
  NUM -> ALU_RG
  TICK: 3589 PC:  25 ADDR:   0 MEM_OUT: 46368 ACC: 46368 LG_ALU: 3897 RG_ALU:   2 SP: 3898 ZF: 0 |	mod
  ACC -> ALU_LG
  TICK: 3589 PC:  25 ADDR:   0 MEM_OUT: 46368 ACC: 46368 LG_ALU: 46368 RG_ALU:   2 SP: 3898 ZF: 0 |	mod
  ALU_RES = ALU_LG % ALU_RG
  TICK: 3590 PC:  25 ADDR:   0 MEM_OUT: 46368 ACC: 46368 LG_ALU: 46368 RG_ALU:   2 SP: 3898 ZF: 1 |	mod
  ALU_RES -> ACC
  TICK: 3591 PC:  25 ADDR:   0 MEM_OUT: 46368 ACC: 0 LG_ALU: 46368 RG_ALU:   2 SP: 3898 ZF: 1 |	mod
  SP -> ALU_LG
  TICK: 3592 PC:  26 ADDR:   0 MEM_OUT: 46368 ACC: 0 LG_ALU: 3898 RG_ALU:   2 SP: 3898 ZF: 1 |	push
  ALU_RES = SP - 1
  TICK: 3593 PC:  26 ADDR:   0 MEM_OUT: 46368 ACC: 0 LG_ALU: 3898 RG_ALU:   2 SP: 3898 ZF: 0 |	push
  ALU_RES -> SP
  TICK: 3594 PC:  26 ADDR:   0 MEM_OUT: 46368 ACC: 0 LG_ALU: 3898 RG_ALU:   2 SP: 3897 ZF: 0 |	push
  WRITE ACC -> MEM[ALU]
  TICK: 3594 PC:  26 ADDR:   0 MEM_OUT: 46368 ACC: 0 LG_ALU: 3898 RG_ALU:   2 SP: 3897 ZF: 0 |	push
  NUM -> ALU_RG
  TICK: 3595 PC:  27 ADDR:   0 MEM_OUT: 46368 ACC: 0 LG_ALU: 3898 RG_ALU:   0 SP: 3897 ZF: 0 |	load   =
  ALU_RES = ALU_RG
  TICK: 3596 PC:  27 ADDR:   0 MEM_OUT: 46368 ACC: 0 LG_ALU: 3898 RG_ALU:   0 SP: 3897 ZF: 1 |	load   =
  ALU_RES -> ACC
  TICK: 3597 PC:  27 ADDR:   0 MEM_OUT: 46368 ACC: 0 LG_ALU: 3898 RG_ALU:   0 SP: 3897 ZF: 1 |	load   =
  SP -> ALU_LG
  TICK: 3598 PC:  28 ADDR:   0 MEM_OUT: 46368 ACC: 0 LG_ALU: 3897 RG_ALU:   0 SP: 3897 ZF: 1 |	sub   =
  ALU_RES = ALU_LG
  TICK: 3599 PC:  28 ADDR:   0 MEM_OUT: 46368 ACC: 0 LG_ALU: 3897 RG_ALU:   0 SP: 3897 ZF: 0 |	sub   =
  READ MEM[ALU]
  TICK: 3600 PC:  28 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3897 RG_ALU:   0 SP: 3897 ZF: 0 |	sub   =
  MEM[ALU] -> ALU_RG
  TICK: 3601 PC:  28 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3897 RG_ALU:   0 SP: 3897 ZF: 0 |	sub   =
  ALU_RES = SP + 1
  TICK: 3602 PC:  28 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3897 RG_ALU:   0 SP: 3897 ZF: 0 |	sub   =
  ALU_RES -> SP
  TICK: 3603 PC:  28 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3897 RG_ALU:   0 SP: 3898 ZF: 0 |	sub   =
  ACC -> ALU_LG
  TICK: 3603 PC:  28 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU:   0 RG_ALU:   0 SP: 3898 ZF: 0 |	sub   =
  ALU_RES = ALU_LG + ALU_RG
  TICK: 3604 PC:  28 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU:   0 RG_ALU:   0 SP: 3898 ZF: 1 |	sub   =
  ALU_RES -> ACC
  TICK: 3605 PC:  28 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU:   0 RG_ALU:   0 SP: 3898 ZF: 1 |	sub   =
  PC + 1 -> PC
  NUM -> ALU_RG
  TICK: 3606 PC:  30 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU:   0 RG_ALU:   1 SP: 3898 ZF: 1 |	load   =
  ALU_RES = ALU_RG
  TICK: 3607 PC:  30 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU:   0 RG_ALU:   1 SP: 3898 ZF: 0 |	load   =
  ALU_RES -> ACC
  TICK: 3608 PC:  30 ADDR:   0 MEM_OUT: 0 ACC: 1 LG_ALU:   0 RG_ALU:   1 SP: 3898 ZF: 0 |	load   =
  ADDR -> PC
  SP -> ALU_LG
  TICK: 3610 PC:  33 ADDR:   0 MEM_OUT: 0 ACC: 1 LG_ALU: 3898 RG_ALU:   1 SP: 3898 ZF: 0 |	push   =
  ALU_RES = SP - 1
  TICK: 3611 PC:  33 ADDR:   0 MEM_OUT: 0 ACC: 1 LG_ALU: 3898 RG_ALU:   1 SP: 3898 ZF: 0 |	push   =
  ALU_RES -> SP
  TICK: 3612 PC:  33 ADDR:   0 MEM_OUT: 0 ACC: 1 LG_ALU: 3898 RG_ALU:   1 SP: 3897 ZF: 0 |	push   =
  WRITE ACC -> MEM[ALU]
  TICK: 3612 PC:  33 ADDR:   0 MEM_OUT: 0 ACC: 1 LG_ALU: 3898 RG_ALU:   1 SP: 3897 ZF: 0 |	push   =
  SP -> ALU_LG
  TICK: 3613 PC:  34 ADDR:   0 MEM_OUT: 0 ACC: 1 LG_ALU: 3897 RG_ALU:   1 SP: 3897 ZF: 0 |	pop   if
  ALU_RES = ALU_LG
  TICK: 3614 PC:  34 ADDR:   0 MEM_OUT: 0 ACC: 1 LG_ALU: 3897 RG_ALU:   1 SP: 3897 ZF: 0 |	pop   if
  READ MEM[ALU]
  TICK: 3615 PC:  34 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3897 RG_ALU:   1 SP: 3897 ZF: 0 |	pop   if
  ALU_RES = SP + 1
  TICK: 3616 PC:  34 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3897 RG_ALU:   1 SP: 3897 ZF: 0 |	pop   if
  ALU_RES -> SP
  TICK: 3617 PC:  34 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3897 RG_ALU:   1 SP: 3898 ZF: 0 |	pop   if
  MEM[ALU] -> ALU_RG
  TICK: 3617 PC:  34 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3897 RG_ALU:   1 SP: 3898 ZF: 0 |	pop   if
  ALU_RES = ALU_RG
  TICK: 3618 PC:  34 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3897 RG_ALU:   1 SP: 3898 ZF: 0 |	pop   if
  ALU_RES -> ACC
  TICK: 3619 PC:  34 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3897 RG_ALU:   1 SP: 3898 ZF: 0 |	pop   if
  ADDR -> PC
  ADDR -> ALU_RG
  TICK: 3621 PC:   7 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3897 RG_ALU:   6 SP: 3898 ZF: 0 |	load   print
  ALU_RES = ALU_RG
  TICK: 3622 PC:   7 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3897 RG_ALU:   6 SP: 3898 ZF: 0 |	load   print
  READ MEM[ALU]
  TICK: 3623 PC:   7 ADDR:   0 MEM_OUT: 46368 ACC: 1 LG_ALU: 3897 RG_ALU:   6 SP: 3898 ZF: 0 |	load   print
  MEM[ALU] -> ALU_RG
  TICK: 3624 PC:   7 ADDR:   0 MEM_OUT: 46368 ACC: 1 LG_ALU: 3897 RG_ALU: 46368 SP: 3898 ZF: 0 |	load   print
  ALU_RES = ALU_RG
  TICK: 3625 PC:   7 ADDR:   0 MEM_OUT: 46368 ACC: 1 LG_ALU: 3897 RG_ALU: 46368 SP: 3898 ZF: 0 |	load   print
  ALU_RES -> ACC
  TICK: 3626 PC:   7 ADDR:   0 MEM_OUT: 46368 ACC: 46368 LG_ALU: 3897 RG_ALU: 46368 SP: 3898 ZF: 0 |	load   print
  get IO module port
  TICK: 3627 PC:   8 ADDR:   0 MEM_OUT: 46368 ACC: 46368 LG_ALU: 3897 RG_ALU: 46368 SP: 3898 ZF: 0 |	output   print
  ACC -> OUTPUT 
  TICK: 3628 PC:   8 ADDR:   0 MEM_OUT: 46368 ACC: 46368 LG_ALU: 3897 RG_ALU: 46368 SP: 3898 ZF: 0 |	output   print
  NUM -> ALU_RG
  TICK: 3629 PC:   9 ADDR:   0 MEM_OUT: 46368 ACC: 46368 LG_ALU: 3897 RG_ALU:   1 SP: 3898 ZF: 0 |	load   print
  ALU_RES = ALU_RG
  TICK: 3630 PC:   9 ADDR:   0 MEM_OUT: 46368 ACC: 46368 LG_ALU: 3897 RG_ALU:   1 SP: 3898 ZF: 0 |	load   print
  ALU_RES -> ACC
  TICK: 3631 PC:   9 ADDR:   0 MEM_OUT: 46368 ACC: 1 LG_ALU: 3897 RG_ALU:   1 SP: 3898 ZF: 0 |	load   print
  SP -> ALU_LG
  TICK: 3632 PC:  10 ADDR:   0 MEM_OUT: 46368 ACC: 1 LG_ALU: 3898 RG_ALU:   1 SP: 3898 ZF: 0 |	push   print
  ALU_RES = SP - 1
  TICK: 3633 PC:  10 ADDR:   0 MEM_OUT: 46368 ACC: 1 LG_ALU: 3898 RG_ALU:   1 SP: 3898 ZF: 0 |	push   print
  ALU_RES -> SP
  TICK: 3634 PC:  10 ADDR:   0 MEM_OUT: 46368 ACC: 1 LG_ALU: 3898 RG_ALU:   1 SP: 3897 ZF: 0 |	push   print
  WRITE ACC -> MEM[ALU]
  TICK: 3634 PC:  10 ADDR:   0 MEM_OUT: 46368 ACC: 1 LG_ALU: 3898 RG_ALU:   1 SP: 3897 ZF: 0 |	push   print
  NUM -> ALU_RG
  TICK: 3635 PC:  11 ADDR:   0 MEM_OUT: 46368 ACC: 1 LG_ALU: 3898 RG_ALU:  95 SP: 3897 ZF: 0 |	load   print
  ALU_RES = ALU_RG
  TICK: 3636 PC:  11 ADDR:   0 MEM_OUT: 46368 ACC: 1 LG_ALU: 3898 RG_ALU:  95 SP: 3897 ZF: 0 |	load   print
  ALU_RES -> ACC
  TICK: 3637 PC:  11 ADDR:   0 MEM_OUT: 46368 ACC: 95 LG_ALU: 3898 RG_ALU:  95 SP: 3897 ZF: 0 |	load   print
  get IO module port
  TICK: 3638 PC:  12 ADDR:   0 MEM_OUT: 46368 ACC: 95 LG_ALU: 3898 RG_ALU:  95 SP: 3897 ZF: 0 |	output   print
  ACC -> OUTPUT 
  TICK: 3639 PC:  12 ADDR:   0 MEM_OUT: 46368 ACC: 95 LG_ALU: 3898 RG_ALU:  95 SP: 3897 ZF: 0 |	output   print
  NUM -> ALU_RG
  TICK: 3640 PC:  13 ADDR:   0 MEM_OUT: 46368 ACC: 95 LG_ALU: 3898 RG_ALU:   0 SP: 3897 ZF: 0 |	load   print
  ALU_RES = ALU_RG
  TICK: 3641 PC:  13 ADDR:   0 MEM_OUT: 46368 ACC: 95 LG_ALU: 3898 RG_ALU:   0 SP: 3897 ZF: 1 |	load   print
  ALU_RES -> ACC
  TICK: 3642 PC:  13 ADDR:   0 MEM_OUT: 46368 ACC: 0 LG_ALU: 3898 RG_ALU:   0 SP: 3897 ZF: 1 |	load   print
  get IO module port
  TICK: 3643 PC:  14 ADDR:   0 MEM_OUT: 46368 ACC: 0 LG_ALU: 3898 RG_ALU:   0 SP: 3897 ZF: 1 |	output   print
  ACC -> OUTPUT 
  TICK: 3644 PC:  14 ADDR:   0 MEM_OUT: 46368 ACC: 0 LG_ALU: 3898 RG_ALU:   0 SP: 3897 ZF: 1 |	output   print
  NUM -> ALU_RG
  TICK: 3645 PC:  15 ADDR:   0 MEM_OUT: 46368 ACC: 0 LG_ALU: 3898 RG_ALU:   0 SP: 3897 ZF: 1 |	load   print
  ALU_RES = ALU_RG
  TICK: 3646 PC:  15 ADDR:   0 MEM_OUT: 46368 ACC: 0 LG_ALU: 3898 RG_ALU:   0 SP: 3897 ZF: 1 |	load   print
  ALU_RES -> ACC
  TICK: 3647 PC:  15 ADDR:   0 MEM_OUT: 46368 ACC: 0 LG_ALU: 3898 RG_ALU:   0 SP: 3897 ZF: 1 |	load   print
  get IO module port
  TICK: 3648 PC:  16 ADDR:   0 MEM_OUT: 46368 ACC: 0 LG_ALU: 3898 RG_ALU:   0 SP: 3897 ZF: 1 |	output   print
  ACC -> OUTPUT 
  TICK: 3649 PC:  16 ADDR:   0 MEM_OUT: 46368 ACC: 0 LG_ALU: 3898 RG_ALU:   0 SP: 3897 ZF: 1 |	output   print
  NUM -> ALU_RG
  TICK: 3650 PC:  17 ADDR:   0 MEM_OUT: 46368 ACC: 0 LG_ALU: 3898 RG_ALU:   1 SP: 3897 ZF: 1 |	load   print
  ALU_RES = ALU_RG
  TICK: 3651 PC:  17 ADDR:   0 MEM_OUT: 46368 ACC: 0 LG_ALU: 3898 RG_ALU:   1 SP: 3897 ZF: 0 |	load   print
  ALU_RES -> ACC
  TICK: 3652 PC:  17 ADDR:   0 MEM_OUT: 46368 ACC: 1 LG_ALU: 3898 RG_ALU:   1 SP: 3897 ZF: 0 |	load   print
  SP -> ALU_LG
  TICK: 3653 PC:  18 ADDR:   0 MEM_OUT: 46368 ACC: 1 LG_ALU: 3897 RG_ALU:   1 SP: 3897 ZF: 0 |	push   print
  ALU_RES = SP - 1
  TICK: 3654 PC:  18 ADDR:   0 MEM_OUT: 46368 ACC: 1 LG_ALU: 3897 RG_ALU:   1 SP: 3897 ZF: 0 |	push   print
  ALU_RES -> SP
  TICK: 3655 PC:  18 ADDR:   0 MEM_OUT: 46368 ACC: 1 LG_ALU: 3897 RG_ALU:   1 SP: 3896 ZF: 0 |	push   print
  WRITE ACC -> MEM[ALU]
  TICK: 3655 PC:  18 ADDR:   0 MEM_OUT: 46368 ACC: 1 LG_ALU: 3897 RG_ALU:   1 SP: 3896 ZF: 0 |	push   print
  ADDR -> PC
  SP -> ALU_LG
  TICK: 3657 PC:  37 ADDR:   0 MEM_OUT: 46368 ACC: 1 LG_ALU: 3896 RG_ALU:   1 SP: 3896 ZF: 0 |	pop   if
  ALU_RES = ALU_LG
  TICK: 3658 PC:  37 ADDR:   0 MEM_OUT: 46368 ACC: 1 LG_ALU: 3896 RG_ALU:   1 SP: 3896 ZF: 0 |	pop   if
  READ MEM[ALU]
  TICK: 3659 PC:  37 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3896 RG_ALU:   1 SP: 3896 ZF: 0 |	pop   if
  ALU_RES = SP + 1
  TICK: 3660 PC:  37 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3896 RG_ALU:   1 SP: 3896 ZF: 0 |	pop   if
  ALU_RES -> SP
  TICK: 3661 PC:  37 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3896 RG_ALU:   1 SP: 3897 ZF: 0 |	pop   if
  MEM[ALU] -> ALU_RG
  TICK: 3661 PC:  37 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3896 RG_ALU:   1 SP: 3897 ZF: 0 |	pop   if
  ALU_RES = ALU_RG
  TICK: 3662 PC:  37 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3896 RG_ALU:   1 SP: 3897 ZF: 0 |	pop   if
  ALU_RES -> ACC
  TICK: 3663 PC:  37 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3896 RG_ALU:   1 SP: 3897 ZF: 0 |	pop   if
  SP -> ALU_LG
  TICK: 3664 PC:  38 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3897 RG_ALU:   1 SP: 3897 ZF: 0 |	push   if
  ALU_RES = SP - 1
  TICK: 3665 PC:  38 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3897 RG_ALU:   1 SP: 3897 ZF: 0 |	push   if
  ALU_RES -> SP
  TICK: 3666 PC:  38 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3897 RG_ALU:   1 SP: 3896 ZF: 0 |	push   if
  WRITE ACC -> MEM[ALU]
  TICK: 3666 PC:  38 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3897 RG_ALU:   1 SP: 3896 ZF: 0 |	push   if
  ADDR -> ALU_RG
  TICK: 3667 PC:  39 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3897 RG_ALU:   6 SP: 3896 ZF: 0 |	load   var
  ALU_RES = ALU_RG
  TICK: 3668 PC:  39 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3897 RG_ALU:   6 SP: 3896 ZF: 0 |	load   var
  READ MEM[ALU]
  TICK: 3669 PC:  39 ADDR:   0 MEM_OUT: 46368 ACC: 1 LG_ALU: 3897 RG_ALU:   6 SP: 3896 ZF: 0 |	load   var
  MEM[ALU] -> ALU_RG
  TICK: 3670 PC:  39 ADDR:   0 MEM_OUT: 46368 ACC: 1 LG_ALU: 3897 RG_ALU: 46368 SP: 3896 ZF: 0 |	load   var
  ALU_RES = ALU_RG
  TICK: 3671 PC:  39 ADDR:   0 MEM_OUT: 46368 ACC: 1 LG_ALU: 3897 RG_ALU: 46368 SP: 3896 ZF: 0 |	load   var
  ALU_RES -> ACC
  TICK: 3672 PC:  39 ADDR:   0 MEM_OUT: 46368 ACC: 46368 LG_ALU: 3897 RG_ALU: 46368 SP: 3896 ZF: 0 |	load   var
  ADDR -> ALU_RG
  TICK: 3673 PC:  40 ADDR:   0 MEM_OUT: 46368 ACC: 46368 LG_ALU: 3897 RG_ALU:   8 SP: 3896 ZF: 0 |	store   var
  ALU_RES = ALU_RG
  TICK: 3674 PC:  40 ADDR:   0 MEM_OUT: 46368 ACC: 46368 LG_ALU: 3897 RG_ALU:   8 SP: 3896 ZF: 0 |	store   var
  WRITE ACC -> MEM[ALU]
  TICK: 3675 PC:  40 ADDR:   0 MEM_OUT: 46368 ACC: 46368 LG_ALU: 3897 RG_ALU:   8 SP: 3896 ZF: 0 |	store   var
  NUM -> ALU_RG
  TICK: 3676 PC:  41 ADDR:   0 MEM_OUT: 46368 ACC: 46368 LG_ALU: 3897 RG_ALU:   1 SP: 3896 ZF: 0 |	load   var
  ALU_RES = ALU_RG
  TICK: 3677 PC:  41 ADDR:   0 MEM_OUT: 46368 ACC: 46368 LG_ALU: 3897 RG_ALU:   1 SP: 3896 ZF: 0 |	load   var
  ALU_RES -> ACC
  TICK: 3678 PC:  41 ADDR:   0 MEM_OUT: 46368 ACC: 1 LG_ALU: 3897 RG_ALU:   1 SP: 3896 ZF: 0 |	load   var
  SP -> ALU_LG
  TICK: 3679 PC:  42 ADDR:   0 MEM_OUT: 46368 ACC: 1 LG_ALU: 3896 RG_ALU:   1 SP: 3896 ZF: 0 |	push   var
  ALU_RES = SP - 1
  TICK: 3680 PC:  42 ADDR:   0 MEM_OUT: 46368 ACC: 1 LG_ALU: 3896 RG_ALU:   1 SP: 3896 ZF: 0 |	push   var
  ALU_RES -> SP
  TICK: 3681 PC:  42 ADDR:   0 MEM_OUT: 46368 ACC: 1 LG_ALU: 3896 RG_ALU:   1 SP: 3895 ZF: 0 |	push   var
  WRITE ACC -> MEM[ALU]
  TICK: 3681 PC:  42 ADDR:   0 MEM_OUT: 46368 ACC: 1 LG_ALU: 3896 RG_ALU:   1 SP: 3895 ZF: 0 |	push   var
  ADDR -> ALU_RG
  TICK: 3682 PC:  43 ADDR:   0 MEM_OUT: 46368 ACC: 1 LG_ALU: 3896 RG_ALU:   5 SP: 3895 ZF: 0 |	load   +
  ALU_RES = ALU_RG
  TICK: 3683 PC:  43 ADDR:   0 MEM_OUT: 46368 ACC: 1 LG_ALU: 3896 RG_ALU:   5 SP: 3895 ZF: 0 |	load   +
  READ MEM[ALU]
  TICK: 3684 PC:  43 ADDR:   0 MEM_OUT: 28657 ACC: 1 LG_ALU: 3896 RG_ALU:   5 SP: 3895 ZF: 0 |	load   +
  MEM[ALU] -> ALU_RG
  TICK: 3685 PC:  43 ADDR:   0 MEM_OUT: 28657 ACC: 1 LG_ALU: 3896 RG_ALU: 28657 SP: 3895 ZF: 0 |	load   +
  ALU_RES = ALU_RG
  TICK: 3686 PC:  43 ADDR:   0 MEM_OUT: 28657 ACC: 1 LG_ALU: 3896 RG_ALU: 28657 SP: 3895 ZF: 0 |	load   +
  ALU_RES -> ACC
  TICK: 3687 PC:  43 ADDR:   0 MEM_OUT: 28657 ACC: 28657 LG_ALU: 3896 RG_ALU: 28657 SP: 3895 ZF: 0 |	load   +
  ADDR -> ALU_RG
  TICK: 3688 PC:  44 ADDR:   0 MEM_OUT: 28657 ACC: 28657 LG_ALU: 3896 RG_ALU:   6 SP: 3895 ZF: 0 |	add   +
  ALU_RES = ALU_RG
  TICK: 3689 PC:  44 ADDR:   0 MEM_OUT: 28657 ACC: 28657 LG_ALU: 3896 RG_ALU:   6 SP: 3895 ZF: 0 |	add   +
  READ MEM[ALU]
  TICK: 3690 PC:  44 ADDR:   0 MEM_OUT: 46368 ACC: 28657 LG_ALU: 3896 RG_ALU:   6 SP: 3895 ZF: 0 |	add   +
  MEM[ALU] -> ALU_RG
  TICK: 3691 PC:  44 ADDR:   0 MEM_OUT: 46368 ACC: 28657 LG_ALU: 3896 RG_ALU: 46368 SP: 3895 ZF: 0 |	add   +
  ACC -> ALU_LG
  TICK: 3691 PC:  44 ADDR:   0 MEM_OUT: 46368 ACC: 28657 LG_ALU: 28657 RG_ALU: 46368 SP: 3895 ZF: 0 |	add   +
  ALU_RES = ALU_LG + ALU_RG
  TICK: 3692 PC:  44 ADDR:   0 MEM_OUT: 46368 ACC: 28657 LG_ALU: 28657 RG_ALU: 46368 SP: 3895 ZF: 0 |	add   +
  ALU_RES -> ACC
  TICK: 3693 PC:  44 ADDR:   0 MEM_OUT: 46368 ACC: 75025 LG_ALU: 28657 RG_ALU: 46368 SP: 3895 ZF: 0 |	add   +
  SP -> ALU_LG
  TICK: 3694 PC:  45 ADDR:   0 MEM_OUT: 46368 ACC: 75025 LG_ALU: 3895 RG_ALU: 46368 SP: 3895 ZF: 0 |	push   +
  ALU_RES = SP - 1
  TICK: 3695 PC:  45 ADDR:   0 MEM_OUT: 46368 ACC: 75025 LG_ALU: 3895 RG_ALU: 46368 SP: 3895 ZF: 0 |	push   +
  ALU_RES -> SP
  TICK: 3696 PC:  45 ADDR:   0 MEM_OUT: 46368 ACC: 75025 LG_ALU: 3895 RG_ALU: 46368 SP: 3894 ZF: 0 |	push   +
  WRITE ACC -> MEM[ALU]
  TICK: 3696 PC:  45 ADDR:   0 MEM_OUT: 46368 ACC: 75025 LG_ALU: 3895 RG_ALU: 46368 SP: 3894 ZF: 0 |	push   +
  SP -> ALU_LG
  TICK: 3697 PC:  46 ADDR:   0 MEM_OUT: 46368 ACC: 75025 LG_ALU: 3894 RG_ALU: 46368 SP: 3894 ZF: 0 |	pop   var
  ALU_RES = ALU_LG
  TICK: 3698 PC:  46 ADDR:   0 MEM_OUT: 46368 ACC: 75025 LG_ALU: 3894 RG_ALU: 46368 SP: 3894 ZF: 0 |	pop   var
  READ MEM[ALU]
  TICK: 3699 PC:  46 ADDR:   0 MEM_OUT: 75025 ACC: 75025 LG_ALU: 3894 RG_ALU: 46368 SP: 3894 ZF: 0 |	pop   var
  ALU_RES = SP + 1
  TICK: 3700 PC:  46 ADDR:   0 MEM_OUT: 75025 ACC: 75025 LG_ALU: 3894 RG_ALU: 46368 SP: 3894 ZF: 0 |	pop   var
  ALU_RES -> SP
  TICK: 3701 PC:  46 ADDR:   0 MEM_OUT: 75025 ACC: 75025 LG_ALU: 3894 RG_ALU: 46368 SP: 3895 ZF: 0 |	pop   var
  MEM[ALU] -> ALU_RG
  TICK: 3701 PC:  46 ADDR:   0 MEM_OUT: 75025 ACC: 75025 LG_ALU: 3894 RG_ALU: 75025 SP: 3895 ZF: 0 |	pop   var
  ALU_RES = ALU_RG
  TICK: 3702 PC:  46 ADDR:   0 MEM_OUT: 75025 ACC: 75025 LG_ALU: 3894 RG_ALU: 75025 SP: 3895 ZF: 0 |	pop   var
  ALU_RES -> ACC
  TICK: 3703 PC:  46 ADDR:   0 MEM_OUT: 75025 ACC: 75025 LG_ALU: 3894 RG_ALU: 75025 SP: 3895 ZF: 0 |	pop   var
  ADDR -> ALU_RG
  TICK: 3704 PC:  47 ADDR:   0 MEM_OUT: 75025 ACC: 75025 LG_ALU: 3894 RG_ALU:   6 SP: 3895 ZF: 0 |	store   var
  ALU_RES = ALU_RG
  TICK: 3705 PC:  47 ADDR:   0 MEM_OUT: 75025 ACC: 75025 LG_ALU: 3894 RG_ALU:   6 SP: 3895 ZF: 0 |	store   var
  WRITE ACC -> MEM[ALU]
  TICK: 3706 PC:  47 ADDR:   0 MEM_OUT: 75025 ACC: 75025 LG_ALU: 3894 RG_ALU:   6 SP: 3895 ZF: 0 |	store   var
  NUM -> ALU_RG
  TICK: 3707 PC:  48 ADDR:   0 MEM_OUT: 75025 ACC: 75025 LG_ALU: 3894 RG_ALU:   1 SP: 3895 ZF: 0 |	load   var
  ALU_RES = ALU_RG
  TICK: 3708 PC:  48 ADDR:   0 MEM_OUT: 75025 ACC: 75025 LG_ALU: 3894 RG_ALU:   1 SP: 3895 ZF: 0 |	load   var
  ALU_RES -> ACC
  TICK: 3709 PC:  48 ADDR:   0 MEM_OUT: 75025 ACC: 1 LG_ALU: 3894 RG_ALU:   1 SP: 3895 ZF: 0 |	load   var
  SP -> ALU_LG
  TICK: 3710 PC:  49 ADDR:   0 MEM_OUT: 75025 ACC: 1 LG_ALU: 3895 RG_ALU:   1 SP: 3895 ZF: 0 |	push   var
  ALU_RES = SP - 1
  TICK: 3711 PC:  49 ADDR:   0 MEM_OUT: 75025 ACC: 1 LG_ALU: 3895 RG_ALU:   1 SP: 3895 ZF: 0 |	push   var
  ALU_RES -> SP
  TICK: 3712 PC:  49 ADDR:   0 MEM_OUT: 75025 ACC: 1 LG_ALU: 3895 RG_ALU:   1 SP: 3894 ZF: 0 |	push   var
  WRITE ACC -> MEM[ALU]
  TICK: 3712 PC:  49 ADDR:   0 MEM_OUT: 75025 ACC: 1 LG_ALU: 3895 RG_ALU:   1 SP: 3894 ZF: 0 |	push   var
  ADDR -> ALU_RG
  TICK: 3713 PC:  50 ADDR:   0 MEM_OUT: 75025 ACC: 1 LG_ALU: 3895 RG_ALU:   8 SP: 3894 ZF: 0 |	load   var
  ALU_RES = ALU_RG
  TICK: 3714 PC:  50 ADDR:   0 MEM_OUT: 75025 ACC: 1 LG_ALU: 3895 RG_ALU:   8 SP: 3894 ZF: 0 |	load   var
  READ MEM[ALU]
  TICK: 3715 PC:  50 ADDR:   0 MEM_OUT: 46368 ACC: 1 LG_ALU: 3895 RG_ALU:   8 SP: 3894 ZF: 0 |	load   var
  MEM[ALU] -> ALU_RG
  TICK: 3716 PC:  50 ADDR:   0 MEM_OUT: 46368 ACC: 1 LG_ALU: 3895 RG_ALU: 46368 SP: 3894 ZF: 0 |	load   var
  ALU_RES = ALU_RG
  TICK: 3717 PC:  50 ADDR:   0 MEM_OUT: 46368 ACC: 1 LG_ALU: 3895 RG_ALU: 46368 SP: 3894 ZF: 0 |	load   var
  ALU_RES -> ACC
  TICK: 3718 PC:  50 ADDR:   0 MEM_OUT: 46368 ACC: 46368 LG_ALU: 3895 RG_ALU: 46368 SP: 3894 ZF: 0 |	load   var
  ADDR -> ALU_RG
  TICK: 3719 PC:  51 ADDR:   0 MEM_OUT: 46368 ACC: 46368 LG_ALU: 3895 RG_ALU:   5 SP: 3894 ZF: 0 |	store   var
  ALU_RES = ALU_RG
  TICK: 3720 PC:  51 ADDR:   0 MEM_OUT: 46368 ACC: 46368 LG_ALU: 3895 RG_ALU:   5 SP: 3894 ZF: 0 |	store   var
  WRITE ACC -> MEM[ALU]
  TICK: 3721 PC:  51 ADDR:   0 MEM_OUT: 46368 ACC: 46368 LG_ALU: 3895 RG_ALU:   5 SP: 3894 ZF: 0 |	store   var
  NUM -> ALU_RG
  TICK: 3722 PC:  52 ADDR:   0 MEM_OUT: 46368 ACC: 46368 LG_ALU: 3895 RG_ALU:   1 SP: 3894 ZF: 0 |	load   var
  ALU_RES = ALU_RG
  TICK: 3723 PC:  52 ADDR:   0 MEM_OUT: 46368 ACC: 46368 LG_ALU: 3895 RG_ALU:   1 SP: 3894 ZF: 0 |	load   var
  ALU_RES -> ACC
  TICK: 3724 PC:  52 ADDR:   0 MEM_OUT: 46368 ACC: 1 LG_ALU: 3895 RG_ALU:   1 SP: 3894 ZF: 0 |	load   var
  SP -> ALU_LG
  TICK: 3725 PC:  53 ADDR:   0 MEM_OUT: 46368 ACC: 1 LG_ALU: 3894 RG_ALU:   1 SP: 3894 ZF: 0 |	push   var
  ALU_RES = SP - 1
  TICK: 3726 PC:  53 ADDR:   0 MEM_OUT: 46368 ACC: 1 LG_ALU: 3894 RG_ALU:   1 SP: 3894 ZF: 0 |	push   var
  ALU_RES -> SP
  TICK: 3727 PC:  53 ADDR:   0 MEM_OUT: 46368 ACC: 1 LG_ALU: 3894 RG_ALU:   1 SP: 3893 ZF: 0 |	push   var
  WRITE ACC -> MEM[ALU]
  TICK: 3727 PC:  53 ADDR:   0 MEM_OUT: 46368 ACC: 1 LG_ALU: 3894 RG_ALU:   1 SP: 3893 ZF: 0 |	push   var
  ADDR -> ALU_RG
  TICK: 3728 PC:  54 ADDR:   0 MEM_OUT: 46368 ACC: 1 LG_ALU: 3894 RG_ALU:   6 SP: 3893 ZF: 0 |	load   <
  ALU_RES = ALU_RG
  TICK: 3729 PC:  54 ADDR:   0 MEM_OUT: 46368 ACC: 1 LG_ALU: 3894 RG_ALU:   6 SP: 3893 ZF: 0 |	load   <
  READ MEM[ALU]
  TICK: 3730 PC:  54 ADDR:   0 MEM_OUT: 75025 ACC: 1 LG_ALU: 3894 RG_ALU:   6 SP: 3893 ZF: 0 |	load   <
  MEM[ALU] -> ALU_RG
  TICK: 3731 PC:  54 ADDR:   0 MEM_OUT: 75025 ACC: 1 LG_ALU: 3894 RG_ALU: 75025 SP: 3893 ZF: 0 |	load   <
  ALU_RES = ALU_RG
  TICK: 3732 PC:  54 ADDR:   0 MEM_OUT: 75025 ACC: 1 LG_ALU: 3894 RG_ALU: 75025 SP: 3893 ZF: 0 |	load   <
  ALU_RES -> ACC
  TICK: 3733 PC:  54 ADDR:   0 MEM_OUT: 75025 ACC: 75025 LG_ALU: 3894 RG_ALU: 75025 SP: 3893 ZF: 0 |	load   <
  ADDR -> ALU_RG
  TICK: 3734 PC:  55 ADDR:   0 MEM_OUT: 75025 ACC: 75025 LG_ALU: 3894 RG_ALU:   7 SP: 3893 ZF: 0 |	sub   <
  ALU_RES = ALU_RG
  TICK: 3735 PC:  55 ADDR:   0 MEM_OUT: 75025 ACC: 75025 LG_ALU: 3894 RG_ALU:   7 SP: 3893 ZF: 0 |	sub   <
  READ MEM[ALU]
  TICK: 3736 PC:  55 ADDR:   0 MEM_OUT: 400000 ACC: 75025 LG_ALU: 3894 RG_ALU:   7 SP: 3893 ZF: 0 |	sub   <
  MEM[ALU] -> ALU_RG
  TICK: 3737 PC:  55 ADDR:   0 MEM_OUT: 400000 ACC: 75025 LG_ALU: 3894 RG_ALU: 400000 SP: 3893 ZF: 0 |	sub   <
  ACC -> ALU_LG
  TICK: 3737 PC:  55 ADDR:   0 MEM_OUT: 400000 ACC: 75025 LG_ALU: 75025 RG_ALU: 400000 SP: 3893 ZF: 0 |	sub   <
  ALU_RES = ALU_LG + ALU_RG
  TICK: 3738 PC:  55 ADDR:   0 MEM_OUT: 400000 ACC: 75025 LG_ALU: 75025 RG_ALU: 400000 SP: 3893 ZF: 0 |	sub   <
  ALU_RES -> ACC
  TICK: 3739 PC:  55 ADDR:   0 MEM_OUT: 400000 ACC: -324975 LG_ALU: 75025 RG_ALU: 400000 SP: 3893 ZF: 0 |	sub   <
  PC + 1 -> PC
  NUM -> ALU_RG
  TICK: 3740 PC:  57 ADDR:   0 MEM_OUT: 400000 ACC: -324975 LG_ALU: 75025 RG_ALU:   1 SP: 3893 ZF: 0 |	load   <
  ALU_RES = ALU_RG
  TICK: 3741 PC:  57 ADDR:   0 MEM_OUT: 400000 ACC: -324975 LG_ALU: 75025 RG_ALU:   1 SP: 3893 ZF: 0 |	load   <
  ALU_RES -> ACC
  TICK: 3742 PC:  57 ADDR:   0 MEM_OUT: 400000 ACC: 1 LG_ALU: 75025 RG_ALU:   1 SP: 3893 ZF: 0 |	load   <
  ADDR -> PC
  SP -> ALU_LG
  TICK: 3744 PC:  60 ADDR:   0 MEM_OUT: 400000 ACC: 1 LG_ALU: 3893 RG_ALU:   1 SP: 3893 ZF: 0 |	push   <
  ALU_RES = SP - 1
  TICK: 3745 PC:  60 ADDR:   0 MEM_OUT: 400000 ACC: 1 LG_ALU: 3893 RG_ALU:   1 SP: 3893 ZF: 0 |	push   <
  ALU_RES -> SP
  TICK: 3746 PC:  60 ADDR:   0 MEM_OUT: 400000 ACC: 1 LG_ALU: 3893 RG_ALU:   1 SP: 3892 ZF: 0 |	push   <
  WRITE ACC -> MEM[ALU]
  TICK: 3746 PC:  60 ADDR:   0 MEM_OUT: 400000 ACC: 1 LG_ALU: 3893 RG_ALU:   1 SP: 3892 ZF: 0 |	push   <
  SP -> ALU_LG
  TICK: 3747 PC:  61 ADDR:   0 MEM_OUT: 400000 ACC: 1 LG_ALU: 3892 RG_ALU:   1 SP: 3892 ZF: 0 |	pop
  ALU_RES = ALU_LG
  TICK: 3748 PC:  61 ADDR:   0 MEM_OUT: 400000 ACC: 1 LG_ALU: 3892 RG_ALU:   1 SP: 3892 ZF: 0 |	pop
  READ MEM[ALU]
  TICK: 3749 PC:  61 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3892 RG_ALU:   1 SP: 3892 ZF: 0 |	pop
  ALU_RES = SP + 1
  TICK: 3750 PC:  61 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3892 RG_ALU:   1 SP: 3892 ZF: 0 |	pop
  ALU_RES -> SP
  TICK: 3751 PC:  61 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3892 RG_ALU:   1 SP: 3893 ZF: 0 |	pop
  MEM[ALU] -> ALU_RG
  TICK: 3751 PC:  61 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3892 RG_ALU:   1 SP: 3893 ZF: 0 |	pop
  ALU_RES = ALU_RG
  TICK: 3752 PC:  61 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3892 RG_ALU:   1 SP: 3893 ZF: 0 |	pop
  ALU_RES -> ACC
  TICK: 3753 PC:  61 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3892 RG_ALU:   1 SP: 3893 ZF: 0 |	pop
  ADDR -> PC
  ADDR -> PC
  ADDR -> ALU_RG
  TICK: 3756 PC:  24 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3892 RG_ALU:   6 SP: 3893 ZF: 0 |	load
  ALU_RES = ALU_RG
  TICK: 3757 PC:  24 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3892 RG_ALU:   6 SP: 3893 ZF: 0 |	load
  READ MEM[ALU]
  TICK: 3758 PC:  24 ADDR:   0 MEM_OUT: 75025 ACC: 1 LG_ALU: 3892 RG_ALU:   6 SP: 3893 ZF: 0 |	load
  MEM[ALU] -> ALU_RG
  TICK: 3759 PC:  24 ADDR:   0 MEM_OUT: 75025 ACC: 1 LG_ALU: 3892 RG_ALU: 75025 SP: 3893 ZF: 0 |	load
  ALU_RES = ALU_RG
  TICK: 3760 PC:  24 ADDR:   0 MEM_OUT: 75025 ACC: 1 LG_ALU: 3892 RG_ALU: 75025 SP: 3893 ZF: 0 |	load
  ALU_RES -> ACC
  TICK: 3761 PC:  24 ADDR:   0 MEM_OUT: 75025 ACC: 75025 LG_ALU: 3892 RG_ALU: 75025 SP: 3893 ZF: 0 |	load
  NUM -> ALU_RG
  TICK: 3762 PC:  25 ADDR:   0 MEM_OUT: 75025 ACC: 75025 LG_ALU: 3892 RG_ALU:   2 SP: 3893 ZF: 0 |	mod
  ACC -> ALU_LG
  TICK: 3762 PC:  25 ADDR:   0 MEM_OUT: 75025 ACC: 75025 LG_ALU: 75025 RG_ALU:   2 SP: 3893 ZF: 0 |	mod
  ALU_RES = ALU_LG % ALU_RG
  TICK: 3763 PC:  25 ADDR:   0 MEM_OUT: 75025 ACC: 75025 LG_ALU: 75025 RG_ALU:   2 SP: 3893 ZF: 0 |	mod
  ALU_RES -> ACC
  TICK: 3764 PC:  25 ADDR:   0 MEM_OUT: 75025 ACC: 1 LG_ALU: 75025 RG_ALU:   2 SP: 3893 ZF: 0 |	mod
  SP -> ALU_LG
  TICK: 3765 PC:  26 ADDR:   0 MEM_OUT: 75025 ACC: 1 LG_ALU: 3893 RG_ALU:   2 SP: 3893 ZF: 0 |	push
  ALU_RES = SP - 1
  TICK: 3766 PC:  26 ADDR:   0 MEM_OUT: 75025 ACC: 1 LG_ALU: 3893 RG_ALU:   2 SP: 3893 ZF: 0 |	push
  ALU_RES -> SP
  TICK: 3767 PC:  26 ADDR:   0 MEM_OUT: 75025 ACC: 1 LG_ALU: 3893 RG_ALU:   2 SP: 3892 ZF: 0 |	push
  WRITE ACC -> MEM[ALU]
  TICK: 3767 PC:  26 ADDR:   0 MEM_OUT: 75025 ACC: 1 LG_ALU: 3893 RG_ALU:   2 SP: 3892 ZF: 0 |	push
  NUM -> ALU_RG
  TICK: 3768 PC:  27 ADDR:   0 MEM_OUT: 75025 ACC: 1 LG_ALU: 3893 RG_ALU:   0 SP: 3892 ZF: 0 |	load   =
  ALU_RES = ALU_RG
  TICK: 3769 PC:  27 ADDR:   0 MEM_OUT: 75025 ACC: 1 LG_ALU: 3893 RG_ALU:   0 SP: 3892 ZF: 1 |	load   =
  ALU_RES -> ACC
  TICK: 3770 PC:  27 ADDR:   0 MEM_OUT: 75025 ACC: 0 LG_ALU: 3893 RG_ALU:   0 SP: 3892 ZF: 1 |	load   =
  SP -> ALU_LG
  TICK: 3771 PC:  28 ADDR:   0 MEM_OUT: 75025 ACC: 0 LG_ALU: 3892 RG_ALU:   0 SP: 3892 ZF: 1 |	sub   =
  ALU_RES = ALU_LG
  TICK: 3772 PC:  28 ADDR:   0 MEM_OUT: 75025 ACC: 0 LG_ALU: 3892 RG_ALU:   0 SP: 3892 ZF: 0 |	sub   =
  READ MEM[ALU]
  TICK: 3773 PC:  28 ADDR:   0 MEM_OUT: 1 ACC: 0 LG_ALU: 3892 RG_ALU:   0 SP: 3892 ZF: 0 |	sub   =
  MEM[ALU] -> ALU_RG
  TICK: 3774 PC:  28 ADDR:   0 MEM_OUT: 1 ACC: 0 LG_ALU: 3892 RG_ALU:   1 SP: 3892 ZF: 0 |	sub   =
  ALU_RES = SP + 1
  TICK: 3775 PC:  28 ADDR:   0 MEM_OUT: 1 ACC: 0 LG_ALU: 3892 RG_ALU:   1 SP: 3892 ZF: 0 |	sub   =
  ALU_RES -> SP
  TICK: 3776 PC:  28 ADDR:   0 MEM_OUT: 1 ACC: 0 LG_ALU: 3892 RG_ALU:   1 SP: 3893 ZF: 0 |	sub   =
  ACC -> ALU_LG
  TICK: 3776 PC:  28 ADDR:   0 MEM_OUT: 1 ACC: 0 LG_ALU:   0 RG_ALU:   1 SP: 3893 ZF: 0 |	sub   =
  ALU_RES = ALU_LG + ALU_RG
  TICK: 3777 PC:  28 ADDR:   0 MEM_OUT: 1 ACC: 0 LG_ALU:   0 RG_ALU:   1 SP: 3893 ZF: 0 |	sub   =
  ALU_RES -> ACC
  TICK: 3778 PC:  28 ADDR:   0 MEM_OUT: 1 ACC: -1 LG_ALU:   0 RG_ALU:   1 SP: 3893 ZF: 0 |	sub   =
  ADDR -> PC
  NUM -> ALU_RG
  TICK: 3780 PC:  32 ADDR:   0 MEM_OUT: 1 ACC: -1 LG_ALU:   0 RG_ALU:   0 SP: 3893 ZF: 0 |	load   =
  ALU_RES = ALU_RG
  TICK: 3781 PC:  32 ADDR:   0 MEM_OUT: 1 ACC: -1 LG_ALU:   0 RG_ALU:   0 SP: 3893 ZF: 1 |	load   =
  ALU_RES -> ACC
  TICK: 3782 PC:  32 ADDR:   0 MEM_OUT: 1 ACC: 0 LG_ALU:   0 RG_ALU:   0 SP: 3893 ZF: 1 |	load   =
  SP -> ALU_LG
  TICK: 3783 PC:  33 ADDR:   0 MEM_OUT: 1 ACC: 0 LG_ALU: 3893 RG_ALU:   0 SP: 3893 ZF: 1 |	push   =
  ALU_RES = SP - 1
  TICK: 3784 PC:  33 ADDR:   0 MEM_OUT: 1 ACC: 0 LG_ALU: 3893 RG_ALU:   0 SP: 3893 ZF: 0 |	push   =
  ALU_RES -> SP
  TICK: 3785 PC:  33 ADDR:   0 MEM_OUT: 1 ACC: 0 LG_ALU: 3893 RG_ALU:   0 SP: 3892 ZF: 0 |	push   =
  WRITE ACC -> MEM[ALU]
  TICK: 3785 PC:  33 ADDR:   0 MEM_OUT: 1 ACC: 0 LG_ALU: 3893 RG_ALU:   0 SP: 3892 ZF: 0 |	push   =
  SP -> ALU_LG
  TICK: 3786 PC:  34 ADDR:   0 MEM_OUT: 1 ACC: 0 LG_ALU: 3892 RG_ALU:   0 SP: 3892 ZF: 0 |	pop   if
  ALU_RES = ALU_LG
  TICK: 3787 PC:  34 ADDR:   0 MEM_OUT: 1 ACC: 0 LG_ALU: 3892 RG_ALU:   0 SP: 3892 ZF: 0 |	pop   if
  READ MEM[ALU]
  TICK: 3788 PC:  34 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3892 RG_ALU:   0 SP: 3892 ZF: 0 |	pop   if
  ALU_RES = SP + 1
  TICK: 3789 PC:  34 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3892 RG_ALU:   0 SP: 3892 ZF: 0 |	pop   if
  ALU_RES -> SP
  TICK: 3790 PC:  34 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3892 RG_ALU:   0 SP: 3893 ZF: 0 |	pop   if
  MEM[ALU] -> ALU_RG
  TICK: 3790 PC:  34 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3892 RG_ALU:   0 SP: 3893 ZF: 0 |	pop   if
  ALU_RES = ALU_RG
  TICK: 3791 PC:  34 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3892 RG_ALU:   0 SP: 3893 ZF: 1 |	pop   if
  ALU_RES -> ACC
  TICK: 3792 PC:  34 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3892 RG_ALU:   0 SP: 3893 ZF: 1 |	pop   if
  PC + 1 -> PC
  ADDR -> PC
  NUM -> ALU_RG
  TICK: 3794 PC:  20 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3892 RG_ALU:   0 SP: 3893 ZF: 1 |	load   +
  ALU_RES = ALU_RG
  TICK: 3795 PC:  20 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3892 RG_ALU:   0 SP: 3893 ZF: 1 |	load   +
  ALU_RES -> ACC
  TICK: 3796 PC:  20 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3892 RG_ALU:   0 SP: 3893 ZF: 1 |	load   +
  NUM -> ALU_RG
  TICK: 3797 PC:  21 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3892 RG_ALU:   0 SP: 3893 ZF: 1 |	add   +
  ACC -> ALU_LG
  TICK: 3797 PC:  21 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU:   0 RG_ALU:   0 SP: 3893 ZF: 1 |	add   +
  ALU_RES = ALU_LG + ALU_RG
  TICK: 3798 PC:  21 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU:   0 RG_ALU:   0 SP: 3893 ZF: 1 |	add   +
  ALU_RES -> ACC
  TICK: 3799 PC:  21 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU:   0 RG_ALU:   0 SP: 3893 ZF: 1 |	add   +
  SP -> ALU_LG
  TICK: 3800 PC:  22 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3893 RG_ALU:   0 SP: 3893 ZF: 1 |	push   +
  ALU_RES = SP - 1
  TICK: 3801 PC:  22 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3893 RG_ALU:   0 SP: 3893 ZF: 0 |	push   +
  ALU_RES -> SP
  TICK: 3802 PC:  22 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3893 RG_ALU:   0 SP: 3892 ZF: 0 |	push   +
  WRITE ACC -> MEM[ALU]
  TICK: 3802 PC:  22 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3893 RG_ALU:   0 SP: 3892 ZF: 0 |	push   +
  ADDR -> PC
  SP -> ALU_LG
  TICK: 3804 PC:  37 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3892 RG_ALU:   0 SP: 3892 ZF: 0 |	pop   if
  ALU_RES = ALU_LG
  TICK: 3805 PC:  37 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3892 RG_ALU:   0 SP: 3892 ZF: 0 |	pop   if
  READ MEM[ALU]
  TICK: 3806 PC:  37 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3892 RG_ALU:   0 SP: 3892 ZF: 0 |	pop   if
  ALU_RES = SP + 1
  TICK: 3807 PC:  37 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3892 RG_ALU:   0 SP: 3892 ZF: 0 |	pop   if
  ALU_RES -> SP
  TICK: 3808 PC:  37 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3892 RG_ALU:   0 SP: 3893 ZF: 0 |	pop   if
  MEM[ALU] -> ALU_RG
  TICK: 3808 PC:  37 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3892 RG_ALU:   0 SP: 3893 ZF: 0 |	pop   if
  ALU_RES = ALU_RG
  TICK: 3809 PC:  37 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3892 RG_ALU:   0 SP: 3893 ZF: 1 |	pop   if
  ALU_RES -> ACC
  TICK: 3810 PC:  37 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3892 RG_ALU:   0 SP: 3893 ZF: 1 |	pop   if
  SP -> ALU_LG
  TICK: 3811 PC:  38 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3893 RG_ALU:   0 SP: 3893 ZF: 1 |	push   if
  ALU_RES = SP - 1
  TICK: 3812 PC:  38 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3893 RG_ALU:   0 SP: 3893 ZF: 0 |	push   if
  ALU_RES -> SP
  TICK: 3813 PC:  38 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3893 RG_ALU:   0 SP: 3892 ZF: 0 |	push   if
  WRITE ACC -> MEM[ALU]
  TICK: 3813 PC:  38 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3893 RG_ALU:   0 SP: 3892 ZF: 0 |	push   if
  ADDR -> ALU_RG
  TICK: 3814 PC:  39 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3893 RG_ALU:   6 SP: 3892 ZF: 0 |	load   var
  ALU_RES = ALU_RG
  TICK: 3815 PC:  39 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3893 RG_ALU:   6 SP: 3892 ZF: 0 |	load   var
  READ MEM[ALU]
  TICK: 3816 PC:  39 ADDR:   0 MEM_OUT: 75025 ACC: 0 LG_ALU: 3893 RG_ALU:   6 SP: 3892 ZF: 0 |	load   var
  MEM[ALU] -> ALU_RG
  TICK: 3817 PC:  39 ADDR:   0 MEM_OUT: 75025 ACC: 0 LG_ALU: 3893 RG_ALU: 75025 SP: 3892 ZF: 0 |	load   var
  ALU_RES = ALU_RG
  TICK: 3818 PC:  39 ADDR:   0 MEM_OUT: 75025 ACC: 0 LG_ALU: 3893 RG_ALU: 75025 SP: 3892 ZF: 0 |	load   var
  ALU_RES -> ACC
  TICK: 3819 PC:  39 ADDR:   0 MEM_OUT: 75025 ACC: 75025 LG_ALU: 3893 RG_ALU: 75025 SP: 3892 ZF: 0 |	load   var
  ADDR -> ALU_RG
  TICK: 3820 PC:  40 ADDR:   0 MEM_OUT: 75025 ACC: 75025 LG_ALU: 3893 RG_ALU:   8 SP: 3892 ZF: 0 |	store   var
  ALU_RES = ALU_RG
  TICK: 3821 PC:  40 ADDR:   0 MEM_OUT: 75025 ACC: 75025 LG_ALU: 3893 RG_ALU:   8 SP: 3892 ZF: 0 |	store   var
  WRITE ACC -> MEM[ALU]
  TICK: 3822 PC:  40 ADDR:   0 MEM_OUT: 75025 ACC: 75025 LG_ALU: 3893 RG_ALU:   8 SP: 3892 ZF: 0 |	store   var
  NUM -> ALU_RG
  TICK: 3823 PC:  41 ADDR:   0 MEM_OUT: 75025 ACC: 75025 LG_ALU: 3893 RG_ALU:   1 SP: 3892 ZF: 0 |	load   var
  ALU_RES = ALU_RG
  TICK: 3824 PC:  41 ADDR:   0 MEM_OUT: 75025 ACC: 75025 LG_ALU: 3893 RG_ALU:   1 SP: 3892 ZF: 0 |	load   var
  ALU_RES -> ACC
  TICK: 3825 PC:  41 ADDR:   0 MEM_OUT: 75025 ACC: 1 LG_ALU: 3893 RG_ALU:   1 SP: 3892 ZF: 0 |	load   var
  SP -> ALU_LG
  TICK: 3826 PC:  42 ADDR:   0 MEM_OUT: 75025 ACC: 1 LG_ALU: 3892 RG_ALU:   1 SP: 3892 ZF: 0 |	push   var
  ALU_RES = SP - 1
  TICK: 3827 PC:  42 ADDR:   0 MEM_OUT: 75025 ACC: 1 LG_ALU: 3892 RG_ALU:   1 SP: 3892 ZF: 0 |	push   var
  ALU_RES -> SP
  TICK: 3828 PC:  42 ADDR:   0 MEM_OUT: 75025 ACC: 1 LG_ALU: 3892 RG_ALU:   1 SP: 3891 ZF: 0 |	push   var
  WRITE ACC -> MEM[ALU]
  TICK: 3828 PC:  42 ADDR:   0 MEM_OUT: 75025 ACC: 1 LG_ALU: 3892 RG_ALU:   1 SP: 3891 ZF: 0 |	push   var
  ADDR -> ALU_RG
  TICK: 3829 PC:  43 ADDR:   0 MEM_OUT: 75025 ACC: 1 LG_ALU: 3892 RG_ALU:   5 SP: 3891 ZF: 0 |	load   +
  ALU_RES = ALU_RG
  TICK: 3830 PC:  43 ADDR:   0 MEM_OUT: 75025 ACC: 1 LG_ALU: 3892 RG_ALU:   5 SP: 3891 ZF: 0 |	load   +
  READ MEM[ALU]
  TICK: 3831 PC:  43 ADDR:   0 MEM_OUT: 46368 ACC: 1 LG_ALU: 3892 RG_ALU:   5 SP: 3891 ZF: 0 |	load   +
  MEM[ALU] -> ALU_RG
  TICK: 3832 PC:  43 ADDR:   0 MEM_OUT: 46368 ACC: 1 LG_ALU: 3892 RG_ALU: 46368 SP: 3891 ZF: 0 |	load   +
  ALU_RES = ALU_RG
  TICK: 3833 PC:  43 ADDR:   0 MEM_OUT: 46368 ACC: 1 LG_ALU: 3892 RG_ALU: 46368 SP: 3891 ZF: 0 |	load   +
  ALU_RES -> ACC
  TICK: 3834 PC:  43 ADDR:   0 MEM_OUT: 46368 ACC: 46368 LG_ALU: 3892 RG_ALU: 46368 SP: 3891 ZF: 0 |	load   +
  ADDR -> ALU_RG
  TICK: 3835 PC:  44 ADDR:   0 MEM_OUT: 46368 ACC: 46368 LG_ALU: 3892 RG_ALU:   6 SP: 3891 ZF: 0 |	add   +
  ALU_RES = ALU_RG
  TICK: 3836 PC:  44 ADDR:   0 MEM_OUT: 46368 ACC: 46368 LG_ALU: 3892 RG_ALU:   6 SP: 3891 ZF: 0 |	add   +
  READ MEM[ALU]
  TICK: 3837 PC:  44 ADDR:   0 MEM_OUT: 75025 ACC: 46368 LG_ALU: 3892 RG_ALU:   6 SP: 3891 ZF: 0 |	add   +
  MEM[ALU] -> ALU_RG
  TICK: 3838 PC:  44 ADDR:   0 MEM_OUT: 75025 ACC: 46368 LG_ALU: 3892 RG_ALU: 75025 SP: 3891 ZF: 0 |	add   +
  ACC -> ALU_LG
  TICK: 3838 PC:  44 ADDR:   0 MEM_OUT: 75025 ACC: 46368 LG_ALU: 46368 RG_ALU: 75025 SP: 3891 ZF: 0 |	add   +
  ALU_RES = ALU_LG + ALU_RG
  TICK: 3839 PC:  44 ADDR:   0 MEM_OUT: 75025 ACC: 46368 LG_ALU: 46368 RG_ALU: 75025 SP: 3891 ZF: 0 |	add   +
  ALU_RES -> ACC
  TICK: 3840 PC:  44 ADDR:   0 MEM_OUT: 75025 ACC: 121393 LG_ALU: 46368 RG_ALU: 75025 SP: 3891 ZF: 0 |	add   +
  SP -> ALU_LG
  TICK: 3841 PC:  45 ADDR:   0 MEM_OUT: 75025 ACC: 121393 LG_ALU: 3891 RG_ALU: 75025 SP: 3891 ZF: 0 |	push   +
  ALU_RES = SP - 1
  TICK: 3842 PC:  45 ADDR:   0 MEM_OUT: 75025 ACC: 121393 LG_ALU: 3891 RG_ALU: 75025 SP: 3891 ZF: 0 |	push   +
  ALU_RES -> SP
  TICK: 3843 PC:  45 ADDR:   0 MEM_OUT: 75025 ACC: 121393 LG_ALU: 3891 RG_ALU: 75025 SP: 3890 ZF: 0 |	push   +
  WRITE ACC -> MEM[ALU]
  TICK: 3843 PC:  45 ADDR:   0 MEM_OUT: 75025 ACC: 121393 LG_ALU: 3891 RG_ALU: 75025 SP: 3890 ZF: 0 |	push   +
  SP -> ALU_LG
  TICK: 3844 PC:  46 ADDR:   0 MEM_OUT: 75025 ACC: 121393 LG_ALU: 3890 RG_ALU: 75025 SP: 3890 ZF: 0 |	pop   var
  ALU_RES = ALU_LG
  TICK: 3845 PC:  46 ADDR:   0 MEM_OUT: 75025 ACC: 121393 LG_ALU: 3890 RG_ALU: 75025 SP: 3890 ZF: 0 |	pop   var
  READ MEM[ALU]
  TICK: 3846 PC:  46 ADDR:   0 MEM_OUT: 121393 ACC: 121393 LG_ALU: 3890 RG_ALU: 75025 SP: 3890 ZF: 0 |	pop   var
  ALU_RES = SP + 1
  TICK: 3847 PC:  46 ADDR:   0 MEM_OUT: 121393 ACC: 121393 LG_ALU: 3890 RG_ALU: 75025 SP: 3890 ZF: 0 |	pop   var
  ALU_RES -> SP
  TICK: 3848 PC:  46 ADDR:   0 MEM_OUT: 121393 ACC: 121393 LG_ALU: 3890 RG_ALU: 75025 SP: 3891 ZF: 0 |	pop   var
  MEM[ALU] -> ALU_RG
  TICK: 3848 PC:  46 ADDR:   0 MEM_OUT: 121393 ACC: 121393 LG_ALU: 3890 RG_ALU: 121393 SP: 3891 ZF: 0 |	pop   var
  ALU_RES = ALU_RG
  TICK: 3849 PC:  46 ADDR:   0 MEM_OUT: 121393 ACC: 121393 LG_ALU: 3890 RG_ALU: 121393 SP: 3891 ZF: 0 |	pop   var
  ALU_RES -> ACC
  TICK: 3850 PC:  46 ADDR:   0 MEM_OUT: 121393 ACC: 121393 LG_ALU: 3890 RG_ALU: 121393 SP: 3891 ZF: 0 |	pop   var
  ADDR -> ALU_RG
  TICK: 3851 PC:  47 ADDR:   0 MEM_OUT: 121393 ACC: 121393 LG_ALU: 3890 RG_ALU:   6 SP: 3891 ZF: 0 |	store   var
  ALU_RES = ALU_RG
  TICK: 3852 PC:  47 ADDR:   0 MEM_OUT: 121393 ACC: 121393 LG_ALU: 3890 RG_ALU:   6 SP: 3891 ZF: 0 |	store   var
  WRITE ACC -> MEM[ALU]
  TICK: 3853 PC:  47 ADDR:   0 MEM_OUT: 121393 ACC: 121393 LG_ALU: 3890 RG_ALU:   6 SP: 3891 ZF: 0 |	store   var
  NUM -> ALU_RG
  TICK: 3854 PC:  48 ADDR:   0 MEM_OUT: 121393 ACC: 121393 LG_ALU: 3890 RG_ALU:   1 SP: 3891 ZF: 0 |	load   var
  ALU_RES = ALU_RG
  TICK: 3855 PC:  48 ADDR:   0 MEM_OUT: 121393 ACC: 121393 LG_ALU: 3890 RG_ALU:   1 SP: 3891 ZF: 0 |	load   var
  ALU_RES -> ACC
  TICK: 3856 PC:  48 ADDR:   0 MEM_OUT: 121393 ACC: 1 LG_ALU: 3890 RG_ALU:   1 SP: 3891 ZF: 0 |	load   var
  SP -> ALU_LG
  TICK: 3857 PC:  49 ADDR:   0 MEM_OUT: 121393 ACC: 1 LG_ALU: 3891 RG_ALU:   1 SP: 3891 ZF: 0 |	push   var
  ALU_RES = SP - 1
  TICK: 3858 PC:  49 ADDR:   0 MEM_OUT: 121393 ACC: 1 LG_ALU: 3891 RG_ALU:   1 SP: 3891 ZF: 0 |	push   var
  ALU_RES -> SP
  TICK: 3859 PC:  49 ADDR:   0 MEM_OUT: 121393 ACC: 1 LG_ALU: 3891 RG_ALU:   1 SP: 3890 ZF: 0 |	push   var
  WRITE ACC -> MEM[ALU]
  TICK: 3859 PC:  49 ADDR:   0 MEM_OUT: 121393 ACC: 1 LG_ALU: 3891 RG_ALU:   1 SP: 3890 ZF: 0 |	push   var
  ADDR -> ALU_RG
  TICK: 3860 PC:  50 ADDR:   0 MEM_OUT: 121393 ACC: 1 LG_ALU: 3891 RG_ALU:   8 SP: 3890 ZF: 0 |	load   var
  ALU_RES = ALU_RG
  TICK: 3861 PC:  50 ADDR:   0 MEM_OUT: 121393 ACC: 1 LG_ALU: 3891 RG_ALU:   8 SP: 3890 ZF: 0 |	load   var
  READ MEM[ALU]
  TICK: 3862 PC:  50 ADDR:   0 MEM_OUT: 75025 ACC: 1 LG_ALU: 3891 RG_ALU:   8 SP: 3890 ZF: 0 |	load   var
  MEM[ALU] -> ALU_RG
  TICK: 3863 PC:  50 ADDR:   0 MEM_OUT: 75025 ACC: 1 LG_ALU: 3891 RG_ALU: 75025 SP: 3890 ZF: 0 |	load   var
  ALU_RES = ALU_RG
  TICK: 3864 PC:  50 ADDR:   0 MEM_OUT: 75025 ACC: 1 LG_ALU: 3891 RG_ALU: 75025 SP: 3890 ZF: 0 |	load   var
  ALU_RES -> ACC
  TICK: 3865 PC:  50 ADDR:   0 MEM_OUT: 75025 ACC: 75025 LG_ALU: 3891 RG_ALU: 75025 SP: 3890 ZF: 0 |	load   var
  ADDR -> ALU_RG
  TICK: 3866 PC:  51 ADDR:   0 MEM_OUT: 75025 ACC: 75025 LG_ALU: 3891 RG_ALU:   5 SP: 3890 ZF: 0 |	store   var
  ALU_RES = ALU_RG
  TICK: 3867 PC:  51 ADDR:   0 MEM_OUT: 75025 ACC: 75025 LG_ALU: 3891 RG_ALU:   5 SP: 3890 ZF: 0 |	store   var
  WRITE ACC -> MEM[ALU]
  TICK: 3868 PC:  51 ADDR:   0 MEM_OUT: 75025 ACC: 75025 LG_ALU: 3891 RG_ALU:   5 SP: 3890 ZF: 0 |	store   var
  NUM -> ALU_RG
  TICK: 3869 PC:  52 ADDR:   0 MEM_OUT: 75025 ACC: 75025 LG_ALU: 3891 RG_ALU:   1 SP: 3890 ZF: 0 |	load   var
  ALU_RES = ALU_RG
  TICK: 3870 PC:  52 ADDR:   0 MEM_OUT: 75025 ACC: 75025 LG_ALU: 3891 RG_ALU:   1 SP: 3890 ZF: 0 |	load   var
  ALU_RES -> ACC
  TICK: 3871 PC:  52 ADDR:   0 MEM_OUT: 75025 ACC: 1 LG_ALU: 3891 RG_ALU:   1 SP: 3890 ZF: 0 |	load   var
  SP -> ALU_LG
  TICK: 3872 PC:  53 ADDR:   0 MEM_OUT: 75025 ACC: 1 LG_ALU: 3890 RG_ALU:   1 SP: 3890 ZF: 0 |	push   var
  ALU_RES = SP - 1
  TICK: 3873 PC:  53 ADDR:   0 MEM_OUT: 75025 ACC: 1 LG_ALU: 3890 RG_ALU:   1 SP: 3890 ZF: 0 |	push   var
  ALU_RES -> SP
  TICK: 3874 PC:  53 ADDR:   0 MEM_OUT: 75025 ACC: 1 LG_ALU: 3890 RG_ALU:   1 SP: 3889 ZF: 0 |	push   var
  WRITE ACC -> MEM[ALU]
  TICK: 3874 PC:  53 ADDR:   0 MEM_OUT: 75025 ACC: 1 LG_ALU: 3890 RG_ALU:   1 SP: 3889 ZF: 0 |	push   var
  ADDR -> ALU_RG
  TICK: 3875 PC:  54 ADDR:   0 MEM_OUT: 75025 ACC: 1 LG_ALU: 3890 RG_ALU:   6 SP: 3889 ZF: 0 |	load   <
  ALU_RES = ALU_RG
  TICK: 3876 PC:  54 ADDR:   0 MEM_OUT: 75025 ACC: 1 LG_ALU: 3890 RG_ALU:   6 SP: 3889 ZF: 0 |	load   <
  READ MEM[ALU]
  TICK: 3877 PC:  54 ADDR:   0 MEM_OUT: 121393 ACC: 1 LG_ALU: 3890 RG_ALU:   6 SP: 3889 ZF: 0 |	load   <
  MEM[ALU] -> ALU_RG
  TICK: 3878 PC:  54 ADDR:   0 MEM_OUT: 121393 ACC: 1 LG_ALU: 3890 RG_ALU: 121393 SP: 3889 ZF: 0 |	load   <
  ALU_RES = ALU_RG
  TICK: 3879 PC:  54 ADDR:   0 MEM_OUT: 121393 ACC: 1 LG_ALU: 3890 RG_ALU: 121393 SP: 3889 ZF: 0 |	load   <
  ALU_RES -> ACC
  TICK: 3880 PC:  54 ADDR:   0 MEM_OUT: 121393 ACC: 121393 LG_ALU: 3890 RG_ALU: 121393 SP: 3889 ZF: 0 |	load   <
  ADDR -> ALU_RG
  TICK: 3881 PC:  55 ADDR:   0 MEM_OUT: 121393 ACC: 121393 LG_ALU: 3890 RG_ALU:   7 SP: 3889 ZF: 0 |	sub   <
  ALU_RES = ALU_RG
  TICK: 3882 PC:  55 ADDR:   0 MEM_OUT: 121393 ACC: 121393 LG_ALU: 3890 RG_ALU:   7 SP: 3889 ZF: 0 |	sub   <
  READ MEM[ALU]
  TICK: 3883 PC:  55 ADDR:   0 MEM_OUT: 400000 ACC: 121393 LG_ALU: 3890 RG_ALU:   7 SP: 3889 ZF: 0 |	sub   <
  MEM[ALU] -> ALU_RG
  TICK: 3884 PC:  55 ADDR:   0 MEM_OUT: 400000 ACC: 121393 LG_ALU: 3890 RG_ALU: 400000 SP: 3889 ZF: 0 |	sub   <
  ACC -> ALU_LG
  TICK: 3884 PC:  55 ADDR:   0 MEM_OUT: 400000 ACC: 121393 LG_ALU: 121393 RG_ALU: 400000 SP: 3889 ZF: 0 |	sub   <
  ALU_RES = ALU_LG + ALU_RG
  TICK: 3885 PC:  55 ADDR:   0 MEM_OUT: 400000 ACC: 121393 LG_ALU: 121393 RG_ALU: 400000 SP: 3889 ZF: 0 |	sub   <
  ALU_RES -> ACC
  TICK: 3886 PC:  55 ADDR:   0 MEM_OUT: 400000 ACC: -278607 LG_ALU: 121393 RG_ALU: 400000 SP: 3889 ZF: 0 |	sub   <
  PC + 1 -> PC
  NUM -> ALU_RG
  TICK: 3887 PC:  57 ADDR:   0 MEM_OUT: 400000 ACC: -278607 LG_ALU: 121393 RG_ALU:   1 SP: 3889 ZF: 0 |	load   <
  ALU_RES = ALU_RG
  TICK: 3888 PC:  57 ADDR:   0 MEM_OUT: 400000 ACC: -278607 LG_ALU: 121393 RG_ALU:   1 SP: 3889 ZF: 0 |	load   <
  ALU_RES -> ACC
  TICK: 3889 PC:  57 ADDR:   0 MEM_OUT: 400000 ACC: 1 LG_ALU: 121393 RG_ALU:   1 SP: 3889 ZF: 0 |	load   <
  ADDR -> PC
  SP -> ALU_LG
  TICK: 3891 PC:  60 ADDR:   0 MEM_OUT: 400000 ACC: 1 LG_ALU: 3889 RG_ALU:   1 SP: 3889 ZF: 0 |	push   <
  ALU_RES = SP - 1
  TICK: 3892 PC:  60 ADDR:   0 MEM_OUT: 400000 ACC: 1 LG_ALU: 3889 RG_ALU:   1 SP: 3889 ZF: 0 |	push   <
  ALU_RES -> SP
  TICK: 3893 PC:  60 ADDR:   0 MEM_OUT: 400000 ACC: 1 LG_ALU: 3889 RG_ALU:   1 SP: 3888 ZF: 0 |	push   <
  WRITE ACC -> MEM[ALU]
  TICK: 3893 PC:  60 ADDR:   0 MEM_OUT: 400000 ACC: 1 LG_ALU: 3889 RG_ALU:   1 SP: 3888 ZF: 0 |	push   <
  SP -> ALU_LG
  TICK: 3894 PC:  61 ADDR:   0 MEM_OUT: 400000 ACC: 1 LG_ALU: 3888 RG_ALU:   1 SP: 3888 ZF: 0 |	pop
  ALU_RES = ALU_LG
  TICK: 3895 PC:  61 ADDR:   0 MEM_OUT: 400000 ACC: 1 LG_ALU: 3888 RG_ALU:   1 SP: 3888 ZF: 0 |	pop
  READ MEM[ALU]
  TICK: 3896 PC:  61 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3888 RG_ALU:   1 SP: 3888 ZF: 0 |	pop
  ALU_RES = SP + 1
  TICK: 3897 PC:  61 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3888 RG_ALU:   1 SP: 3888 ZF: 0 |	pop
  ALU_RES -> SP
  TICK: 3898 PC:  61 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3888 RG_ALU:   1 SP: 3889 ZF: 0 |	pop
  MEM[ALU] -> ALU_RG
  TICK: 3898 PC:  61 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3888 RG_ALU:   1 SP: 3889 ZF: 0 |	pop
  ALU_RES = ALU_RG
  TICK: 3899 PC:  61 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3888 RG_ALU:   1 SP: 3889 ZF: 0 |	pop
  ALU_RES -> ACC
  TICK: 3900 PC:  61 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3888 RG_ALU:   1 SP: 3889 ZF: 0 |	pop
  ADDR -> PC
  ADDR -> PC
  ADDR -> ALU_RG
  TICK: 3903 PC:  24 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3888 RG_ALU:   6 SP: 3889 ZF: 0 |	load
  ALU_RES = ALU_RG
  TICK: 3904 PC:  24 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3888 RG_ALU:   6 SP: 3889 ZF: 0 |	load
  READ MEM[ALU]
  TICK: 3905 PC:  24 ADDR:   0 MEM_OUT: 121393 ACC: 1 LG_ALU: 3888 RG_ALU:   6 SP: 3889 ZF: 0 |	load
  MEM[ALU] -> ALU_RG
  TICK: 3906 PC:  24 ADDR:   0 MEM_OUT: 121393 ACC: 1 LG_ALU: 3888 RG_ALU: 121393 SP: 3889 ZF: 0 |	load
  ALU_RES = ALU_RG
  TICK: 3907 PC:  24 ADDR:   0 MEM_OUT: 121393 ACC: 1 LG_ALU: 3888 RG_ALU: 121393 SP: 3889 ZF: 0 |	load
  ALU_RES -> ACC
  TICK: 3908 PC:  24 ADDR:   0 MEM_OUT: 121393 ACC: 121393 LG_ALU: 3888 RG_ALU: 121393 SP: 3889 ZF: 0 |	load
  NUM -> ALU_RG
  TICK: 3909 PC:  25 ADDR:   0 MEM_OUT: 121393 ACC: 121393 LG_ALU: 3888 RG_ALU:   2 SP: 3889 ZF: 0 |	mod
  ACC -> ALU_LG
  TICK: 3909 PC:  25 ADDR:   0 MEM_OUT: 121393 ACC: 121393 LG_ALU: 121393 RG_ALU:   2 SP: 3889 ZF: 0 |	mod
  ALU_RES = ALU_LG % ALU_RG
  TICK: 3910 PC:  25 ADDR:   0 MEM_OUT: 121393 ACC: 121393 LG_ALU: 121393 RG_ALU:   2 SP: 3889 ZF: 0 |	mod
  ALU_RES -> ACC
  TICK: 3911 PC:  25 ADDR:   0 MEM_OUT: 121393 ACC: 1 LG_ALU: 121393 RG_ALU:   2 SP: 3889 ZF: 0 |	mod
  SP -> ALU_LG
  TICK: 3912 PC:  26 ADDR:   0 MEM_OUT: 121393 ACC: 1 LG_ALU: 3889 RG_ALU:   2 SP: 3889 ZF: 0 |	push
  ALU_RES = SP - 1
  TICK: 3913 PC:  26 ADDR:   0 MEM_OUT: 121393 ACC: 1 LG_ALU: 3889 RG_ALU:   2 SP: 3889 ZF: 0 |	push
  ALU_RES -> SP
  TICK: 3914 PC:  26 ADDR:   0 MEM_OUT: 121393 ACC: 1 LG_ALU: 3889 RG_ALU:   2 SP: 3888 ZF: 0 |	push
  WRITE ACC -> MEM[ALU]
  TICK: 3914 PC:  26 ADDR:   0 MEM_OUT: 121393 ACC: 1 LG_ALU: 3889 RG_ALU:   2 SP: 3888 ZF: 0 |	push
  NUM -> ALU_RG
  TICK: 3915 PC:  27 ADDR:   0 MEM_OUT: 121393 ACC: 1 LG_ALU: 3889 RG_ALU:   0 SP: 3888 ZF: 0 |	load   =
  ALU_RES = ALU_RG
  TICK: 3916 PC:  27 ADDR:   0 MEM_OUT: 121393 ACC: 1 LG_ALU: 3889 RG_ALU:   0 SP: 3888 ZF: 1 |	load   =
  ALU_RES -> ACC
  TICK: 3917 PC:  27 ADDR:   0 MEM_OUT: 121393 ACC: 0 LG_ALU: 3889 RG_ALU:   0 SP: 3888 ZF: 1 |	load   =
  SP -> ALU_LG
  TICK: 3918 PC:  28 ADDR:   0 MEM_OUT: 121393 ACC: 0 LG_ALU: 3888 RG_ALU:   0 SP: 3888 ZF: 1 |	sub   =
  ALU_RES = ALU_LG
  TICK: 3919 PC:  28 ADDR:   0 MEM_OUT: 121393 ACC: 0 LG_ALU: 3888 RG_ALU:   0 SP: 3888 ZF: 0 |	sub   =
  READ MEM[ALU]
  TICK: 3920 PC:  28 ADDR:   0 MEM_OUT: 1 ACC: 0 LG_ALU: 3888 RG_ALU:   0 SP: 3888 ZF: 0 |	sub   =
  MEM[ALU] -> ALU_RG
  TICK: 3921 PC:  28 ADDR:   0 MEM_OUT: 1 ACC: 0 LG_ALU: 3888 RG_ALU:   1 SP: 3888 ZF: 0 |	sub   =
  ALU_RES = SP + 1
  TICK: 3922 PC:  28 ADDR:   0 MEM_OUT: 1 ACC: 0 LG_ALU: 3888 RG_ALU:   1 SP: 3888 ZF: 0 |	sub   =
  ALU_RES -> SP
  TICK: 3923 PC:  28 ADDR:   0 MEM_OUT: 1 ACC: 0 LG_ALU: 3888 RG_ALU:   1 SP: 3889 ZF: 0 |	sub   =
  ACC -> ALU_LG
  TICK: 3923 PC:  28 ADDR:   0 MEM_OUT: 1 ACC: 0 LG_ALU:   0 RG_ALU:   1 SP: 3889 ZF: 0 |	sub   =
  ALU_RES = ALU_LG + ALU_RG
  TICK: 3924 PC:  28 ADDR:   0 MEM_OUT: 1 ACC: 0 LG_ALU:   0 RG_ALU:   1 SP: 3889 ZF: 0 |	sub   =
  ALU_RES -> ACC
  TICK: 3925 PC:  28 ADDR:   0 MEM_OUT: 1 ACC: -1 LG_ALU:   0 RG_ALU:   1 SP: 3889 ZF: 0 |	sub   =
  ADDR -> PC
  NUM -> ALU_RG
  TICK: 3927 PC:  32 ADDR:   0 MEM_OUT: 1 ACC: -1 LG_ALU:   0 RG_ALU:   0 SP: 3889 ZF: 0 |	load   =
  ALU_RES = ALU_RG
  TICK: 3928 PC:  32 ADDR:   0 MEM_OUT: 1 ACC: -1 LG_ALU:   0 RG_ALU:   0 SP: 3889 ZF: 1 |	load   =
  ALU_RES -> ACC
  TICK: 3929 PC:  32 ADDR:   0 MEM_OUT: 1 ACC: 0 LG_ALU:   0 RG_ALU:   0 SP: 3889 ZF: 1 |	load   =
  SP -> ALU_LG
  TICK: 3930 PC:  33 ADDR:   0 MEM_OUT: 1 ACC: 0 LG_ALU: 3889 RG_ALU:   0 SP: 3889 ZF: 1 |	push   =
  ALU_RES = SP - 1
  TICK: 3931 PC:  33 ADDR:   0 MEM_OUT: 1 ACC: 0 LG_ALU: 3889 RG_ALU:   0 SP: 3889 ZF: 0 |	push   =
  ALU_RES -> SP
  TICK: 3932 PC:  33 ADDR:   0 MEM_OUT: 1 ACC: 0 LG_ALU: 3889 RG_ALU:   0 SP: 3888 ZF: 0 |	push   =
  WRITE ACC -> MEM[ALU]
  TICK: 3932 PC:  33 ADDR:   0 MEM_OUT: 1 ACC: 0 LG_ALU: 3889 RG_ALU:   0 SP: 3888 ZF: 0 |	push   =
  SP -> ALU_LG
  TICK: 3933 PC:  34 ADDR:   0 MEM_OUT: 1 ACC: 0 LG_ALU: 3888 RG_ALU:   0 SP: 3888 ZF: 0 |	pop   if
  ALU_RES = ALU_LG
  TICK: 3934 PC:  34 ADDR:   0 MEM_OUT: 1 ACC: 0 LG_ALU: 3888 RG_ALU:   0 SP: 3888 ZF: 0 |	pop   if
  READ MEM[ALU]
  TICK: 3935 PC:  34 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3888 RG_ALU:   0 SP: 3888 ZF: 0 |	pop   if
  ALU_RES = SP + 1
  TICK: 3936 PC:  34 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3888 RG_ALU:   0 SP: 3888 ZF: 0 |	pop   if
  ALU_RES -> SP
  TICK: 3937 PC:  34 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3888 RG_ALU:   0 SP: 3889 ZF: 0 |	pop   if
  MEM[ALU] -> ALU_RG
  TICK: 3937 PC:  34 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3888 RG_ALU:   0 SP: 3889 ZF: 0 |	pop   if
  ALU_RES = ALU_RG
  TICK: 3938 PC:  34 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3888 RG_ALU:   0 SP: 3889 ZF: 1 |	pop   if
  ALU_RES -> ACC
  TICK: 3939 PC:  34 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3888 RG_ALU:   0 SP: 3889 ZF: 1 |	pop   if
  PC + 1 -> PC
  ADDR -> PC
  NUM -> ALU_RG
  TICK: 3941 PC:  20 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3888 RG_ALU:   0 SP: 3889 ZF: 1 |	load   +
  ALU_RES = ALU_RG
  TICK: 3942 PC:  20 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3888 RG_ALU:   0 SP: 3889 ZF: 1 |	load   +
  ALU_RES -> ACC
  TICK: 3943 PC:  20 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3888 RG_ALU:   0 SP: 3889 ZF: 1 |	load   +
  NUM -> ALU_RG
  TICK: 3944 PC:  21 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3888 RG_ALU:   0 SP: 3889 ZF: 1 |	add   +
  ACC -> ALU_LG
  TICK: 3944 PC:  21 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU:   0 RG_ALU:   0 SP: 3889 ZF: 1 |	add   +
  ALU_RES = ALU_LG + ALU_RG
  TICK: 3945 PC:  21 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU:   0 RG_ALU:   0 SP: 3889 ZF: 1 |	add   +
  ALU_RES -> ACC
  TICK: 3946 PC:  21 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU:   0 RG_ALU:   0 SP: 3889 ZF: 1 |	add   +
  SP -> ALU_LG
  TICK: 3947 PC:  22 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3889 RG_ALU:   0 SP: 3889 ZF: 1 |	push   +
  ALU_RES = SP - 1
  TICK: 3948 PC:  22 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3889 RG_ALU:   0 SP: 3889 ZF: 0 |	push   +
  ALU_RES -> SP
  TICK: 3949 PC:  22 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3889 RG_ALU:   0 SP: 3888 ZF: 0 |	push   +
  WRITE ACC -> MEM[ALU]
  TICK: 3949 PC:  22 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3889 RG_ALU:   0 SP: 3888 ZF: 0 |	push   +
  ADDR -> PC
  SP -> ALU_LG
  TICK: 3951 PC:  37 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3888 RG_ALU:   0 SP: 3888 ZF: 0 |	pop   if
  ALU_RES = ALU_LG
  TICK: 3952 PC:  37 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3888 RG_ALU:   0 SP: 3888 ZF: 0 |	pop   if
  READ MEM[ALU]
  TICK: 3953 PC:  37 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3888 RG_ALU:   0 SP: 3888 ZF: 0 |	pop   if
  ALU_RES = SP + 1
  TICK: 3954 PC:  37 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3888 RG_ALU:   0 SP: 3888 ZF: 0 |	pop   if
  ALU_RES -> SP
  TICK: 3955 PC:  37 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3888 RG_ALU:   0 SP: 3889 ZF: 0 |	pop   if
  MEM[ALU] -> ALU_RG
  TICK: 3955 PC:  37 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3888 RG_ALU:   0 SP: 3889 ZF: 0 |	pop   if
  ALU_RES = ALU_RG
  TICK: 3956 PC:  37 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3888 RG_ALU:   0 SP: 3889 ZF: 1 |	pop   if
  ALU_RES -> ACC
  TICK: 3957 PC:  37 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3888 RG_ALU:   0 SP: 3889 ZF: 1 |	pop   if
  SP -> ALU_LG
  TICK: 3958 PC:  38 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3889 RG_ALU:   0 SP: 3889 ZF: 1 |	push   if
  ALU_RES = SP - 1
  TICK: 3959 PC:  38 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3889 RG_ALU:   0 SP: 3889 ZF: 0 |	push   if
  ALU_RES -> SP
  TICK: 3960 PC:  38 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3889 RG_ALU:   0 SP: 3888 ZF: 0 |	push   if
  WRITE ACC -> MEM[ALU]
  TICK: 3960 PC:  38 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3889 RG_ALU:   0 SP: 3888 ZF: 0 |	push   if
  ADDR -> ALU_RG
  TICK: 3961 PC:  39 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3889 RG_ALU:   6 SP: 3888 ZF: 0 |	load   var
  ALU_RES = ALU_RG
  TICK: 3962 PC:  39 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3889 RG_ALU:   6 SP: 3888 ZF: 0 |	load   var
  READ MEM[ALU]
  TICK: 3963 PC:  39 ADDR:   0 MEM_OUT: 121393 ACC: 0 LG_ALU: 3889 RG_ALU:   6 SP: 3888 ZF: 0 |	load   var
  MEM[ALU] -> ALU_RG
  TICK: 3964 PC:  39 ADDR:   0 MEM_OUT: 121393 ACC: 0 LG_ALU: 3889 RG_ALU: 121393 SP: 3888 ZF: 0 |	load   var
  ALU_RES = ALU_RG
  TICK: 3965 PC:  39 ADDR:   0 MEM_OUT: 121393 ACC: 0 LG_ALU: 3889 RG_ALU: 121393 SP: 3888 ZF: 0 |	load   var
  ALU_RES -> ACC
  TICK: 3966 PC:  39 ADDR:   0 MEM_OUT: 121393 ACC: 121393 LG_ALU: 3889 RG_ALU: 121393 SP: 3888 ZF: 0 |	load   var
  ADDR -> ALU_RG
  TICK: 3967 PC:  40 ADDR:   0 MEM_OUT: 121393 ACC: 121393 LG_ALU: 3889 RG_ALU:   8 SP: 3888 ZF: 0 |	store   var
  ALU_RES = ALU_RG
  TICK: 3968 PC:  40 ADDR:   0 MEM_OUT: 121393 ACC: 121393 LG_ALU: 3889 RG_ALU:   8 SP: 3888 ZF: 0 |	store   var
  WRITE ACC -> MEM[ALU]
  TICK: 3969 PC:  40 ADDR:   0 MEM_OUT: 121393 ACC: 121393 LG_ALU: 3889 RG_ALU:   8 SP: 3888 ZF: 0 |	store   var
  NUM -> ALU_RG
  TICK: 3970 PC:  41 ADDR:   0 MEM_OUT: 121393 ACC: 121393 LG_ALU: 3889 RG_ALU:   1 SP: 3888 ZF: 0 |	load   var
  ALU_RES = ALU_RG
  TICK: 3971 PC:  41 ADDR:   0 MEM_OUT: 121393 ACC: 121393 LG_ALU: 3889 RG_ALU:   1 SP: 3888 ZF: 0 |	load   var
  ALU_RES -> ACC
  TICK: 3972 PC:  41 ADDR:   0 MEM_OUT: 121393 ACC: 1 LG_ALU: 3889 RG_ALU:   1 SP: 3888 ZF: 0 |	load   var
  SP -> ALU_LG
  TICK: 3973 PC:  42 ADDR:   0 MEM_OUT: 121393 ACC: 1 LG_ALU: 3888 RG_ALU:   1 SP: 3888 ZF: 0 |	push   var
  ALU_RES = SP - 1
  TICK: 3974 PC:  42 ADDR:   0 MEM_OUT: 121393 ACC: 1 LG_ALU: 3888 RG_ALU:   1 SP: 3888 ZF: 0 |	push   var
  ALU_RES -> SP
  TICK: 3975 PC:  42 ADDR:   0 MEM_OUT: 121393 ACC: 1 LG_ALU: 3888 RG_ALU:   1 SP: 3887 ZF: 0 |	push   var
  WRITE ACC -> MEM[ALU]
  TICK: 3975 PC:  42 ADDR:   0 MEM_OUT: 121393 ACC: 1 LG_ALU: 3888 RG_ALU:   1 SP: 3887 ZF: 0 |	push   var
  ADDR -> ALU_RG
  TICK: 3976 PC:  43 ADDR:   0 MEM_OUT: 121393 ACC: 1 LG_ALU: 3888 RG_ALU:   5 SP: 3887 ZF: 0 |	load   +
  ALU_RES = ALU_RG
  TICK: 3977 PC:  43 ADDR:   0 MEM_OUT: 121393 ACC: 1 LG_ALU: 3888 RG_ALU:   5 SP: 3887 ZF: 0 |	load   +
  READ MEM[ALU]
  TICK: 3978 PC:  43 ADDR:   0 MEM_OUT: 75025 ACC: 1 LG_ALU: 3888 RG_ALU:   5 SP: 3887 ZF: 0 |	load   +
  MEM[ALU] -> ALU_RG
  TICK: 3979 PC:  43 ADDR:   0 MEM_OUT: 75025 ACC: 1 LG_ALU: 3888 RG_ALU: 75025 SP: 3887 ZF: 0 |	load   +
  ALU_RES = ALU_RG
  TICK: 3980 PC:  43 ADDR:   0 MEM_OUT: 75025 ACC: 1 LG_ALU: 3888 RG_ALU: 75025 SP: 3887 ZF: 0 |	load   +
  ALU_RES -> ACC
  TICK: 3981 PC:  43 ADDR:   0 MEM_OUT: 75025 ACC: 75025 LG_ALU: 3888 RG_ALU: 75025 SP: 3887 ZF: 0 |	load   +
  ADDR -> ALU_RG
  TICK: 3982 PC:  44 ADDR:   0 MEM_OUT: 75025 ACC: 75025 LG_ALU: 3888 RG_ALU:   6 SP: 3887 ZF: 0 |	add   +
  ALU_RES = ALU_RG
  TICK: 3983 PC:  44 ADDR:   0 MEM_OUT: 75025 ACC: 75025 LG_ALU: 3888 RG_ALU:   6 SP: 3887 ZF: 0 |	add   +
  READ MEM[ALU]
  TICK: 3984 PC:  44 ADDR:   0 MEM_OUT: 121393 ACC: 75025 LG_ALU: 3888 RG_ALU:   6 SP: 3887 ZF: 0 |	add   +
  MEM[ALU] -> ALU_RG
  TICK: 3985 PC:  44 ADDR:   0 MEM_OUT: 121393 ACC: 75025 LG_ALU: 3888 RG_ALU: 121393 SP: 3887 ZF: 0 |	add   +
  ACC -> ALU_LG
  TICK: 3985 PC:  44 ADDR:   0 MEM_OUT: 121393 ACC: 75025 LG_ALU: 75025 RG_ALU: 121393 SP: 3887 ZF: 0 |	add   +
  ALU_RES = ALU_LG + ALU_RG
  TICK: 3986 PC:  44 ADDR:   0 MEM_OUT: 121393 ACC: 75025 LG_ALU: 75025 RG_ALU: 121393 SP: 3887 ZF: 0 |	add   +
  ALU_RES -> ACC
  TICK: 3987 PC:  44 ADDR:   0 MEM_OUT: 121393 ACC: 196418 LG_ALU: 75025 RG_ALU: 121393 SP: 3887 ZF: 0 |	add   +
  SP -> ALU_LG
  TICK: 3988 PC:  45 ADDR:   0 MEM_OUT: 121393 ACC: 196418 LG_ALU: 3887 RG_ALU: 121393 SP: 3887 ZF: 0 |	push   +
  ALU_RES = SP - 1
  TICK: 3989 PC:  45 ADDR:   0 MEM_OUT: 121393 ACC: 196418 LG_ALU: 3887 RG_ALU: 121393 SP: 3887 ZF: 0 |	push   +
  ALU_RES -> SP
  TICK: 3990 PC:  45 ADDR:   0 MEM_OUT: 121393 ACC: 196418 LG_ALU: 3887 RG_ALU: 121393 SP: 3886 ZF: 0 |	push   +
  WRITE ACC -> MEM[ALU]
  TICK: 3990 PC:  45 ADDR:   0 MEM_OUT: 121393 ACC: 196418 LG_ALU: 3887 RG_ALU: 121393 SP: 3886 ZF: 0 |	push   +
  SP -> ALU_LG
  TICK: 3991 PC:  46 ADDR:   0 MEM_OUT: 121393 ACC: 196418 LG_ALU: 3886 RG_ALU: 121393 SP: 3886 ZF: 0 |	pop   var
  ALU_RES = ALU_LG
  TICK: 3992 PC:  46 ADDR:   0 MEM_OUT: 121393 ACC: 196418 LG_ALU: 3886 RG_ALU: 121393 SP: 3886 ZF: 0 |	pop   var
  READ MEM[ALU]
  TICK: 3993 PC:  46 ADDR:   0 MEM_OUT: 196418 ACC: 196418 LG_ALU: 3886 RG_ALU: 121393 SP: 3886 ZF: 0 |	pop   var
  ALU_RES = SP + 1
  TICK: 3994 PC:  46 ADDR:   0 MEM_OUT: 196418 ACC: 196418 LG_ALU: 3886 RG_ALU: 121393 SP: 3886 ZF: 0 |	pop   var
  ALU_RES -> SP
  TICK: 3995 PC:  46 ADDR:   0 MEM_OUT: 196418 ACC: 196418 LG_ALU: 3886 RG_ALU: 121393 SP: 3887 ZF: 0 |	pop   var
  MEM[ALU] -> ALU_RG
  TICK: 3995 PC:  46 ADDR:   0 MEM_OUT: 196418 ACC: 196418 LG_ALU: 3886 RG_ALU: 196418 SP: 3887 ZF: 0 |	pop   var
  ALU_RES = ALU_RG
  TICK: 3996 PC:  46 ADDR:   0 MEM_OUT: 196418 ACC: 196418 LG_ALU: 3886 RG_ALU: 196418 SP: 3887 ZF: 0 |	pop   var
  ALU_RES -> ACC
  TICK: 3997 PC:  46 ADDR:   0 MEM_OUT: 196418 ACC: 196418 LG_ALU: 3886 RG_ALU: 196418 SP: 3887 ZF: 0 |	pop   var
  ADDR -> ALU_RG
  TICK: 3998 PC:  47 ADDR:   0 MEM_OUT: 196418 ACC: 196418 LG_ALU: 3886 RG_ALU:   6 SP: 3887 ZF: 0 |	store   var
  ALU_RES = ALU_RG
  TICK: 3999 PC:  47 ADDR:   0 MEM_OUT: 196418 ACC: 196418 LG_ALU: 3886 RG_ALU:   6 SP: 3887 ZF: 0 |	store   var
  WRITE ACC -> MEM[ALU]
  TICK: 4000 PC:  47 ADDR:   0 MEM_OUT: 196418 ACC: 196418 LG_ALU: 3886 RG_ALU:   6 SP: 3887 ZF: 0 |	store   var
  NUM -> ALU_RG
  TICK: 4001 PC:  48 ADDR:   0 MEM_OUT: 196418 ACC: 196418 LG_ALU: 3886 RG_ALU:   1 SP: 3887 ZF: 0 |	load   var
  ALU_RES = ALU_RG
  TICK: 4002 PC:  48 ADDR:   0 MEM_OUT: 196418 ACC: 196418 LG_ALU: 3886 RG_ALU:   1 SP: 3887 ZF: 0 |	load   var
  ALU_RES -> ACC
  TICK: 4003 PC:  48 ADDR:   0 MEM_OUT: 196418 ACC: 1 LG_ALU: 3886 RG_ALU:   1 SP: 3887 ZF: 0 |	load   var
  SP -> ALU_LG
  TICK: 4004 PC:  49 ADDR:   0 MEM_OUT: 196418 ACC: 1 LG_ALU: 3887 RG_ALU:   1 SP: 3887 ZF: 0 |	push   var
  ALU_RES = SP - 1
  TICK: 4005 PC:  49 ADDR:   0 MEM_OUT: 196418 ACC: 1 LG_ALU: 3887 RG_ALU:   1 SP: 3887 ZF: 0 |	push   var
  ALU_RES -> SP
  TICK: 4006 PC:  49 ADDR:   0 MEM_OUT: 196418 ACC: 1 LG_ALU: 3887 RG_ALU:   1 SP: 3886 ZF: 0 |	push   var
  WRITE ACC -> MEM[ALU]
  TICK: 4006 PC:  49 ADDR:   0 MEM_OUT: 196418 ACC: 1 LG_ALU: 3887 RG_ALU:   1 SP: 3886 ZF: 0 |	push   var
  ADDR -> ALU_RG
  TICK: 4007 PC:  50 ADDR:   0 MEM_OUT: 196418 ACC: 1 LG_ALU: 3887 RG_ALU:   8 SP: 3886 ZF: 0 |	load   var
  ALU_RES = ALU_RG
  TICK: 4008 PC:  50 ADDR:   0 MEM_OUT: 196418 ACC: 1 LG_ALU: 3887 RG_ALU:   8 SP: 3886 ZF: 0 |	load   var
  READ MEM[ALU]
  TICK: 4009 PC:  50 ADDR:   0 MEM_OUT: 121393 ACC: 1 LG_ALU: 3887 RG_ALU:   8 SP: 3886 ZF: 0 |	load   var
  MEM[ALU] -> ALU_RG
  TICK: 4010 PC:  50 ADDR:   0 MEM_OUT: 121393 ACC: 1 LG_ALU: 3887 RG_ALU: 121393 SP: 3886 ZF: 0 |	load   var
  ALU_RES = ALU_RG
  TICK: 4011 PC:  50 ADDR:   0 MEM_OUT: 121393 ACC: 1 LG_ALU: 3887 RG_ALU: 121393 SP: 3886 ZF: 0 |	load   var
  ALU_RES -> ACC
  TICK: 4012 PC:  50 ADDR:   0 MEM_OUT: 121393 ACC: 121393 LG_ALU: 3887 RG_ALU: 121393 SP: 3886 ZF: 0 |	load   var
  ADDR -> ALU_RG
  TICK: 4013 PC:  51 ADDR:   0 MEM_OUT: 121393 ACC: 121393 LG_ALU: 3887 RG_ALU:   5 SP: 3886 ZF: 0 |	store   var
  ALU_RES = ALU_RG
  TICK: 4014 PC:  51 ADDR:   0 MEM_OUT: 121393 ACC: 121393 LG_ALU: 3887 RG_ALU:   5 SP: 3886 ZF: 0 |	store   var
  WRITE ACC -> MEM[ALU]
  TICK: 4015 PC:  51 ADDR:   0 MEM_OUT: 121393 ACC: 121393 LG_ALU: 3887 RG_ALU:   5 SP: 3886 ZF: 0 |	store   var
  NUM -> ALU_RG
  TICK: 4016 PC:  52 ADDR:   0 MEM_OUT: 121393 ACC: 121393 LG_ALU: 3887 RG_ALU:   1 SP: 3886 ZF: 0 |	load   var
  ALU_RES = ALU_RG
  TICK: 4017 PC:  52 ADDR:   0 MEM_OUT: 121393 ACC: 121393 LG_ALU: 3887 RG_ALU:   1 SP: 3886 ZF: 0 |	load   var
  ALU_RES -> ACC
  TICK: 4018 PC:  52 ADDR:   0 MEM_OUT: 121393 ACC: 1 LG_ALU: 3887 RG_ALU:   1 SP: 3886 ZF: 0 |	load   var
  SP -> ALU_LG
  TICK: 4019 PC:  53 ADDR:   0 MEM_OUT: 121393 ACC: 1 LG_ALU: 3886 RG_ALU:   1 SP: 3886 ZF: 0 |	push   var
  ALU_RES = SP - 1
  TICK: 4020 PC:  53 ADDR:   0 MEM_OUT: 121393 ACC: 1 LG_ALU: 3886 RG_ALU:   1 SP: 3886 ZF: 0 |	push   var
  ALU_RES -> SP
  TICK: 4021 PC:  53 ADDR:   0 MEM_OUT: 121393 ACC: 1 LG_ALU: 3886 RG_ALU:   1 SP: 3885 ZF: 0 |	push   var
  WRITE ACC -> MEM[ALU]
  TICK: 4021 PC:  53 ADDR:   0 MEM_OUT: 121393 ACC: 1 LG_ALU: 3886 RG_ALU:   1 SP: 3885 ZF: 0 |	push   var
  ADDR -> ALU_RG
  TICK: 4022 PC:  54 ADDR:   0 MEM_OUT: 121393 ACC: 1 LG_ALU: 3886 RG_ALU:   6 SP: 3885 ZF: 0 |	load   <
  ALU_RES = ALU_RG
  TICK: 4023 PC:  54 ADDR:   0 MEM_OUT: 121393 ACC: 1 LG_ALU: 3886 RG_ALU:   6 SP: 3885 ZF: 0 |	load   <
  READ MEM[ALU]
  TICK: 4024 PC:  54 ADDR:   0 MEM_OUT: 196418 ACC: 1 LG_ALU: 3886 RG_ALU:   6 SP: 3885 ZF: 0 |	load   <
  MEM[ALU] -> ALU_RG
  TICK: 4025 PC:  54 ADDR:   0 MEM_OUT: 196418 ACC: 1 LG_ALU: 3886 RG_ALU: 196418 SP: 3885 ZF: 0 |	load   <
  ALU_RES = ALU_RG
  TICK: 4026 PC:  54 ADDR:   0 MEM_OUT: 196418 ACC: 1 LG_ALU: 3886 RG_ALU: 196418 SP: 3885 ZF: 0 |	load   <
  ALU_RES -> ACC
  TICK: 4027 PC:  54 ADDR:   0 MEM_OUT: 196418 ACC: 196418 LG_ALU: 3886 RG_ALU: 196418 SP: 3885 ZF: 0 |	load   <
  ADDR -> ALU_RG
  TICK: 4028 PC:  55 ADDR:   0 MEM_OUT: 196418 ACC: 196418 LG_ALU: 3886 RG_ALU:   7 SP: 3885 ZF: 0 |	sub   <
  ALU_RES = ALU_RG
  TICK: 4029 PC:  55 ADDR:   0 MEM_OUT: 196418 ACC: 196418 LG_ALU: 3886 RG_ALU:   7 SP: 3885 ZF: 0 |	sub   <
  READ MEM[ALU]
  TICK: 4030 PC:  55 ADDR:   0 MEM_OUT: 400000 ACC: 196418 LG_ALU: 3886 RG_ALU:   7 SP: 3885 ZF: 0 |	sub   <
  MEM[ALU] -> ALU_RG
  TICK: 4031 PC:  55 ADDR:   0 MEM_OUT: 400000 ACC: 196418 LG_ALU: 3886 RG_ALU: 400000 SP: 3885 ZF: 0 |	sub   <
  ACC -> ALU_LG
  TICK: 4031 PC:  55 ADDR:   0 MEM_OUT: 400000 ACC: 196418 LG_ALU: 196418 RG_ALU: 400000 SP: 3885 ZF: 0 |	sub   <
  ALU_RES = ALU_LG + ALU_RG
  TICK: 4032 PC:  55 ADDR:   0 MEM_OUT: 400000 ACC: 196418 LG_ALU: 196418 RG_ALU: 400000 SP: 3885 ZF: 0 |	sub   <
  ALU_RES -> ACC
  TICK: 4033 PC:  55 ADDR:   0 MEM_OUT: 400000 ACC: -203582 LG_ALU: 196418 RG_ALU: 400000 SP: 3885 ZF: 0 |	sub   <
  PC + 1 -> PC
  NUM -> ALU_RG
  TICK: 4034 PC:  57 ADDR:   0 MEM_OUT: 400000 ACC: -203582 LG_ALU: 196418 RG_ALU:   1 SP: 3885 ZF: 0 |	load   <
  ALU_RES = ALU_RG
  TICK: 4035 PC:  57 ADDR:   0 MEM_OUT: 400000 ACC: -203582 LG_ALU: 196418 RG_ALU:   1 SP: 3885 ZF: 0 |	load   <
  ALU_RES -> ACC
  TICK: 4036 PC:  57 ADDR:   0 MEM_OUT: 400000 ACC: 1 LG_ALU: 196418 RG_ALU:   1 SP: 3885 ZF: 0 |	load   <
  ADDR -> PC
  SP -> ALU_LG
  TICK: 4038 PC:  60 ADDR:   0 MEM_OUT: 400000 ACC: 1 LG_ALU: 3885 RG_ALU:   1 SP: 3885 ZF: 0 |	push   <
  ALU_RES = SP - 1
  TICK: 4039 PC:  60 ADDR:   0 MEM_OUT: 400000 ACC: 1 LG_ALU: 3885 RG_ALU:   1 SP: 3885 ZF: 0 |	push   <
  ALU_RES -> SP
  TICK: 4040 PC:  60 ADDR:   0 MEM_OUT: 400000 ACC: 1 LG_ALU: 3885 RG_ALU:   1 SP: 3884 ZF: 0 |	push   <
  WRITE ACC -> MEM[ALU]
  TICK: 4040 PC:  60 ADDR:   0 MEM_OUT: 400000 ACC: 1 LG_ALU: 3885 RG_ALU:   1 SP: 3884 ZF: 0 |	push   <
  SP -> ALU_LG
  TICK: 4041 PC:  61 ADDR:   0 MEM_OUT: 400000 ACC: 1 LG_ALU: 3884 RG_ALU:   1 SP: 3884 ZF: 0 |	pop
  ALU_RES = ALU_LG
  TICK: 4042 PC:  61 ADDR:   0 MEM_OUT: 400000 ACC: 1 LG_ALU: 3884 RG_ALU:   1 SP: 3884 ZF: 0 |	pop
  READ MEM[ALU]
  TICK: 4043 PC:  61 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3884 RG_ALU:   1 SP: 3884 ZF: 0 |	pop
  ALU_RES = SP + 1
  TICK: 4044 PC:  61 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3884 RG_ALU:   1 SP: 3884 ZF: 0 |	pop
  ALU_RES -> SP
  TICK: 4045 PC:  61 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3884 RG_ALU:   1 SP: 3885 ZF: 0 |	pop
  MEM[ALU] -> ALU_RG
  TICK: 4045 PC:  61 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3884 RG_ALU:   1 SP: 3885 ZF: 0 |	pop
  ALU_RES = ALU_RG
  TICK: 4046 PC:  61 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3884 RG_ALU:   1 SP: 3885 ZF: 0 |	pop
  ALU_RES -> ACC
  TICK: 4047 PC:  61 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3884 RG_ALU:   1 SP: 3885 ZF: 0 |	pop
  ADDR -> PC
  ADDR -> PC
  ADDR -> ALU_RG
  TICK: 4050 PC:  24 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3884 RG_ALU:   6 SP: 3885 ZF: 0 |	load
  ALU_RES = ALU_RG
  TICK: 4051 PC:  24 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3884 RG_ALU:   6 SP: 3885 ZF: 0 |	load
  READ MEM[ALU]
  TICK: 4052 PC:  24 ADDR:   0 MEM_OUT: 196418 ACC: 1 LG_ALU: 3884 RG_ALU:   6 SP: 3885 ZF: 0 |	load
  MEM[ALU] -> ALU_RG
  TICK: 4053 PC:  24 ADDR:   0 MEM_OUT: 196418 ACC: 1 LG_ALU: 3884 RG_ALU: 196418 SP: 3885 ZF: 0 |	load
  ALU_RES = ALU_RG
  TICK: 4054 PC:  24 ADDR:   0 MEM_OUT: 196418 ACC: 1 LG_ALU: 3884 RG_ALU: 196418 SP: 3885 ZF: 0 |	load
  ALU_RES -> ACC
  TICK: 4055 PC:  24 ADDR:   0 MEM_OUT: 196418 ACC: 196418 LG_ALU: 3884 RG_ALU: 196418 SP: 3885 ZF: 0 |	load
  NUM -> ALU_RG
  TICK: 4056 PC:  25 ADDR:   0 MEM_OUT: 196418 ACC: 196418 LG_ALU: 3884 RG_ALU:   2 SP: 3885 ZF: 0 |	mod
  ACC -> ALU_LG
  TICK: 4056 PC:  25 ADDR:   0 MEM_OUT: 196418 ACC: 196418 LG_ALU: 196418 RG_ALU:   2 SP: 3885 ZF: 0 |	mod
  ALU_RES = ALU_LG % ALU_RG
  TICK: 4057 PC:  25 ADDR:   0 MEM_OUT: 196418 ACC: 196418 LG_ALU: 196418 RG_ALU:   2 SP: 3885 ZF: 1 |	mod
  ALU_RES -> ACC
  TICK: 4058 PC:  25 ADDR:   0 MEM_OUT: 196418 ACC: 0 LG_ALU: 196418 RG_ALU:   2 SP: 3885 ZF: 1 |	mod
  SP -> ALU_LG
  TICK: 4059 PC:  26 ADDR:   0 MEM_OUT: 196418 ACC: 0 LG_ALU: 3885 RG_ALU:   2 SP: 3885 ZF: 1 |	push
  ALU_RES = SP - 1
  TICK: 4060 PC:  26 ADDR:   0 MEM_OUT: 196418 ACC: 0 LG_ALU: 3885 RG_ALU:   2 SP: 3885 ZF: 0 |	push
  ALU_RES -> SP
  TICK: 4061 PC:  26 ADDR:   0 MEM_OUT: 196418 ACC: 0 LG_ALU: 3885 RG_ALU:   2 SP: 3884 ZF: 0 |	push
  WRITE ACC -> MEM[ALU]
  TICK: 4061 PC:  26 ADDR:   0 MEM_OUT: 196418 ACC: 0 LG_ALU: 3885 RG_ALU:   2 SP: 3884 ZF: 0 |	push
  NUM -> ALU_RG
  TICK: 4062 PC:  27 ADDR:   0 MEM_OUT: 196418 ACC: 0 LG_ALU: 3885 RG_ALU:   0 SP: 3884 ZF: 0 |	load   =
  ALU_RES = ALU_RG
  TICK: 4063 PC:  27 ADDR:   0 MEM_OUT: 196418 ACC: 0 LG_ALU: 3885 RG_ALU:   0 SP: 3884 ZF: 1 |	load   =
  ALU_RES -> ACC
  TICK: 4064 PC:  27 ADDR:   0 MEM_OUT: 196418 ACC: 0 LG_ALU: 3885 RG_ALU:   0 SP: 3884 ZF: 1 |	load   =
  SP -> ALU_LG
  TICK: 4065 PC:  28 ADDR:   0 MEM_OUT: 196418 ACC: 0 LG_ALU: 3884 RG_ALU:   0 SP: 3884 ZF: 1 |	sub   =
  ALU_RES = ALU_LG
  TICK: 4066 PC:  28 ADDR:   0 MEM_OUT: 196418 ACC: 0 LG_ALU: 3884 RG_ALU:   0 SP: 3884 ZF: 0 |	sub   =
  READ MEM[ALU]
  TICK: 4067 PC:  28 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3884 RG_ALU:   0 SP: 3884 ZF: 0 |	sub   =
  MEM[ALU] -> ALU_RG
  TICK: 4068 PC:  28 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3884 RG_ALU:   0 SP: 3884 ZF: 0 |	sub   =
  ALU_RES = SP + 1
  TICK: 4069 PC:  28 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3884 RG_ALU:   0 SP: 3884 ZF: 0 |	sub   =
  ALU_RES -> SP
  TICK: 4070 PC:  28 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3884 RG_ALU:   0 SP: 3885 ZF: 0 |	sub   =
  ACC -> ALU_LG
  TICK: 4070 PC:  28 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU:   0 RG_ALU:   0 SP: 3885 ZF: 0 |	sub   =
  ALU_RES = ALU_LG + ALU_RG
  TICK: 4071 PC:  28 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU:   0 RG_ALU:   0 SP: 3885 ZF: 1 |	sub   =
  ALU_RES -> ACC
  TICK: 4072 PC:  28 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU:   0 RG_ALU:   0 SP: 3885 ZF: 1 |	sub   =
  PC + 1 -> PC
  NUM -> ALU_RG
  TICK: 4073 PC:  30 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU:   0 RG_ALU:   1 SP: 3885 ZF: 1 |	load   =
  ALU_RES = ALU_RG
  TICK: 4074 PC:  30 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU:   0 RG_ALU:   1 SP: 3885 ZF: 0 |	load   =
  ALU_RES -> ACC
  TICK: 4075 PC:  30 ADDR:   0 MEM_OUT: 0 ACC: 1 LG_ALU:   0 RG_ALU:   1 SP: 3885 ZF: 0 |	load   =
  ADDR -> PC
  SP -> ALU_LG
  TICK: 4077 PC:  33 ADDR:   0 MEM_OUT: 0 ACC: 1 LG_ALU: 3885 RG_ALU:   1 SP: 3885 ZF: 0 |	push   =
  ALU_RES = SP - 1
  TICK: 4078 PC:  33 ADDR:   0 MEM_OUT: 0 ACC: 1 LG_ALU: 3885 RG_ALU:   1 SP: 3885 ZF: 0 |	push   =
  ALU_RES -> SP
  TICK: 4079 PC:  33 ADDR:   0 MEM_OUT: 0 ACC: 1 LG_ALU: 3885 RG_ALU:   1 SP: 3884 ZF: 0 |	push   =
  WRITE ACC -> MEM[ALU]
  TICK: 4079 PC:  33 ADDR:   0 MEM_OUT: 0 ACC: 1 LG_ALU: 3885 RG_ALU:   1 SP: 3884 ZF: 0 |	push   =
  SP -> ALU_LG
  TICK: 4080 PC:  34 ADDR:   0 MEM_OUT: 0 ACC: 1 LG_ALU: 3884 RG_ALU:   1 SP: 3884 ZF: 0 |	pop   if
  ALU_RES = ALU_LG
  TICK: 4081 PC:  34 ADDR:   0 MEM_OUT: 0 ACC: 1 LG_ALU: 3884 RG_ALU:   1 SP: 3884 ZF: 0 |	pop   if
  READ MEM[ALU]
  TICK: 4082 PC:  34 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3884 RG_ALU:   1 SP: 3884 ZF: 0 |	pop   if
  ALU_RES = SP + 1
  TICK: 4083 PC:  34 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3884 RG_ALU:   1 SP: 3884 ZF: 0 |	pop   if
  ALU_RES -> SP
  TICK: 4084 PC:  34 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3884 RG_ALU:   1 SP: 3885 ZF: 0 |	pop   if
  MEM[ALU] -> ALU_RG
  TICK: 4084 PC:  34 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3884 RG_ALU:   1 SP: 3885 ZF: 0 |	pop   if
  ALU_RES = ALU_RG
  TICK: 4085 PC:  34 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3884 RG_ALU:   1 SP: 3885 ZF: 0 |	pop   if
  ALU_RES -> ACC
  TICK: 4086 PC:  34 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3884 RG_ALU:   1 SP: 3885 ZF: 0 |	pop   if
  ADDR -> PC
  ADDR -> ALU_RG
  TICK: 4088 PC:   7 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3884 RG_ALU:   6 SP: 3885 ZF: 0 |	load   print
  ALU_RES = ALU_RG
  TICK: 4089 PC:   7 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3884 RG_ALU:   6 SP: 3885 ZF: 0 |	load   print
  READ MEM[ALU]
  TICK: 4090 PC:   7 ADDR:   0 MEM_OUT: 196418 ACC: 1 LG_ALU: 3884 RG_ALU:   6 SP: 3885 ZF: 0 |	load   print
  MEM[ALU] -> ALU_RG
  TICK: 4091 PC:   7 ADDR:   0 MEM_OUT: 196418 ACC: 1 LG_ALU: 3884 RG_ALU: 196418 SP: 3885 ZF: 0 |	load   print
  ALU_RES = ALU_RG
  TICK: 4092 PC:   7 ADDR:   0 MEM_OUT: 196418 ACC: 1 LG_ALU: 3884 RG_ALU: 196418 SP: 3885 ZF: 0 |	load   print
  ALU_RES -> ACC
  TICK: 4093 PC:   7 ADDR:   0 MEM_OUT: 196418 ACC: 196418 LG_ALU: 3884 RG_ALU: 196418 SP: 3885 ZF: 0 |	load   print
  get IO module port
  TICK: 4094 PC:   8 ADDR:   0 MEM_OUT: 196418 ACC: 196418 LG_ALU: 3884 RG_ALU: 196418 SP: 3885 ZF: 0 |	output   print
  ACC -> OUTPUT 
  TICK: 4095 PC:   8 ADDR:   0 MEM_OUT: 196418 ACC: 196418 LG_ALU: 3884 RG_ALU: 196418 SP: 3885 ZF: 0 |	output   print
  NUM -> ALU_RG
  TICK: 4096 PC:   9 ADDR:   0 MEM_OUT: 196418 ACC: 196418 LG_ALU: 3884 RG_ALU:   1 SP: 3885 ZF: 0 |	load   print
  ALU_RES = ALU_RG
  TICK: 4097 PC:   9 ADDR:   0 MEM_OUT: 196418 ACC: 196418 LG_ALU: 3884 RG_ALU:   1 SP: 3885 ZF: 0 |	load   print
  ALU_RES -> ACC
  TICK: 4098 PC:   9 ADDR:   0 MEM_OUT: 196418 ACC: 1 LG_ALU: 3884 RG_ALU:   1 SP: 3885 ZF: 0 |	load   print
  SP -> ALU_LG
  TICK: 4099 PC:  10 ADDR:   0 MEM_OUT: 196418 ACC: 1 LG_ALU: 3885 RG_ALU:   1 SP: 3885 ZF: 0 |	push   print
  ALU_RES = SP - 1
  TICK: 4100 PC:  10 ADDR:   0 MEM_OUT: 196418 ACC: 1 LG_ALU: 3885 RG_ALU:   1 SP: 3885 ZF: 0 |	push   print
  ALU_RES -> SP
  TICK: 4101 PC:  10 ADDR:   0 MEM_OUT: 196418 ACC: 1 LG_ALU: 3885 RG_ALU:   1 SP: 3884 ZF: 0 |	push   print
  WRITE ACC -> MEM[ALU]
  TICK: 4101 PC:  10 ADDR:   0 MEM_OUT: 196418 ACC: 1 LG_ALU: 3885 RG_ALU:   1 SP: 3884 ZF: 0 |	push   print
  NUM -> ALU_RG
  TICK: 4102 PC:  11 ADDR:   0 MEM_OUT: 196418 ACC: 1 LG_ALU: 3885 RG_ALU:  95 SP: 3884 ZF: 0 |	load   print
  ALU_RES = ALU_RG
  TICK: 4103 PC:  11 ADDR:   0 MEM_OUT: 196418 ACC: 1 LG_ALU: 3885 RG_ALU:  95 SP: 3884 ZF: 0 |	load   print
  ALU_RES -> ACC
  TICK: 4104 PC:  11 ADDR:   0 MEM_OUT: 196418 ACC: 95 LG_ALU: 3885 RG_ALU:  95 SP: 3884 ZF: 0 |	load   print
  get IO module port
  TICK: 4105 PC:  12 ADDR:   0 MEM_OUT: 196418 ACC: 95 LG_ALU: 3885 RG_ALU:  95 SP: 3884 ZF: 0 |	output   print
  ACC -> OUTPUT 
  TICK: 4106 PC:  12 ADDR:   0 MEM_OUT: 196418 ACC: 95 LG_ALU: 3885 RG_ALU:  95 SP: 3884 ZF: 0 |	output   print
  NUM -> ALU_RG
  TICK: 4107 PC:  13 ADDR:   0 MEM_OUT: 196418 ACC: 95 LG_ALU: 3885 RG_ALU:   0 SP: 3884 ZF: 0 |	load   print
  ALU_RES = ALU_RG
  TICK: 4108 PC:  13 ADDR:   0 MEM_OUT: 196418 ACC: 95 LG_ALU: 3885 RG_ALU:   0 SP: 3884 ZF: 1 |	load   print
  ALU_RES -> ACC
  TICK: 4109 PC:  13 ADDR:   0 MEM_OUT: 196418 ACC: 0 LG_ALU: 3885 RG_ALU:   0 SP: 3884 ZF: 1 |	load   print
  get IO module port
  TICK: 4110 PC:  14 ADDR:   0 MEM_OUT: 196418 ACC: 0 LG_ALU: 3885 RG_ALU:   0 SP: 3884 ZF: 1 |	output   print
  ACC -> OUTPUT 
  TICK: 4111 PC:  14 ADDR:   0 MEM_OUT: 196418 ACC: 0 LG_ALU: 3885 RG_ALU:   0 SP: 3884 ZF: 1 |	output   print
  NUM -> ALU_RG
  TICK: 4112 PC:  15 ADDR:   0 MEM_OUT: 196418 ACC: 0 LG_ALU: 3885 RG_ALU:   0 SP: 3884 ZF: 1 |	load   print
  ALU_RES = ALU_RG
  TICK: 4113 PC:  15 ADDR:   0 MEM_OUT: 196418 ACC: 0 LG_ALU: 3885 RG_ALU:   0 SP: 3884 ZF: 1 |	load   print
  ALU_RES -> ACC
  TICK: 4114 PC:  15 ADDR:   0 MEM_OUT: 196418 ACC: 0 LG_ALU: 3885 RG_ALU:   0 SP: 3884 ZF: 1 |	load   print
  get IO module port
  TICK: 4115 PC:  16 ADDR:   0 MEM_OUT: 196418 ACC: 0 LG_ALU: 3885 RG_ALU:   0 SP: 3884 ZF: 1 |	output   print
  ACC -> OUTPUT 
  TICK: 4116 PC:  16 ADDR:   0 MEM_OUT: 196418 ACC: 0 LG_ALU: 3885 RG_ALU:   0 SP: 3884 ZF: 1 |	output   print
  NUM -> ALU_RG
  TICK: 4117 PC:  17 ADDR:   0 MEM_OUT: 196418 ACC: 0 LG_ALU: 3885 RG_ALU:   1 SP: 3884 ZF: 1 |	load   print
  ALU_RES = ALU_RG
  TICK: 4118 PC:  17 ADDR:   0 MEM_OUT: 196418 ACC: 0 LG_ALU: 3885 RG_ALU:   1 SP: 3884 ZF: 0 |	load   print
  ALU_RES -> ACC
  TICK: 4119 PC:  17 ADDR:   0 MEM_OUT: 196418 ACC: 1 LG_ALU: 3885 RG_ALU:   1 SP: 3884 ZF: 0 |	load   print
  SP -> ALU_LG
  TICK: 4120 PC:  18 ADDR:   0 MEM_OUT: 196418 ACC: 1 LG_ALU: 3884 RG_ALU:   1 SP: 3884 ZF: 0 |	push   print
  ALU_RES = SP - 1
  TICK: 4121 PC:  18 ADDR:   0 MEM_OUT: 196418 ACC: 1 LG_ALU: 3884 RG_ALU:   1 SP: 3884 ZF: 0 |	push   print
  ALU_RES -> SP
  TICK: 4122 PC:  18 ADDR:   0 MEM_OUT: 196418 ACC: 1 LG_ALU: 3884 RG_ALU:   1 SP: 3883 ZF: 0 |	push   print
  WRITE ACC -> MEM[ALU]
  TICK: 4122 PC:  18 ADDR:   0 MEM_OUT: 196418 ACC: 1 LG_ALU: 3884 RG_ALU:   1 SP: 3883 ZF: 0 |	push   print
  ADDR -> PC
  SP -> ALU_LG
  TICK: 4124 PC:  37 ADDR:   0 MEM_OUT: 196418 ACC: 1 LG_ALU: 3883 RG_ALU:   1 SP: 3883 ZF: 0 |	pop   if
  ALU_RES = ALU_LG
  TICK: 4125 PC:  37 ADDR:   0 MEM_OUT: 196418 ACC: 1 LG_ALU: 3883 RG_ALU:   1 SP: 3883 ZF: 0 |	pop   if
  READ MEM[ALU]
  TICK: 4126 PC:  37 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3883 RG_ALU:   1 SP: 3883 ZF: 0 |	pop   if
  ALU_RES = SP + 1
  TICK: 4127 PC:  37 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3883 RG_ALU:   1 SP: 3883 ZF: 0 |	pop   if
  ALU_RES -> SP
  TICK: 4128 PC:  37 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3883 RG_ALU:   1 SP: 3884 ZF: 0 |	pop   if
  MEM[ALU] -> ALU_RG
  TICK: 4128 PC:  37 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3883 RG_ALU:   1 SP: 3884 ZF: 0 |	pop   if
  ALU_RES = ALU_RG
  TICK: 4129 PC:  37 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3883 RG_ALU:   1 SP: 3884 ZF: 0 |	pop   if
  ALU_RES -> ACC
  TICK: 4130 PC:  37 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3883 RG_ALU:   1 SP: 3884 ZF: 0 |	pop   if
  SP -> ALU_LG
  TICK: 4131 PC:  38 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3884 RG_ALU:   1 SP: 3884 ZF: 0 |	push   if
  ALU_RES = SP - 1
  TICK: 4132 PC:  38 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3884 RG_ALU:   1 SP: 3884 ZF: 0 |	push   if
  ALU_RES -> SP
  TICK: 4133 PC:  38 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3884 RG_ALU:   1 SP: 3883 ZF: 0 |	push   if
  WRITE ACC -> MEM[ALU]
  TICK: 4133 PC:  38 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3884 RG_ALU:   1 SP: 3883 ZF: 0 |	push   if
  ADDR -> ALU_RG
  TICK: 4134 PC:  39 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3884 RG_ALU:   6 SP: 3883 ZF: 0 |	load   var
  ALU_RES = ALU_RG
  TICK: 4135 PC:  39 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3884 RG_ALU:   6 SP: 3883 ZF: 0 |	load   var
  READ MEM[ALU]
  TICK: 4136 PC:  39 ADDR:   0 MEM_OUT: 196418 ACC: 1 LG_ALU: 3884 RG_ALU:   6 SP: 3883 ZF: 0 |	load   var
  MEM[ALU] -> ALU_RG
  TICK: 4137 PC:  39 ADDR:   0 MEM_OUT: 196418 ACC: 1 LG_ALU: 3884 RG_ALU: 196418 SP: 3883 ZF: 0 |	load   var
  ALU_RES = ALU_RG
  TICK: 4138 PC:  39 ADDR:   0 MEM_OUT: 196418 ACC: 1 LG_ALU: 3884 RG_ALU: 196418 SP: 3883 ZF: 0 |	load   var
  ALU_RES -> ACC
  TICK: 4139 PC:  39 ADDR:   0 MEM_OUT: 196418 ACC: 196418 LG_ALU: 3884 RG_ALU: 196418 SP: 3883 ZF: 0 |	load   var
  ADDR -> ALU_RG
  TICK: 4140 PC:  40 ADDR:   0 MEM_OUT: 196418 ACC: 196418 LG_ALU: 3884 RG_ALU:   8 SP: 3883 ZF: 0 |	store   var
  ALU_RES = ALU_RG
  TICK: 4141 PC:  40 ADDR:   0 MEM_OUT: 196418 ACC: 196418 LG_ALU: 3884 RG_ALU:   8 SP: 3883 ZF: 0 |	store   var
  WRITE ACC -> MEM[ALU]
  TICK: 4142 PC:  40 ADDR:   0 MEM_OUT: 196418 ACC: 196418 LG_ALU: 3884 RG_ALU:   8 SP: 3883 ZF: 0 |	store   var
  NUM -> ALU_RG
  TICK: 4143 PC:  41 ADDR:   0 MEM_OUT: 196418 ACC: 196418 LG_ALU: 3884 RG_ALU:   1 SP: 3883 ZF: 0 |	load   var
  ALU_RES = ALU_RG
  TICK: 4144 PC:  41 ADDR:   0 MEM_OUT: 196418 ACC: 196418 LG_ALU: 3884 RG_ALU:   1 SP: 3883 ZF: 0 |	load   var
  ALU_RES -> ACC
  TICK: 4145 PC:  41 ADDR:   0 MEM_OUT: 196418 ACC: 1 LG_ALU: 3884 RG_ALU:   1 SP: 3883 ZF: 0 |	load   var
  SP -> ALU_LG
  TICK: 4146 PC:  42 ADDR:   0 MEM_OUT: 196418 ACC: 1 LG_ALU: 3883 RG_ALU:   1 SP: 3883 ZF: 0 |	push   var
  ALU_RES = SP - 1
  TICK: 4147 PC:  42 ADDR:   0 MEM_OUT: 196418 ACC: 1 LG_ALU: 3883 RG_ALU:   1 SP: 3883 ZF: 0 |	push   var
  ALU_RES -> SP
  TICK: 4148 PC:  42 ADDR:   0 MEM_OUT: 196418 ACC: 1 LG_ALU: 3883 RG_ALU:   1 SP: 3882 ZF: 0 |	push   var
  WRITE ACC -> MEM[ALU]
  TICK: 4148 PC:  42 ADDR:   0 MEM_OUT: 196418 ACC: 1 LG_ALU: 3883 RG_ALU:   1 SP: 3882 ZF: 0 |	push   var
  ADDR -> ALU_RG
  TICK: 4149 PC:  43 ADDR:   0 MEM_OUT: 196418 ACC: 1 LG_ALU: 3883 RG_ALU:   5 SP: 3882 ZF: 0 |	load   +
  ALU_RES = ALU_RG
  TICK: 4150 PC:  43 ADDR:   0 MEM_OUT: 196418 ACC: 1 LG_ALU: 3883 RG_ALU:   5 SP: 3882 ZF: 0 |	load   +
  READ MEM[ALU]
  TICK: 4151 PC:  43 ADDR:   0 MEM_OUT: 121393 ACC: 1 LG_ALU: 3883 RG_ALU:   5 SP: 3882 ZF: 0 |	load   +
  MEM[ALU] -> ALU_RG
  TICK: 4152 PC:  43 ADDR:   0 MEM_OUT: 121393 ACC: 1 LG_ALU: 3883 RG_ALU: 121393 SP: 3882 ZF: 0 |	load   +
  ALU_RES = ALU_RG
  TICK: 4153 PC:  43 ADDR:   0 MEM_OUT: 121393 ACC: 1 LG_ALU: 3883 RG_ALU: 121393 SP: 3882 ZF: 0 |	load   +
  ALU_RES -> ACC
  TICK: 4154 PC:  43 ADDR:   0 MEM_OUT: 121393 ACC: 121393 LG_ALU: 3883 RG_ALU: 121393 SP: 3882 ZF: 0 |	load   +
  ADDR -> ALU_RG
  TICK: 4155 PC:  44 ADDR:   0 MEM_OUT: 121393 ACC: 121393 LG_ALU: 3883 RG_ALU:   6 SP: 3882 ZF: 0 |	add   +
  ALU_RES = ALU_RG
  TICK: 4156 PC:  44 ADDR:   0 MEM_OUT: 121393 ACC: 121393 LG_ALU: 3883 RG_ALU:   6 SP: 3882 ZF: 0 |	add   +
  READ MEM[ALU]
  TICK: 4157 PC:  44 ADDR:   0 MEM_OUT: 196418 ACC: 121393 LG_ALU: 3883 RG_ALU:   6 SP: 3882 ZF: 0 |	add   +
  MEM[ALU] -> ALU_RG
  TICK: 4158 PC:  44 ADDR:   0 MEM_OUT: 196418 ACC: 121393 LG_ALU: 3883 RG_ALU: 196418 SP: 3882 ZF: 0 |	add   +
  ACC -> ALU_LG
  TICK: 4158 PC:  44 ADDR:   0 MEM_OUT: 196418 ACC: 121393 LG_ALU: 121393 RG_ALU: 196418 SP: 3882 ZF: 0 |	add   +
  ALU_RES = ALU_LG + ALU_RG
  TICK: 4159 PC:  44 ADDR:   0 MEM_OUT: 196418 ACC: 121393 LG_ALU: 121393 RG_ALU: 196418 SP: 3882 ZF: 0 |	add   +
  ALU_RES -> ACC
  TICK: 4160 PC:  44 ADDR:   0 MEM_OUT: 196418 ACC: 317811 LG_ALU: 121393 RG_ALU: 196418 SP: 3882 ZF: 0 |	add   +
  SP -> ALU_LG
  TICK: 4161 PC:  45 ADDR:   0 MEM_OUT: 196418 ACC: 317811 LG_ALU: 3882 RG_ALU: 196418 SP: 3882 ZF: 0 |	push   +
  ALU_RES = SP - 1
  TICK: 4162 PC:  45 ADDR:   0 MEM_OUT: 196418 ACC: 317811 LG_ALU: 3882 RG_ALU: 196418 SP: 3882 ZF: 0 |	push   +
  ALU_RES -> SP
  TICK: 4163 PC:  45 ADDR:   0 MEM_OUT: 196418 ACC: 317811 LG_ALU: 3882 RG_ALU: 196418 SP: 3881 ZF: 0 |	push   +
  WRITE ACC -> MEM[ALU]
  TICK: 4163 PC:  45 ADDR:   0 MEM_OUT: 196418 ACC: 317811 LG_ALU: 3882 RG_ALU: 196418 SP: 3881 ZF: 0 |	push   +
  SP -> ALU_LG
  TICK: 4164 PC:  46 ADDR:   0 MEM_OUT: 196418 ACC: 317811 LG_ALU: 3881 RG_ALU: 196418 SP: 3881 ZF: 0 |	pop   var
  ALU_RES = ALU_LG
  TICK: 4165 PC:  46 ADDR:   0 MEM_OUT: 196418 ACC: 317811 LG_ALU: 3881 RG_ALU: 196418 SP: 3881 ZF: 0 |	pop   var
  READ MEM[ALU]
  TICK: 4166 PC:  46 ADDR:   0 MEM_OUT: 317811 ACC: 317811 LG_ALU: 3881 RG_ALU: 196418 SP: 3881 ZF: 0 |	pop   var
  ALU_RES = SP + 1
  TICK: 4167 PC:  46 ADDR:   0 MEM_OUT: 317811 ACC: 317811 LG_ALU: 3881 RG_ALU: 196418 SP: 3881 ZF: 0 |	pop   var
  ALU_RES -> SP
  TICK: 4168 PC:  46 ADDR:   0 MEM_OUT: 317811 ACC: 317811 LG_ALU: 3881 RG_ALU: 196418 SP: 3882 ZF: 0 |	pop   var
  MEM[ALU] -> ALU_RG
  TICK: 4168 PC:  46 ADDR:   0 MEM_OUT: 317811 ACC: 317811 LG_ALU: 3881 RG_ALU: 317811 SP: 3882 ZF: 0 |	pop   var
  ALU_RES = ALU_RG
  TICK: 4169 PC:  46 ADDR:   0 MEM_OUT: 317811 ACC: 317811 LG_ALU: 3881 RG_ALU: 317811 SP: 3882 ZF: 0 |	pop   var
  ALU_RES -> ACC
  TICK: 4170 PC:  46 ADDR:   0 MEM_OUT: 317811 ACC: 317811 LG_ALU: 3881 RG_ALU: 317811 SP: 3882 ZF: 0 |	pop   var
  ADDR -> ALU_RG
  TICK: 4171 PC:  47 ADDR:   0 MEM_OUT: 317811 ACC: 317811 LG_ALU: 3881 RG_ALU:   6 SP: 3882 ZF: 0 |	store   var
  ALU_RES = ALU_RG
  TICK: 4172 PC:  47 ADDR:   0 MEM_OUT: 317811 ACC: 317811 LG_ALU: 3881 RG_ALU:   6 SP: 3882 ZF: 0 |	store   var
  WRITE ACC -> MEM[ALU]
  TICK: 4173 PC:  47 ADDR:   0 MEM_OUT: 317811 ACC: 317811 LG_ALU: 3881 RG_ALU:   6 SP: 3882 ZF: 0 |	store   var
  NUM -> ALU_RG
  TICK: 4174 PC:  48 ADDR:   0 MEM_OUT: 317811 ACC: 317811 LG_ALU: 3881 RG_ALU:   1 SP: 3882 ZF: 0 |	load   var
  ALU_RES = ALU_RG
  TICK: 4175 PC:  48 ADDR:   0 MEM_OUT: 317811 ACC: 317811 LG_ALU: 3881 RG_ALU:   1 SP: 3882 ZF: 0 |	load   var
  ALU_RES -> ACC
  TICK: 4176 PC:  48 ADDR:   0 MEM_OUT: 317811 ACC: 1 LG_ALU: 3881 RG_ALU:   1 SP: 3882 ZF: 0 |	load   var
  SP -> ALU_LG
  TICK: 4177 PC:  49 ADDR:   0 MEM_OUT: 317811 ACC: 1 LG_ALU: 3882 RG_ALU:   1 SP: 3882 ZF: 0 |	push   var
  ALU_RES = SP - 1
  TICK: 4178 PC:  49 ADDR:   0 MEM_OUT: 317811 ACC: 1 LG_ALU: 3882 RG_ALU:   1 SP: 3882 ZF: 0 |	push   var
  ALU_RES -> SP
  TICK: 4179 PC:  49 ADDR:   0 MEM_OUT: 317811 ACC: 1 LG_ALU: 3882 RG_ALU:   1 SP: 3881 ZF: 0 |	push   var
  WRITE ACC -> MEM[ALU]
  TICK: 4179 PC:  49 ADDR:   0 MEM_OUT: 317811 ACC: 1 LG_ALU: 3882 RG_ALU:   1 SP: 3881 ZF: 0 |	push   var
  ADDR -> ALU_RG
  TICK: 4180 PC:  50 ADDR:   0 MEM_OUT: 317811 ACC: 1 LG_ALU: 3882 RG_ALU:   8 SP: 3881 ZF: 0 |	load   var
  ALU_RES = ALU_RG
  TICK: 4181 PC:  50 ADDR:   0 MEM_OUT: 317811 ACC: 1 LG_ALU: 3882 RG_ALU:   8 SP: 3881 ZF: 0 |	load   var
  READ MEM[ALU]
  TICK: 4182 PC:  50 ADDR:   0 MEM_OUT: 196418 ACC: 1 LG_ALU: 3882 RG_ALU:   8 SP: 3881 ZF: 0 |	load   var
  MEM[ALU] -> ALU_RG
  TICK: 4183 PC:  50 ADDR:   0 MEM_OUT: 196418 ACC: 1 LG_ALU: 3882 RG_ALU: 196418 SP: 3881 ZF: 0 |	load   var
  ALU_RES = ALU_RG
  TICK: 4184 PC:  50 ADDR:   0 MEM_OUT: 196418 ACC: 1 LG_ALU: 3882 RG_ALU: 196418 SP: 3881 ZF: 0 |	load   var
  ALU_RES -> ACC
  TICK: 4185 PC:  50 ADDR:   0 MEM_OUT: 196418 ACC: 196418 LG_ALU: 3882 RG_ALU: 196418 SP: 3881 ZF: 0 |	load   var
  ADDR -> ALU_RG
  TICK: 4186 PC:  51 ADDR:   0 MEM_OUT: 196418 ACC: 196418 LG_ALU: 3882 RG_ALU:   5 SP: 3881 ZF: 0 |	store   var
  ALU_RES = ALU_RG
  TICK: 4187 PC:  51 ADDR:   0 MEM_OUT: 196418 ACC: 196418 LG_ALU: 3882 RG_ALU:   5 SP: 3881 ZF: 0 |	store   var
  WRITE ACC -> MEM[ALU]
  TICK: 4188 PC:  51 ADDR:   0 MEM_OUT: 196418 ACC: 196418 LG_ALU: 3882 RG_ALU:   5 SP: 3881 ZF: 0 |	store   var
  NUM -> ALU_RG
  TICK: 4189 PC:  52 ADDR:   0 MEM_OUT: 196418 ACC: 196418 LG_ALU: 3882 RG_ALU:   1 SP: 3881 ZF: 0 |	load   var
  ALU_RES = ALU_RG
  TICK: 4190 PC:  52 ADDR:   0 MEM_OUT: 196418 ACC: 196418 LG_ALU: 3882 RG_ALU:   1 SP: 3881 ZF: 0 |	load   var
  ALU_RES -> ACC
  TICK: 4191 PC:  52 ADDR:   0 MEM_OUT: 196418 ACC: 1 LG_ALU: 3882 RG_ALU:   1 SP: 3881 ZF: 0 |	load   var
  SP -> ALU_LG
  TICK: 4192 PC:  53 ADDR:   0 MEM_OUT: 196418 ACC: 1 LG_ALU: 3881 RG_ALU:   1 SP: 3881 ZF: 0 |	push   var
  ALU_RES = SP - 1
  TICK: 4193 PC:  53 ADDR:   0 MEM_OUT: 196418 ACC: 1 LG_ALU: 3881 RG_ALU:   1 SP: 3881 ZF: 0 |	push   var
  ALU_RES -> SP
  TICK: 4194 PC:  53 ADDR:   0 MEM_OUT: 196418 ACC: 1 LG_ALU: 3881 RG_ALU:   1 SP: 3880 ZF: 0 |	push   var
  WRITE ACC -> MEM[ALU]
  TICK: 4194 PC:  53 ADDR:   0 MEM_OUT: 196418 ACC: 1 LG_ALU: 3881 RG_ALU:   1 SP: 3880 ZF: 0 |	push   var
  ADDR -> ALU_RG
  TICK: 4195 PC:  54 ADDR:   0 MEM_OUT: 196418 ACC: 1 LG_ALU: 3881 RG_ALU:   6 SP: 3880 ZF: 0 |	load   <
  ALU_RES = ALU_RG
  TICK: 4196 PC:  54 ADDR:   0 MEM_OUT: 196418 ACC: 1 LG_ALU: 3881 RG_ALU:   6 SP: 3880 ZF: 0 |	load   <
  READ MEM[ALU]
  TICK: 4197 PC:  54 ADDR:   0 MEM_OUT: 317811 ACC: 1 LG_ALU: 3881 RG_ALU:   6 SP: 3880 ZF: 0 |	load   <
  MEM[ALU] -> ALU_RG
  TICK: 4198 PC:  54 ADDR:   0 MEM_OUT: 317811 ACC: 1 LG_ALU: 3881 RG_ALU: 317811 SP: 3880 ZF: 0 |	load   <
  ALU_RES = ALU_RG
  TICK: 4199 PC:  54 ADDR:   0 MEM_OUT: 317811 ACC: 1 LG_ALU: 3881 RG_ALU: 317811 SP: 3880 ZF: 0 |	load   <
  ALU_RES -> ACC
  TICK: 4200 PC:  54 ADDR:   0 MEM_OUT: 317811 ACC: 317811 LG_ALU: 3881 RG_ALU: 317811 SP: 3880 ZF: 0 |	load   <
  ADDR -> ALU_RG
  TICK: 4201 PC:  55 ADDR:   0 MEM_OUT: 317811 ACC: 317811 LG_ALU: 3881 RG_ALU:   7 SP: 3880 ZF: 0 |	sub   <
  ALU_RES = ALU_RG
  TICK: 4202 PC:  55 ADDR:   0 MEM_OUT: 317811 ACC: 317811 LG_ALU: 3881 RG_ALU:   7 SP: 3880 ZF: 0 |	sub   <
  READ MEM[ALU]
  TICK: 4203 PC:  55 ADDR:   0 MEM_OUT: 400000 ACC: 317811 LG_ALU: 3881 RG_ALU:   7 SP: 3880 ZF: 0 |	sub   <
  MEM[ALU] -> ALU_RG
  TICK: 4204 PC:  55 ADDR:   0 MEM_OUT: 400000 ACC: 317811 LG_ALU: 3881 RG_ALU: 400000 SP: 3880 ZF: 0 |	sub   <
  ACC -> ALU_LG
  TICK: 4204 PC:  55 ADDR:   0 MEM_OUT: 400000 ACC: 317811 LG_ALU: 317811 RG_ALU: 400000 SP: 3880 ZF: 0 |	sub   <
  ALU_RES = ALU_LG + ALU_RG
  TICK: 4205 PC:  55 ADDR:   0 MEM_OUT: 400000 ACC: 317811 LG_ALU: 317811 RG_ALU: 400000 SP: 3880 ZF: 0 |	sub   <
  ALU_RES -> ACC
  TICK: 4206 PC:  55 ADDR:   0 MEM_OUT: 400000 ACC: -82189 LG_ALU: 317811 RG_ALU: 400000 SP: 3880 ZF: 0 |	sub   <
  PC + 1 -> PC
  NUM -> ALU_RG
  TICK: 4207 PC:  57 ADDR:   0 MEM_OUT: 400000 ACC: -82189 LG_ALU: 317811 RG_ALU:   1 SP: 3880 ZF: 0 |	load   <
  ALU_RES = ALU_RG
  TICK: 4208 PC:  57 ADDR:   0 MEM_OUT: 400000 ACC: -82189 LG_ALU: 317811 RG_ALU:   1 SP: 3880 ZF: 0 |	load   <
  ALU_RES -> ACC
  TICK: 4209 PC:  57 ADDR:   0 MEM_OUT: 400000 ACC: 1 LG_ALU: 317811 RG_ALU:   1 SP: 3880 ZF: 0 |	load   <
  ADDR -> PC
  SP -> ALU_LG
  TICK: 4211 PC:  60 ADDR:   0 MEM_OUT: 400000 ACC: 1 LG_ALU: 3880 RG_ALU:   1 SP: 3880 ZF: 0 |	push   <
  ALU_RES = SP - 1
  TICK: 4212 PC:  60 ADDR:   0 MEM_OUT: 400000 ACC: 1 LG_ALU: 3880 RG_ALU:   1 SP: 3880 ZF: 0 |	push   <
  ALU_RES -> SP
  TICK: 4213 PC:  60 ADDR:   0 MEM_OUT: 400000 ACC: 1 LG_ALU: 3880 RG_ALU:   1 SP: 3879 ZF: 0 |	push   <
  WRITE ACC -> MEM[ALU]
  TICK: 4213 PC:  60 ADDR:   0 MEM_OUT: 400000 ACC: 1 LG_ALU: 3880 RG_ALU:   1 SP: 3879 ZF: 0 |	push   <
  SP -> ALU_LG
  TICK: 4214 PC:  61 ADDR:   0 MEM_OUT: 400000 ACC: 1 LG_ALU: 3879 RG_ALU:   1 SP: 3879 ZF: 0 |	pop
  ALU_RES = ALU_LG
  TICK: 4215 PC:  61 ADDR:   0 MEM_OUT: 400000 ACC: 1 LG_ALU: 3879 RG_ALU:   1 SP: 3879 ZF: 0 |	pop
  READ MEM[ALU]
  TICK: 4216 PC:  61 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3879 RG_ALU:   1 SP: 3879 ZF: 0 |	pop
  ALU_RES = SP + 1
  TICK: 4217 PC:  61 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3879 RG_ALU:   1 SP: 3879 ZF: 0 |	pop
  ALU_RES -> SP
  TICK: 4218 PC:  61 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3879 RG_ALU:   1 SP: 3880 ZF: 0 |	pop
  MEM[ALU] -> ALU_RG
  TICK: 4218 PC:  61 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3879 RG_ALU:   1 SP: 3880 ZF: 0 |	pop
  ALU_RES = ALU_RG
  TICK: 4219 PC:  61 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3879 RG_ALU:   1 SP: 3880 ZF: 0 |	pop
  ALU_RES -> ACC
  TICK: 4220 PC:  61 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3879 RG_ALU:   1 SP: 3880 ZF: 0 |	pop
  ADDR -> PC
  ADDR -> PC
  ADDR -> ALU_RG
  TICK: 4223 PC:  24 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3879 RG_ALU:   6 SP: 3880 ZF: 0 |	load
  ALU_RES = ALU_RG
  TICK: 4224 PC:  24 ADDR:   0 MEM_OUT: 1 ACC: 1 LG_ALU: 3879 RG_ALU:   6 SP: 3880 ZF: 0 |	load
  READ MEM[ALU]
  TICK: 4225 PC:  24 ADDR:   0 MEM_OUT: 317811 ACC: 1 LG_ALU: 3879 RG_ALU:   6 SP: 3880 ZF: 0 |	load
  MEM[ALU] -> ALU_RG
  TICK: 4226 PC:  24 ADDR:   0 MEM_OUT: 317811 ACC: 1 LG_ALU: 3879 RG_ALU: 317811 SP: 3880 ZF: 0 |	load
  ALU_RES = ALU_RG
  TICK: 4227 PC:  24 ADDR:   0 MEM_OUT: 317811 ACC: 1 LG_ALU: 3879 RG_ALU: 317811 SP: 3880 ZF: 0 |	load
  ALU_RES -> ACC
  TICK: 4228 PC:  24 ADDR:   0 MEM_OUT: 317811 ACC: 317811 LG_ALU: 3879 RG_ALU: 317811 SP: 3880 ZF: 0 |	load
  NUM -> ALU_RG
  TICK: 4229 PC:  25 ADDR:   0 MEM_OUT: 317811 ACC: 317811 LG_ALU: 3879 RG_ALU:   2 SP: 3880 ZF: 0 |	mod
  ACC -> ALU_LG
  TICK: 4229 PC:  25 ADDR:   0 MEM_OUT: 317811 ACC: 317811 LG_ALU: 317811 RG_ALU:   2 SP: 3880 ZF: 0 |	mod
  ALU_RES = ALU_LG % ALU_RG
  TICK: 4230 PC:  25 ADDR:   0 MEM_OUT: 317811 ACC: 317811 LG_ALU: 317811 RG_ALU:   2 SP: 3880 ZF: 0 |	mod
  ALU_RES -> ACC
  TICK: 4231 PC:  25 ADDR:   0 MEM_OUT: 317811 ACC: 1 LG_ALU: 317811 RG_ALU:   2 SP: 3880 ZF: 0 |	mod
  SP -> ALU_LG
  TICK: 4232 PC:  26 ADDR:   0 MEM_OUT: 317811 ACC: 1 LG_ALU: 3880 RG_ALU:   2 SP: 3880 ZF: 0 |	push
  ALU_RES = SP - 1
  TICK: 4233 PC:  26 ADDR:   0 MEM_OUT: 317811 ACC: 1 LG_ALU: 3880 RG_ALU:   2 SP: 3880 ZF: 0 |	push
  ALU_RES -> SP
  TICK: 4234 PC:  26 ADDR:   0 MEM_OUT: 317811 ACC: 1 LG_ALU: 3880 RG_ALU:   2 SP: 3879 ZF: 0 |	push
  WRITE ACC -> MEM[ALU]
  TICK: 4234 PC:  26 ADDR:   0 MEM_OUT: 317811 ACC: 1 LG_ALU: 3880 RG_ALU:   2 SP: 3879 ZF: 0 |	push
  NUM -> ALU_RG
  TICK: 4235 PC:  27 ADDR:   0 MEM_OUT: 317811 ACC: 1 LG_ALU: 3880 RG_ALU:   0 SP: 3879 ZF: 0 |	load   =
  ALU_RES = ALU_RG
  TICK: 4236 PC:  27 ADDR:   0 MEM_OUT: 317811 ACC: 1 LG_ALU: 3880 RG_ALU:   0 SP: 3879 ZF: 1 |	load   =
  ALU_RES -> ACC
  TICK: 4237 PC:  27 ADDR:   0 MEM_OUT: 317811 ACC: 0 LG_ALU: 3880 RG_ALU:   0 SP: 3879 ZF: 1 |	load   =
  SP -> ALU_LG
  TICK: 4238 PC:  28 ADDR:   0 MEM_OUT: 317811 ACC: 0 LG_ALU: 3879 RG_ALU:   0 SP: 3879 ZF: 1 |	sub   =
  ALU_RES = ALU_LG
  TICK: 4239 PC:  28 ADDR:   0 MEM_OUT: 317811 ACC: 0 LG_ALU: 3879 RG_ALU:   0 SP: 3879 ZF: 0 |	sub   =
  READ MEM[ALU]
  TICK: 4240 PC:  28 ADDR:   0 MEM_OUT: 1 ACC: 0 LG_ALU: 3879 RG_ALU:   0 SP: 3879 ZF: 0 |	sub   =
  MEM[ALU] -> ALU_RG
  TICK: 4241 PC:  28 ADDR:   0 MEM_OUT: 1 ACC: 0 LG_ALU: 3879 RG_ALU:   1 SP: 3879 ZF: 0 |	sub   =
  ALU_RES = SP + 1
  TICK: 4242 PC:  28 ADDR:   0 MEM_OUT: 1 ACC: 0 LG_ALU: 3879 RG_ALU:   1 SP: 3879 ZF: 0 |	sub   =
  ALU_RES -> SP
  TICK: 4243 PC:  28 ADDR:   0 MEM_OUT: 1 ACC: 0 LG_ALU: 3879 RG_ALU:   1 SP: 3880 ZF: 0 |	sub   =
  ACC -> ALU_LG
  TICK: 4243 PC:  28 ADDR:   0 MEM_OUT: 1 ACC: 0 LG_ALU:   0 RG_ALU:   1 SP: 3880 ZF: 0 |	sub   =
  ALU_RES = ALU_LG + ALU_RG
  TICK: 4244 PC:  28 ADDR:   0 MEM_OUT: 1 ACC: 0 LG_ALU:   0 RG_ALU:   1 SP: 3880 ZF: 0 |	sub   =
  ALU_RES -> ACC
  TICK: 4245 PC:  28 ADDR:   0 MEM_OUT: 1 ACC: -1 LG_ALU:   0 RG_ALU:   1 SP: 3880 ZF: 0 |	sub   =
  ADDR -> PC
  NUM -> ALU_RG
  TICK: 4247 PC:  32 ADDR:   0 MEM_OUT: 1 ACC: -1 LG_ALU:   0 RG_ALU:   0 SP: 3880 ZF: 0 |	load   =
  ALU_RES = ALU_RG
  TICK: 4248 PC:  32 ADDR:   0 MEM_OUT: 1 ACC: -1 LG_ALU:   0 RG_ALU:   0 SP: 3880 ZF: 1 |	load   =
  ALU_RES -> ACC
  TICK: 4249 PC:  32 ADDR:   0 MEM_OUT: 1 ACC: 0 LG_ALU:   0 RG_ALU:   0 SP: 3880 ZF: 1 |	load   =
  SP -> ALU_LG
  TICK: 4250 PC:  33 ADDR:   0 MEM_OUT: 1 ACC: 0 LG_ALU: 3880 RG_ALU:   0 SP: 3880 ZF: 1 |	push   =
  ALU_RES = SP - 1
  TICK: 4251 PC:  33 ADDR:   0 MEM_OUT: 1 ACC: 0 LG_ALU: 3880 RG_ALU:   0 SP: 3880 ZF: 0 |	push   =
  ALU_RES -> SP
  TICK: 4252 PC:  33 ADDR:   0 MEM_OUT: 1 ACC: 0 LG_ALU: 3880 RG_ALU:   0 SP: 3879 ZF: 0 |	push   =
  WRITE ACC -> MEM[ALU]
  TICK: 4252 PC:  33 ADDR:   0 MEM_OUT: 1 ACC: 0 LG_ALU: 3880 RG_ALU:   0 SP: 3879 ZF: 0 |	push   =
  SP -> ALU_LG
  TICK: 4253 PC:  34 ADDR:   0 MEM_OUT: 1 ACC: 0 LG_ALU: 3879 RG_ALU:   0 SP: 3879 ZF: 0 |	pop   if
  ALU_RES = ALU_LG
  TICK: 4254 PC:  34 ADDR:   0 MEM_OUT: 1 ACC: 0 LG_ALU: 3879 RG_ALU:   0 SP: 3879 ZF: 0 |	pop   if
  READ MEM[ALU]
  TICK: 4255 PC:  34 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3879 RG_ALU:   0 SP: 3879 ZF: 0 |	pop   if
  ALU_RES = SP + 1
  TICK: 4256 PC:  34 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3879 RG_ALU:   0 SP: 3879 ZF: 0 |	pop   if
  ALU_RES -> SP
  TICK: 4257 PC:  34 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3879 RG_ALU:   0 SP: 3880 ZF: 0 |	pop   if
  MEM[ALU] -> ALU_RG
  TICK: 4257 PC:  34 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3879 RG_ALU:   0 SP: 3880 ZF: 0 |	pop   if
  ALU_RES = ALU_RG
  TICK: 4258 PC:  34 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3879 RG_ALU:   0 SP: 3880 ZF: 1 |	pop   if
  ALU_RES -> ACC
  TICK: 4259 PC:  34 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3879 RG_ALU:   0 SP: 3880 ZF: 1 |	pop   if
  PC + 1 -> PC
  ADDR -> PC
  NUM -> ALU_RG
  TICK: 4261 PC:  20 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3879 RG_ALU:   0 SP: 3880 ZF: 1 |	load   +
  ALU_RES = ALU_RG
  TICK: 4262 PC:  20 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3879 RG_ALU:   0 SP: 3880 ZF: 1 |	load   +
  ALU_RES -> ACC
  TICK: 4263 PC:  20 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3879 RG_ALU:   0 SP: 3880 ZF: 1 |	load   +
  NUM -> ALU_RG
  TICK: 4264 PC:  21 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3879 RG_ALU:   0 SP: 3880 ZF: 1 |	add   +
  ACC -> ALU_LG
  TICK: 4264 PC:  21 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU:   0 RG_ALU:   0 SP: 3880 ZF: 1 |	add   +
  ALU_RES = ALU_LG + ALU_RG
  TICK: 4265 PC:  21 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU:   0 RG_ALU:   0 SP: 3880 ZF: 1 |	add   +
  ALU_RES -> ACC
  TICK: 4266 PC:  21 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU:   0 RG_ALU:   0 SP: 3880 ZF: 1 |	add   +
  SP -> ALU_LG
  TICK: 4267 PC:  22 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3880 RG_ALU:   0 SP: 3880 ZF: 1 |	push   +
  ALU_RES = SP - 1
  TICK: 4268 PC:  22 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3880 RG_ALU:   0 SP: 3880 ZF: 0 |	push   +
  ALU_RES -> SP
  TICK: 4269 PC:  22 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3880 RG_ALU:   0 SP: 3879 ZF: 0 |	push   +
  WRITE ACC -> MEM[ALU]
  TICK: 4269 PC:  22 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3880 RG_ALU:   0 SP: 3879 ZF: 0 |	push   +
  ADDR -> PC
  SP -> ALU_LG
  TICK: 4271 PC:  37 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3879 RG_ALU:   0 SP: 3879 ZF: 0 |	pop   if
  ALU_RES = ALU_LG
  TICK: 4272 PC:  37 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3879 RG_ALU:   0 SP: 3879 ZF: 0 |	pop   if
  READ MEM[ALU]
  TICK: 4273 PC:  37 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3879 RG_ALU:   0 SP: 3879 ZF: 0 |	pop   if
  ALU_RES = SP + 1
  TICK: 4274 PC:  37 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3879 RG_ALU:   0 SP: 3879 ZF: 0 |	pop   if
  ALU_RES -> SP
  TICK: 4275 PC:  37 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3879 RG_ALU:   0 SP: 3880 ZF: 0 |	pop   if
  MEM[ALU] -> ALU_RG
  TICK: 4275 PC:  37 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3879 RG_ALU:   0 SP: 3880 ZF: 0 |	pop   if
  ALU_RES = ALU_RG
  TICK: 4276 PC:  37 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3879 RG_ALU:   0 SP: 3880 ZF: 1 |	pop   if
  ALU_RES -> ACC
  TICK: 4277 PC:  37 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3879 RG_ALU:   0 SP: 3880 ZF: 1 |	pop   if
  SP -> ALU_LG
  TICK: 4278 PC:  38 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3880 RG_ALU:   0 SP: 3880 ZF: 1 |	push   if
  ALU_RES = SP - 1
  TICK: 4279 PC:  38 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3880 RG_ALU:   0 SP: 3880 ZF: 0 |	push   if
  ALU_RES -> SP
  TICK: 4280 PC:  38 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3880 RG_ALU:   0 SP: 3879 ZF: 0 |	push   if
  WRITE ACC -> MEM[ALU]
  TICK: 4280 PC:  38 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3880 RG_ALU:   0 SP: 3879 ZF: 0 |	push   if
  ADDR -> ALU_RG
  TICK: 4281 PC:  39 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3880 RG_ALU:   6 SP: 3879 ZF: 0 |	load   var
  ALU_RES = ALU_RG
  TICK: 4282 PC:  39 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3880 RG_ALU:   6 SP: 3879 ZF: 0 |	load   var
  READ MEM[ALU]
  TICK: 4283 PC:  39 ADDR:   0 MEM_OUT: 317811 ACC: 0 LG_ALU: 3880 RG_ALU:   6 SP: 3879 ZF: 0 |	load   var
  MEM[ALU] -> ALU_RG
  TICK: 4284 PC:  39 ADDR:   0 MEM_OUT: 317811 ACC: 0 LG_ALU: 3880 RG_ALU: 317811 SP: 3879 ZF: 0 |	load   var
  ALU_RES = ALU_RG
  TICK: 4285 PC:  39 ADDR:   0 MEM_OUT: 317811 ACC: 0 LG_ALU: 3880 RG_ALU: 317811 SP: 3879 ZF: 0 |	load   var
  ALU_RES -> ACC
  TICK: 4286 PC:  39 ADDR:   0 MEM_OUT: 317811 ACC: 317811 LG_ALU: 3880 RG_ALU: 317811 SP: 3879 ZF: 0 |	load   var
  ADDR -> ALU_RG
  TICK: 4287 PC:  40 ADDR:   0 MEM_OUT: 317811 ACC: 317811 LG_ALU: 3880 RG_ALU:   8 SP: 3879 ZF: 0 |	store   var
  ALU_RES = ALU_RG
  TICK: 4288 PC:  40 ADDR:   0 MEM_OUT: 317811 ACC: 317811 LG_ALU: 3880 RG_ALU:   8 SP: 3879 ZF: 0 |	store   var
  WRITE ACC -> MEM[ALU]
  TICK: 4289 PC:  40 ADDR:   0 MEM_OUT: 317811 ACC: 317811 LG_ALU: 3880 RG_ALU:   8 SP: 3879 ZF: 0 |	store   var
  NUM -> ALU_RG
  TICK: 4290 PC:  41 ADDR:   0 MEM_OUT: 317811 ACC: 317811 LG_ALU: 3880 RG_ALU:   1 SP: 3879 ZF: 0 |	load   var
  ALU_RES = ALU_RG
  TICK: 4291 PC:  41 ADDR:   0 MEM_OUT: 317811 ACC: 317811 LG_ALU: 3880 RG_ALU:   1 SP: 3879 ZF: 0 |	load   var
  ALU_RES -> ACC
  TICK: 4292 PC:  41 ADDR:   0 MEM_OUT: 317811 ACC: 1 LG_ALU: 3880 RG_ALU:   1 SP: 3879 ZF: 0 |	load   var
  SP -> ALU_LG
  TICK: 4293 PC:  42 ADDR:   0 MEM_OUT: 317811 ACC: 1 LG_ALU: 3879 RG_ALU:   1 SP: 3879 ZF: 0 |	push   var
  ALU_RES = SP - 1
  TICK: 4294 PC:  42 ADDR:   0 MEM_OUT: 317811 ACC: 1 LG_ALU: 3879 RG_ALU:   1 SP: 3879 ZF: 0 |	push   var
  ALU_RES -> SP
  TICK: 4295 PC:  42 ADDR:   0 MEM_OUT: 317811 ACC: 1 LG_ALU: 3879 RG_ALU:   1 SP: 3878 ZF: 0 |	push   var
  WRITE ACC -> MEM[ALU]
  TICK: 4295 PC:  42 ADDR:   0 MEM_OUT: 317811 ACC: 1 LG_ALU: 3879 RG_ALU:   1 SP: 3878 ZF: 0 |	push   var
  ADDR -> ALU_RG
  TICK: 4296 PC:  43 ADDR:   0 MEM_OUT: 317811 ACC: 1 LG_ALU: 3879 RG_ALU:   5 SP: 3878 ZF: 0 |	load   +
  ALU_RES = ALU_RG
  TICK: 4297 PC:  43 ADDR:   0 MEM_OUT: 317811 ACC: 1 LG_ALU: 3879 RG_ALU:   5 SP: 3878 ZF: 0 |	load   +
  READ MEM[ALU]
  TICK: 4298 PC:  43 ADDR:   0 MEM_OUT: 196418 ACC: 1 LG_ALU: 3879 RG_ALU:   5 SP: 3878 ZF: 0 |	load   +
  MEM[ALU] -> ALU_RG
  TICK: 4299 PC:  43 ADDR:   0 MEM_OUT: 196418 ACC: 1 LG_ALU: 3879 RG_ALU: 196418 SP: 3878 ZF: 0 |	load   +
  ALU_RES = ALU_RG
  TICK: 4300 PC:  43 ADDR:   0 MEM_OUT: 196418 ACC: 1 LG_ALU: 3879 RG_ALU: 196418 SP: 3878 ZF: 0 |	load   +
  ALU_RES -> ACC
  TICK: 4301 PC:  43 ADDR:   0 MEM_OUT: 196418 ACC: 196418 LG_ALU: 3879 RG_ALU: 196418 SP: 3878 ZF: 0 |	load   +
  ADDR -> ALU_RG
  TICK: 4302 PC:  44 ADDR:   0 MEM_OUT: 196418 ACC: 196418 LG_ALU: 3879 RG_ALU:   6 SP: 3878 ZF: 0 |	add   +
  ALU_RES = ALU_RG
  TICK: 4303 PC:  44 ADDR:   0 MEM_OUT: 196418 ACC: 196418 LG_ALU: 3879 RG_ALU:   6 SP: 3878 ZF: 0 |	add   +
  READ MEM[ALU]
  TICK: 4304 PC:  44 ADDR:   0 MEM_OUT: 317811 ACC: 196418 LG_ALU: 3879 RG_ALU:   6 SP: 3878 ZF: 0 |	add   +
  MEM[ALU] -> ALU_RG
  TICK: 4305 PC:  44 ADDR:   0 MEM_OUT: 317811 ACC: 196418 LG_ALU: 3879 RG_ALU: 317811 SP: 3878 ZF: 0 |	add   +
  ACC -> ALU_LG
  TICK: 4305 PC:  44 ADDR:   0 MEM_OUT: 317811 ACC: 196418 LG_ALU: 196418 RG_ALU: 317811 SP: 3878 ZF: 0 |	add   +
  ALU_RES = ALU_LG + ALU_RG
  TICK: 4306 PC:  44 ADDR:   0 MEM_OUT: 317811 ACC: 196418 LG_ALU: 196418 RG_ALU: 317811 SP: 3878 ZF: 0 |	add   +
  ALU_RES -> ACC
  TICK: 4307 PC:  44 ADDR:   0 MEM_OUT: 317811 ACC: 514229 LG_ALU: 196418 RG_ALU: 317811 SP: 3878 ZF: 0 |	add   +
  SP -> ALU_LG
  TICK: 4308 PC:  45 ADDR:   0 MEM_OUT: 317811 ACC: 514229 LG_ALU: 3878 RG_ALU: 317811 SP: 3878 ZF: 0 |	push   +
  ALU_RES = SP - 1
  TICK: 4309 PC:  45 ADDR:   0 MEM_OUT: 317811 ACC: 514229 LG_ALU: 3878 RG_ALU: 317811 SP: 3878 ZF: 0 |	push   +
  ALU_RES -> SP
  TICK: 4310 PC:  45 ADDR:   0 MEM_OUT: 317811 ACC: 514229 LG_ALU: 3878 RG_ALU: 317811 SP: 3877 ZF: 0 |	push   +
  WRITE ACC -> MEM[ALU]
  TICK: 4310 PC:  45 ADDR:   0 MEM_OUT: 317811 ACC: 514229 LG_ALU: 3878 RG_ALU: 317811 SP: 3877 ZF: 0 |	push   +
  SP -> ALU_LG
  TICK: 4311 PC:  46 ADDR:   0 MEM_OUT: 317811 ACC: 514229 LG_ALU: 3877 RG_ALU: 317811 SP: 3877 ZF: 0 |	pop   var
  ALU_RES = ALU_LG
  TICK: 4312 PC:  46 ADDR:   0 MEM_OUT: 317811 ACC: 514229 LG_ALU: 3877 RG_ALU: 317811 SP: 3877 ZF: 0 |	pop   var
  READ MEM[ALU]
  TICK: 4313 PC:  46 ADDR:   0 MEM_OUT: 514229 ACC: 514229 LG_ALU: 3877 RG_ALU: 317811 SP: 3877 ZF: 0 |	pop   var
  ALU_RES = SP + 1
  TICK: 4314 PC:  46 ADDR:   0 MEM_OUT: 514229 ACC: 514229 LG_ALU: 3877 RG_ALU: 317811 SP: 3877 ZF: 0 |	pop   var
  ALU_RES -> SP
  TICK: 4315 PC:  46 ADDR:   0 MEM_OUT: 514229 ACC: 514229 LG_ALU: 3877 RG_ALU: 317811 SP: 3878 ZF: 0 |	pop   var
  MEM[ALU] -> ALU_RG
  TICK: 4315 PC:  46 ADDR:   0 MEM_OUT: 514229 ACC: 514229 LG_ALU: 3877 RG_ALU: 514229 SP: 3878 ZF: 0 |	pop   var
  ALU_RES = ALU_RG
  TICK: 4316 PC:  46 ADDR:   0 MEM_OUT: 514229 ACC: 514229 LG_ALU: 3877 RG_ALU: 514229 SP: 3878 ZF: 0 |	pop   var
  ALU_RES -> ACC
  TICK: 4317 PC:  46 ADDR:   0 MEM_OUT: 514229 ACC: 514229 LG_ALU: 3877 RG_ALU: 514229 SP: 3878 ZF: 0 |	pop   var
  ADDR -> ALU_RG
  TICK: 4318 PC:  47 ADDR:   0 MEM_OUT: 514229 ACC: 514229 LG_ALU: 3877 RG_ALU:   6 SP: 3878 ZF: 0 |	store   var
  ALU_RES = ALU_RG
  TICK: 4319 PC:  47 ADDR:   0 MEM_OUT: 514229 ACC: 514229 LG_ALU: 3877 RG_ALU:   6 SP: 3878 ZF: 0 |	store   var
  WRITE ACC -> MEM[ALU]
  TICK: 4320 PC:  47 ADDR:   0 MEM_OUT: 514229 ACC: 514229 LG_ALU: 3877 RG_ALU:   6 SP: 3878 ZF: 0 |	store   var
  NUM -> ALU_RG
  TICK: 4321 PC:  48 ADDR:   0 MEM_OUT: 514229 ACC: 514229 LG_ALU: 3877 RG_ALU:   1 SP: 3878 ZF: 0 |	load   var
  ALU_RES = ALU_RG
  TICK: 4322 PC:  48 ADDR:   0 MEM_OUT: 514229 ACC: 514229 LG_ALU: 3877 RG_ALU:   1 SP: 3878 ZF: 0 |	load   var
  ALU_RES -> ACC
  TICK: 4323 PC:  48 ADDR:   0 MEM_OUT: 514229 ACC: 1 LG_ALU: 3877 RG_ALU:   1 SP: 3878 ZF: 0 |	load   var
  SP -> ALU_LG
  TICK: 4324 PC:  49 ADDR:   0 MEM_OUT: 514229 ACC: 1 LG_ALU: 3878 RG_ALU:   1 SP: 3878 ZF: 0 |	push   var
  ALU_RES = SP - 1
  TICK: 4325 PC:  49 ADDR:   0 MEM_OUT: 514229 ACC: 1 LG_ALU: 3878 RG_ALU:   1 SP: 3878 ZF: 0 |	push   var
  ALU_RES -> SP
  TICK: 4326 PC:  49 ADDR:   0 MEM_OUT: 514229 ACC: 1 LG_ALU: 3878 RG_ALU:   1 SP: 3877 ZF: 0 |	push   var
  WRITE ACC -> MEM[ALU]
  TICK: 4326 PC:  49 ADDR:   0 MEM_OUT: 514229 ACC: 1 LG_ALU: 3878 RG_ALU:   1 SP: 3877 ZF: 0 |	push   var
  ADDR -> ALU_RG
  TICK: 4327 PC:  50 ADDR:   0 MEM_OUT: 514229 ACC: 1 LG_ALU: 3878 RG_ALU:   8 SP: 3877 ZF: 0 |	load   var
  ALU_RES = ALU_RG
  TICK: 4328 PC:  50 ADDR:   0 MEM_OUT: 514229 ACC: 1 LG_ALU: 3878 RG_ALU:   8 SP: 3877 ZF: 0 |	load   var
  READ MEM[ALU]
  TICK: 4329 PC:  50 ADDR:   0 MEM_OUT: 317811 ACC: 1 LG_ALU: 3878 RG_ALU:   8 SP: 3877 ZF: 0 |	load   var
  MEM[ALU] -> ALU_RG
  TICK: 4330 PC:  50 ADDR:   0 MEM_OUT: 317811 ACC: 1 LG_ALU: 3878 RG_ALU: 317811 SP: 3877 ZF: 0 |	load   var
  ALU_RES = ALU_RG
  TICK: 4331 PC:  50 ADDR:   0 MEM_OUT: 317811 ACC: 1 LG_ALU: 3878 RG_ALU: 317811 SP: 3877 ZF: 0 |	load   var
  ALU_RES -> ACC
  TICK: 4332 PC:  50 ADDR:   0 MEM_OUT: 317811 ACC: 317811 LG_ALU: 3878 RG_ALU: 317811 SP: 3877 ZF: 0 |	load   var
  ADDR -> ALU_RG
  TICK: 4333 PC:  51 ADDR:   0 MEM_OUT: 317811 ACC: 317811 LG_ALU: 3878 RG_ALU:   5 SP: 3877 ZF: 0 |	store   var
  ALU_RES = ALU_RG
  TICK: 4334 PC:  51 ADDR:   0 MEM_OUT: 317811 ACC: 317811 LG_ALU: 3878 RG_ALU:   5 SP: 3877 ZF: 0 |	store   var
  WRITE ACC -> MEM[ALU]
  TICK: 4335 PC:  51 ADDR:   0 MEM_OUT: 317811 ACC: 317811 LG_ALU: 3878 RG_ALU:   5 SP: 3877 ZF: 0 |	store   var
  NUM -> ALU_RG
  TICK: 4336 PC:  52 ADDR:   0 MEM_OUT: 317811 ACC: 317811 LG_ALU: 3878 RG_ALU:   1 SP: 3877 ZF: 0 |	load   var
  ALU_RES = ALU_RG
  TICK: 4337 PC:  52 ADDR:   0 MEM_OUT: 317811 ACC: 317811 LG_ALU: 3878 RG_ALU:   1 SP: 3877 ZF: 0 |	load   var
  ALU_RES -> ACC
  TICK: 4338 PC:  52 ADDR:   0 MEM_OUT: 317811 ACC: 1 LG_ALU: 3878 RG_ALU:   1 SP: 3877 ZF: 0 |	load   var
  SP -> ALU_LG
  TICK: 4339 PC:  53 ADDR:   0 MEM_OUT: 317811 ACC: 1 LG_ALU: 3877 RG_ALU:   1 SP: 3877 ZF: 0 |	push   var
  ALU_RES = SP - 1
  TICK: 4340 PC:  53 ADDR:   0 MEM_OUT: 317811 ACC: 1 LG_ALU: 3877 RG_ALU:   1 SP: 3877 ZF: 0 |	push   var
  ALU_RES -> SP
  TICK: 4341 PC:  53 ADDR:   0 MEM_OUT: 317811 ACC: 1 LG_ALU: 3877 RG_ALU:   1 SP: 3876 ZF: 0 |	push   var
  WRITE ACC -> MEM[ALU]
  TICK: 4341 PC:  53 ADDR:   0 MEM_OUT: 317811 ACC: 1 LG_ALU: 3877 RG_ALU:   1 SP: 3876 ZF: 0 |	push   var
  ADDR -> ALU_RG
  TICK: 4342 PC:  54 ADDR:   0 MEM_OUT: 317811 ACC: 1 LG_ALU: 3877 RG_ALU:   6 SP: 3876 ZF: 0 |	load   <
  ALU_RES = ALU_RG
  TICK: 4343 PC:  54 ADDR:   0 MEM_OUT: 317811 ACC: 1 LG_ALU: 3877 RG_ALU:   6 SP: 3876 ZF: 0 |	load   <
  READ MEM[ALU]
  TICK: 4344 PC:  54 ADDR:   0 MEM_OUT: 514229 ACC: 1 LG_ALU: 3877 RG_ALU:   6 SP: 3876 ZF: 0 |	load   <
  MEM[ALU] -> ALU_RG
  TICK: 4345 PC:  54 ADDR:   0 MEM_OUT: 514229 ACC: 1 LG_ALU: 3877 RG_ALU: 514229 SP: 3876 ZF: 0 |	load   <
  ALU_RES = ALU_RG
  TICK: 4346 PC:  54 ADDR:   0 MEM_OUT: 514229 ACC: 1 LG_ALU: 3877 RG_ALU: 514229 SP: 3876 ZF: 0 |	load   <
  ALU_RES -> ACC
  TICK: 4347 PC:  54 ADDR:   0 MEM_OUT: 514229 ACC: 514229 LG_ALU: 3877 RG_ALU: 514229 SP: 3876 ZF: 0 |	load   <
  ADDR -> ALU_RG
  TICK: 4348 PC:  55 ADDR:   0 MEM_OUT: 514229 ACC: 514229 LG_ALU: 3877 RG_ALU:   7 SP: 3876 ZF: 0 |	sub   <
  ALU_RES = ALU_RG
  TICK: 4349 PC:  55 ADDR:   0 MEM_OUT: 514229 ACC: 514229 LG_ALU: 3877 RG_ALU:   7 SP: 3876 ZF: 0 |	sub   <
  READ MEM[ALU]
  TICK: 4350 PC:  55 ADDR:   0 MEM_OUT: 400000 ACC: 514229 LG_ALU: 3877 RG_ALU:   7 SP: 3876 ZF: 0 |	sub   <
  MEM[ALU] -> ALU_RG
  TICK: 4351 PC:  55 ADDR:   0 MEM_OUT: 400000 ACC: 514229 LG_ALU: 3877 RG_ALU: 400000 SP: 3876 ZF: 0 |	sub   <
  ACC -> ALU_LG
  TICK: 4351 PC:  55 ADDR:   0 MEM_OUT: 400000 ACC: 514229 LG_ALU: 514229 RG_ALU: 400000 SP: 3876 ZF: 0 |	sub   <
  ALU_RES = ALU_LG + ALU_RG
  TICK: 4352 PC:  55 ADDR:   0 MEM_OUT: 400000 ACC: 514229 LG_ALU: 514229 RG_ALU: 400000 SP: 3876 ZF: 0 |	sub   <
  ALU_RES -> ACC
  TICK: 4353 PC:  55 ADDR:   0 MEM_OUT: 400000 ACC: 114229 LG_ALU: 514229 RG_ALU: 400000 SP: 3876 ZF: 0 |	sub   <
  ADDR -> PC
  NUM -> ALU_RG
  TICK: 4355 PC:  59 ADDR:   0 MEM_OUT: 400000 ACC: 114229 LG_ALU: 514229 RG_ALU:   0 SP: 3876 ZF: 0 |	load   <
  ALU_RES = ALU_RG
  TICK: 4356 PC:  59 ADDR:   0 MEM_OUT: 400000 ACC: 114229 LG_ALU: 514229 RG_ALU:   0 SP: 3876 ZF: 1 |	load   <
  ALU_RES -> ACC
  TICK: 4357 PC:  59 ADDR:   0 MEM_OUT: 400000 ACC: 0 LG_ALU: 514229 RG_ALU:   0 SP: 3876 ZF: 1 |	load   <
  SP -> ALU_LG
  TICK: 4358 PC:  60 ADDR:   0 MEM_OUT: 400000 ACC: 0 LG_ALU: 3876 RG_ALU:   0 SP: 3876 ZF: 1 |	push   <
  ALU_RES = SP - 1
  TICK: 4359 PC:  60 ADDR:   0 MEM_OUT: 400000 ACC: 0 LG_ALU: 3876 RG_ALU:   0 SP: 3876 ZF: 0 |	push   <
  ALU_RES -> SP
  TICK: 4360 PC:  60 ADDR:   0 MEM_OUT: 400000 ACC: 0 LG_ALU: 3876 RG_ALU:   0 SP: 3875 ZF: 0 |	push   <
  WRITE ACC -> MEM[ALU]
  TICK: 4360 PC:  60 ADDR:   0 MEM_OUT: 400000 ACC: 0 LG_ALU: 3876 RG_ALU:   0 SP: 3875 ZF: 0 |	push   <
  SP -> ALU_LG
  TICK: 4361 PC:  61 ADDR:   0 MEM_OUT: 400000 ACC: 0 LG_ALU: 3875 RG_ALU:   0 SP: 3875 ZF: 0 |	pop
  ALU_RES = ALU_LG
  TICK: 4362 PC:  61 ADDR:   0 MEM_OUT: 400000 ACC: 0 LG_ALU: 3875 RG_ALU:   0 SP: 3875 ZF: 0 |	pop
  READ MEM[ALU]
  TICK: 4363 PC:  61 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3875 RG_ALU:   0 SP: 3875 ZF: 0 |	pop
  ALU_RES = SP + 1
  TICK: 4364 PC:  61 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3875 RG_ALU:   0 SP: 3875 ZF: 0 |	pop
  ALU_RES -> SP
  TICK: 4365 PC:  61 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3875 RG_ALU:   0 SP: 3876 ZF: 0 |	pop
  MEM[ALU] -> ALU_RG
  TICK: 4365 PC:  61 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3875 RG_ALU:   0 SP: 3876 ZF: 0 |	pop
  ALU_RES = ALU_RG
  TICK: 4366 PC:  61 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3875 RG_ALU:   0 SP: 3876 ZF: 1 |	pop
  ALU_RES -> ACC
  TICK: 4367 PC:  61 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3875 RG_ALU:   0 SP: 3876 ZF: 1 |	pop
  PC + 1 -> PC
  NUM -> ALU_RG
  TICK: 4368 PC:  63 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3875 RG_ALU:   1 SP: 3876 ZF: 1 |	load
  ALU_RES = ALU_RG
  TICK: 4369 PC:  63 ADDR:   0 MEM_OUT: 0 ACC: 0 LG_ALU: 3875 RG_ALU:   1 SP: 3876 ZF: 0 |	load
  ALU_RES -> ACC
  TICK: 4370 PC:  63 ADDR:   0 MEM_OUT: 0 ACC: 1 LG_ALU: 3875 RG_ALU:   1 SP: 3876 ZF: 0 |	load
  SP -> ALU_LG
  TICK: 4371 PC:  64 ADDR:   0 MEM_OUT: 0 ACC: 1 LG_ALU: 3876 RG_ALU:   1 SP: 3876 ZF: 0 |	push   while
  ALU_RES = SP - 1
  TICK: 4372 PC:  64 ADDR:   0 MEM_OUT: 0 ACC: 1 LG_ALU: 3876 RG_ALU:   1 SP: 3876 ZF: 0 |	push   while
  ALU_RES -> SP
  TICK: 4373 PC:  64 ADDR:   0 MEM_OUT: 0 ACC: 1 LG_ALU: 3876 RG_ALU:   1 SP: 3875 ZF: 0 |	push   while
  WRITE ACC -> MEM[ALU]
  TICK: 4373 PC:  64 ADDR:   0 MEM_OUT: 0 ACC: 1 LG_ALU: 3876 RG_ALU:   1 SP: 3875 ZF: 0 |	push   while
  Well done!
  output_buffer: ['2', '_', '0', '0', '8', '_', '0', '0', '34', '_', '0', '0', '144', '_', '0', '0', '610', '_', '0', '0', '2584', '_', '0', '0', '10946', '_', '0', '0', '46368', '_', '0', '0', '196418', '_', '0', '0']
  2_008_0034_00144_00610_002584_0010946_0046368_00196418_00
  instr_counter:  1236 ticks: 4373

